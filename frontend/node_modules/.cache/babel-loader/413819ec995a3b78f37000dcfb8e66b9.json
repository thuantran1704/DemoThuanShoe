{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\Demo\\\\frontend\\\\src\\\\screens\\\\ProductCreateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Image, Row, Col, Toast } from 'react-bootstrap-v5';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { createProduct } from '../actions/productActions';\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductCreateScreen = ({\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(1);\n  const [images, setImages] = useState([]);\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const brandList = useSelector(state => state.brandList);\n  const {\n    brands\n  } = brandList;\n  const categoryList = useSelector(state => state.categoryList);\n  const {\n    categories\n  } = categoryList;\n  const [showA, setShowA] = useState(false);\n\n  const toggleShowA = () => setShowA(!showA);\n\n  const productCreate = useSelector(state => state.productCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate\n  } = productCreate;\n  useEffect(() => {\n    if (successCreate) {\n      dispatch({\n        type: PRODUCT_CREATE_RESET\n      });\n      history.push('/admin/productlist');\n    }\n  }, [dispatch, history, successCreate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (name.trim() === \"\") {\n      setMessage('Name must not be empty !');\n    } else if (price <= 0) {\n      setMessage('Price must be greater than 0 !');\n    } else if (images.length === 0) {\n      setMessage('Must have at least 1 image !');\n    } else if (brand.trim() === \"\") {\n      setMessage('Brand must not be empty !');\n    } else if (category.trim() === \"\") {\n      setMessage('Category must not be empty !');\n    } else if (description.trim() === \"\") {\n      setMessage('Description must not be empty !');\n    } else {\n      dispatch(createProduct(name, price, images, brand, category, countInStock, description));\n    }\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      return alert.error('File not exist!');\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n      return alert.error('File format is incorrect!');\n    }\n\n    if (file.size > 1024 * 1024 * 5) {\n      return alert.error('File too large!');\n    }\n\n    let formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('/api/upload', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    console.log(res.data);\n    setImages(oldArray => [...oldArray, res.data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/admin/productlist\",\n          className: \"btn btn-light my-3\",\n          children: \" Go Back \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), loadingCreate ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 34\n      }, this) : errorCreate ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: [\" \", message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              placeholder: \"Enter name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"price\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  type: \"number\",\n                  placeholder: \"Enter price\",\n                  value: price,\n                  min: 1,\n                  onChange: e => setPrice(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"countInStock\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Count In Stock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  disabled: true,\n                  type: \"number\",\n                  placeholder: \"Enter Count In Stock\",\n                  value: countInStock,\n                  onChange: e => setCountInStock(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image From Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 41\n            }, this), !images[0] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter image URL\",\n                value: images,\n                onChange: e => setImages[0](e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\" // label='Choose Image'\n                ,\n                custom: true,\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Image, {\n              src: images[0].url,\n              width: \"120\",\n              height: \"120\",\n              style: {\n                marginLeft: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 49\n            }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image2\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image From Right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 41\n            }, this), !images[1] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter image URL\",\n                value: images,\n                onChange: e => setImages[1](e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\" // label='Choose Image'\n                ,\n                custom: true,\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Image, {\n              src: images[1].url,\n              width: \"120\",\n              height: \"120\",\n              style: {\n                marginLeft: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 49\n            }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image3\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image From Front\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 41\n            }, this), !images[2] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter image URL\",\n                value: images,\n                onChange: e => setImages[2](e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\" // label='Choose Image'\n                ,\n                custom: true,\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Image, {\n              src: images[2].url,\n              width: \"120\",\n              height: \"120\",\n              style: {\n                marginLeft: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 49\n            }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image4\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image From Behind\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 41\n            }, this), !images[3] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter image URL\",\n                value: images,\n                onChange: e => setImages[3](e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\" // label='Choose Image'\n                ,\n                custom: true,\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Image, {\n              src: images[3].url,\n              width: \"120\",\n              height: \"120\",\n              style: {\n                marginLeft: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 49\n            }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"brand\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Brand\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  \"aria-label\": \"Floating label select example\",\n                  value: brand,\n                  onChange: e => setBrand(e.target.value),\n                  children: brands && brands.map(brand => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: `${brand._id}`,\n                    children: brand.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 237,\n                    columnNumber: 57\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              md: 5,\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"category\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Category\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 246,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                  \"aria-label\": \"Floating label select example\",\n                  value: category,\n                  onChange: e => setCategory(e.target.value),\n                  children: categories && categories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: `${category._id}`,\n                    children: category.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 57\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"textarea\",\n              type: \"text\",\n              placeholder: \"Enter description\",\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductCreateScreen, \"9SyG65H/uhPZoVOzmeddYSyYzM8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ProductCreateScreen;\nexport default ProductCreateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductCreateScreen\");","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/screens/ProductCreateScreen.js"],"names":["React","useState","useEffect","axios","Link","useDispatch","useSelector","Button","Form","Image","Row","Col","Toast","Message","Loader","FormContainer","createProduct","PRODUCT_CREATE_RESET","ProductCreateScreen","history","name","setName","price","setPrice","images","setImages","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","message","setMessage","dispatch","brandList","state","brands","categoryList","categories","showA","setShowA","toggleShowA","productCreate","loading","loadingCreate","error","errorCreate","success","successCreate","type","push","submitHandler","e","preventDefault","trim","length","uploadFileHandler","file","target","files","alert","size","formData","FormData","append","res","post","headers","console","log","data","oldArray","value","url","marginLeft","map","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form, Image, Row, Col, Toast } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductCreateScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(1)\r\n    const [images, setImages] = useState([])\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading] = useState(false)\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const brandList = useSelector(state => state.brandList)\r\n    const { brands } = brandList\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { categories } = categoryList\r\n\r\n    const [showA, setShowA] = useState(false);\r\n    const toggleShowA = () => setShowA(!showA);\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate } = productCreate\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: PRODUCT_CREATE_RESET })\r\n            history.push('/admin/productlist')\r\n        }\r\n    }, [dispatch, history, successCreate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (name.trim() === \"\") {\r\n            setMessage('Name must not be empty !')\r\n        }\r\n        else if (price <= 0) {\r\n            setMessage('Price must be greater than 0 !')\r\n        }\r\n        else if (images.length === 0) {\r\n            setMessage('Must have at least 1 image !')\r\n        }\r\n        else if (brand.trim() === \"\") {\r\n            setMessage('Brand must not be empty !')\r\n        }\r\n        else if (category.trim() === \"\") {\r\n            setMessage('Category must not be empty !')\r\n        }\r\n        else if (description.trim() === \"\") {\r\n            setMessage('Description must not be empty !')\r\n        }\r\n        else {\r\n            dispatch(createProduct(name, price, images, brand, category, countInStock, description))\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n        const file = e.target.files[0]\r\n        if (!file) {\r\n            return alert.error('File not exist!')\r\n        }\r\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\r\n            return alert.error('File format is incorrect!')\r\n        }\r\n        if (file.size > 1024 * 1024 * 5) {\r\n            return alert.error('File too large!')\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('file', file)\r\n\r\n        const res = await axios.post('/api/upload', formData, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n        console.log(res.data);\r\n        setImages(oldArray => [...oldArray, res.data])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <Link to='/admin/productlist' className='btn btn-light my-3'> Go Back </Link>\r\n\r\n                </Col>\r\n                {/* {message &&\r\n                    <Toast show={showA} onClose={toggleShowA} delay={6000} autohide bg='danger'>\r\n                        <Toast.Header>\r\n                            <strong className=\"me-auto\">Warning !</strong>\r\n\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                } */}\r\n            </Row>\r\n            <FormContainer>\r\n                <h1>Create Product</h1>\r\n                {loadingCreate ? <Loader />\r\n                    : errorCreate ? <Message variant='danger'>{errorCreate}</Message>\r\n                        : (\r\n                            <>\r\n                                {message && <Message variant='danger'> {message} </Message>}\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type='name' placeholder='Enter name' value={name}\r\n                                            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Row>\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='price'>\r\n                                                <Form.Label>Price</Form.Label>\r\n                                                <Form.Control type='number' placeholder='Enter price' value={price}\r\n                                                    min = {1}\r\n                                                    onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={1} />\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='countInStock'>\r\n                                                <Form.Label>Count In Stock</Form.Label>\r\n                                                <Form.Control disabled type='number' placeholder='Enter Count In Stock' value={countInStock}\r\n                                                    onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='image1'>\r\n                                        <Form.Label>Image From Left</Form.Label>\r\n                                        {!images[0] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[0](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[0].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n\r\n                                    <Form.Group controlId='image2'>\r\n                                        <Form.Label>Image From Right</Form.Label>\r\n                                        {!images[1] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[1](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[1].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='image3'>\r\n                                        <Form.Label>Image From Front</Form.Label>\r\n                                        {!images[2] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[2](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[2].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='image4'>\r\n                                        <Form.Label>Image From Behind</Form.Label>\r\n                                        {!images[3] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[3](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[3].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Row>\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='brand'>\r\n                                                <Form.Label>Brand</Form.Label>\r\n\r\n                                                <Form.Select aria-label=\"Floating label select example\" value={brand}\r\n                                                    onChange={(e) => setBrand(e.target.value)}>\r\n\r\n                                                    {brands && brands.map(brand => (\r\n                                                        <option value={`${brand._id}`}>{brand.name}</option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={1} />\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='category'>\r\n                                                <Form.Label>Category</Form.Label>\r\n\r\n                                                <Form.Select aria-label=\"Floating label select example\" value={category}\r\n                                                    onChange={(e) => setCategory(e.target.value)}>\r\n\r\n                                                    {categories && categories.map(category => (\r\n                                                        <option value={`${category._id}`}>{category.name}</option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='description'>\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control as='textarea' type='text' placeholder='Enter description' value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Button className=\"btn btn-primary\" type='submit' variant='primary'\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                </Form>\r\n                            </>\r\n                        )}\r\n            </FormContainer>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductCreateScreen"]},"metadata":{},"sourceType":"module"}