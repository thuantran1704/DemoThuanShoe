{"ast":null,"code":"import _slicedToArray from\"D:/projects React/proShop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{useDispatch,useSelector}from'react-redux';import{Row,Col,Button,Form}from'react-bootstrap';import FormContainer from'../components/FormContainer';import CheckoutSteps from'../components/CheckoutSteps';import{savePaymentMethod}from'../actions/cartActions';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var PaymentScreen=function PaymentScreen(_ref){var history=_ref.history;var cart=useSelector(function(state){return state.cart;});var shippingAddress=cart.shippingAddress;if(!shippingAddress){history.push('/shipping');}var _useState=useState('PayPal'),_useState2=_slicedToArray(_useState,2),paymentMethod=_useState2[0],setPaymentMethod=_useState2[1];var dispatch=useDispatch();var submitHandler=function submitHandler(e){e.preventDefault();// Dispatch \ndispatch(savePaymentMethod(paymentMethod));history.push('/placeorder');};return/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(CheckoutSteps,{step1:true,step2:true,step3:true}),/*#__PURE__*/_jsx(\"h1\",{children:\"Payment Method\"}),/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{children:[/*#__PURE__*/_jsx(Form.Label,{as:\"legend\",children:\"Select Method\"}),/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"PayPal or Credit Card\",id:\"PayPal\",name:\"paymentMethod\",value:\"PayPal\",checked:true,onChange:function onChange(e){return setPaymentMethod(e.target.value);}})}),/*#__PURE__*/_jsx(Col,{children:/*#__PURE__*/_jsx(Form.Check,{type:\"radio\",label:\"Ship COD\",id:\"ShipCOD\",name:\"paymentMethod\",value:\"ShipCOD\",onChange:function onChange(e){return setPaymentMethod(e.target.value);}})})]})]}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Continue\"})]})]});};export default PaymentScreen;","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/screens/PaymentScreen.js"],"names":["React","useState","useDispatch","useSelector","Row","Col","Button","Form","FormContainer","CheckoutSteps","savePaymentMethod","PaymentScreen","history","cart","state","shippingAddress","push","paymentMethod","setPaymentMethod","dispatch","submitHandler","e","preventDefault","target","value"],"mappings":"yJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,GAAT,CAAcC,GAAd,CAAmBC,MAAnB,CAA2BC,IAA3B,KAAuC,iBAAvC,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,MAAOC,CAAAA,aAAP,KAA0B,6BAA1B,CACA,OAASC,iBAAT,KAAkC,wBAAlC,C,wFAEA,GAAMC,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,MAAiB,IAAdC,CAAAA,OAAc,MAAdA,OAAc,CACnC,GAAMC,CAAAA,IAAI,CAAGV,WAAW,CAAC,SAAAW,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAV,EAAN,CAAxB,CACA,GAAQE,CAAAA,eAAR,CAA4BF,IAA5B,CAAQE,eAAR,CAEA,GAAI,CAACA,eAAL,CAAsB,CAClBH,OAAO,CAACI,IAAR,CAAa,WAAb,EACH,CAED,cAA0Cf,QAAQ,CAAC,QAAD,CAAlD,wCAAOgB,aAAP,eAAsBC,gBAAtB,eAEA,GAAMC,CAAAA,QAAQ,CAAGjB,WAAW,EAA5B,CAEA,GAAMkB,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,CAAD,CAAO,CACzBA,CAAC,CAACC,cAAF,GACA;AACAH,QAAQ,CAACT,iBAAiB,CAACO,aAAD,CAAlB,CAAR,CACAL,OAAO,CAACI,IAAR,CAAa,aAAb,EACH,CALD,CAOA,mBACI,MAAC,aAAD,yBACI,KAAC,aAAD,EAAe,KAAK,KAApB,CAAqB,KAAK,KAA1B,CAA2B,KAAK,KAAhC,EADJ,cAEI,sCAFJ,cAGI,MAAC,IAAD,EAAM,QAAQ,CAAEI,aAAhB,wBACI,MAAC,IAAD,CAAM,KAAN,yBACI,KAAC,IAAD,CAAM,KAAN,EAAY,EAAE,CAAC,QAAf,2BADJ,cAII,MAAC,GAAD,yBACI,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CACI,KAAK,CAAC,uBADV,CAEI,EAAE,CAAC,QAFP,CAGI,IAAI,CAAC,eAHT,CAII,KAAK,CAAC,QAJV,CAKI,OAAO,KALX,CAKY,QAAQ,CAAE,kBAACC,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EALtB,EADJ,EADJ,cAUI,KAAC,GAAD,wBACI,KAAC,IAAD,CAAM,KAAN,EAAY,IAAI,CAAC,OAAjB,CACI,KAAK,CAAC,UADV,CAEI,EAAE,CAAC,SAFP,CAGI,IAAI,CAAC,eAHT,CAII,KAAK,CAAC,SAJV,CAKI,QAAQ,CAAE,kBAACH,CAAD,QAAOH,CAAAA,gBAAgB,CAACG,CAAC,CAACE,MAAF,CAASC,KAAV,CAAvB,EALd,EADJ,EAVJ,GAJJ,GADJ,cA2BI,KAAC,MAAD,EAAQ,IAAI,CAAC,QAAb,CAAsB,OAAO,CAAC,SAA9B,sBA3BJ,GAHJ,GADJ,CAqCH,CAxDD,CA0DA,cAAeb,CAAAA,aAAf","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form } from 'react-bootstrap'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutSteps from '../components/CheckoutSteps'\r\nimport { savePaymentMethod } from '../actions/cartActions'\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n    const cart = useSelector(state => state.cart)\r\n    const { shippingAddress } = cart\r\n\r\n    if (!shippingAddress) {\r\n        history.push('/shipping')\r\n    }\r\n\r\n    const [paymentMethod, setPaymentMethod] = useState('PayPal')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        // Dispatch \r\n        dispatch(savePaymentMethod(paymentMethod))\r\n        history.push('/placeorder')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutSteps step1 step2 step3 />\r\n            <h1>Payment Method</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group>\r\n                    <Form.Label as='legend'>\r\n                        Select Method\r\n                    </Form.Label>\r\n                    <Row>\r\n                        <Col>\r\n                            <Form.Check type='radio'\r\n                                label='PayPal or Credit Card'\r\n                                id='PayPal'\r\n                                name='paymentMethod'\r\n                                value='PayPal'\r\n                                checked onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                            </Form.Check>\r\n                        </Col>\r\n                        <Col>\r\n                            <Form.Check type='radio'\r\n                                label='Ship COD'\r\n                                id='ShipCOD'\r\n                                name='paymentMethod'\r\n                                value='ShipCOD'\r\n                                onChange={(e) => setPaymentMethod(e.target.value)}>\r\n                            </Form.Check>\r\n                        </Col>\r\n                    </Row>\r\n                </Form.Group>\r\n\r\n                <Button type='submit' variant='primary'>\r\n                    Continue\r\n                </Button>\r\n            </Form>\r\n        </FormContainer >\r\n    )\r\n}\r\n\r\nexport default PaymentScreen\r\n"]},"metadata":{},"sourceType":"module"}