{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { producListReducer, producDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  productList: producListReducer,\n  productDetails: producDetailsReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderCreate: orderCreateReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","producListReducer","producDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","userUpdateProfileReducer","orderCreateReducer","reducer","productList","productDetails","cart","userLogin","userRegister","userDetail","userUpdateProfile","orderCreate","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,4BAAxD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SACIC,gBADJ,EAEIC,mBAFJ,EAGIC,iBAHJ,EAIIC,wBAJJ,QAKO,yBALP;AAMA,SAASC,kBAAT,QAAmC,0BAAnC;AAGA,MAAMC,OAAO,GAAGZ,eAAe,CAAC;AAC5Ba,EAAAA,WAAW,EAAET,iBADe;AAE5BU,EAAAA,cAAc,EAAET,oBAFY;AAG5BU,EAAAA,IAAI,EAAET,WAHsB;AAI5BU,EAAAA,SAAS,EAAET,gBAJiB;AAK5BU,EAAAA,YAAY,EAAET,mBALc;AAM5BU,EAAAA,UAAU,EAAET,iBANgB;AAO5BU,EAAAA,iBAAiB,EAAET,wBAPS;AAQ5BU,EAAAA,WAAW,EAAGT;AARc,CAAD,CAA/B;AAYA,MAAMU,oBAAoB,GACtBC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACIC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADJ,GAEM,EAHV;AAKA,MAAMG,mBAAmB,GACrBJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IACMC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADN,GAEM,IAHV;AAKA,MAAMI,0BAA0B,GAC5BL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IACMC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CADN,GAEM,EAHV;AAKA,MAAMK,YAAY,GAAG;AACjBb,EAAAA,IAAI,EAAE;AACFc,IAAAA,SAAS,EAAER,oBADT;AAEFS,IAAAA,eAAe,EAAEH;AAFf,GADW;AAKjBX,EAAAA,SAAS,EAAE;AAAEe,IAAAA,QAAQ,EAAEL;AAAZ;AALM,CAArB;AAQA,MAAMM,UAAU,GAAG,CAAC9B,KAAD,CAAnB;AAEA,MAAM+B,KAAK,GAAGlC,WAAW,CAACa,OAAD,EAAUgB,YAAV,EACrBzB,mBAAmB,CAACF,eAAe,CAAC,GAAG+B,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { producListReducer, producDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailReducer,\r\n    userUpdateProfileReducer\r\n} from './reducers/userReducers'\r\nimport { orderCreateReducer } from './reducers/orderReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n    productList: producListReducer,\r\n    productDetails: producDetailsReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetail: userDetailReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderCreate : orderCreateReducer\r\n\r\n})\r\n\r\nconst cartItemsFromStorage =\r\n    localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems'))\r\n        : []\r\n\r\nconst userInfoFromStorage =\r\n    localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null\r\n\r\nconst shippingAddressFromStorage =\r\n    localStorage.getItem('shippingAddress')\r\n        ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n        : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}