{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\proShop\\\\frontend\\\\src\\\\screens\\\\UserListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listUsers, deleteUser } from '../actions/userActions';\nimport Meta from '../components/Meta';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst UserListScreen = ({\n  history\n}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const userList = useSelector(state => state.userList);\n  const {\n    loading,\n    error,\n    users,\n    count\n  } = userList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  const userDelete = useSelector(state => state.userDelete);\n  const {\n    success: successDelete\n  } = userDelete;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listUsers());\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, successDelete, userInfo]);\n\n  const deleteHandler = id => {\n    if (window.confirm('Are you sure ?')) {\n      dispatch(deleteUser(id));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: 'Manager Users'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Users \", count && `(${count})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 27\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(Table, {\n      striped: true,\n      bordered: true,\n      hover: true,\n      responsive: true,\n      className: \"table-sm\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"NAME\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"EMAIL\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"ADMIN\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"METHOD\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: `mailto:${user.email}`,\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isAdmin ? /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-check\",\n              style: {\n                color: 'green'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 69\n            }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n              className: \"fas fa-times\",\n              style: {\n                color: 'red'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 60\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(LinkContainer, {\n              to: `/admin/user/${user._id}/edit`,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"light\",\n                className: \"btn-sm\",\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fas fa-edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 57\n                }, this), \"EDIT\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              variant: \"danger\",\n              className: \"btn-sm\",\n              onClick: () => deleteHandler(user._id),\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 53\n              }, this), ' ', \"DELETE\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 49\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 45\n          }, this)]\n        }, user._id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserListScreen, \"YNOO+Hw1dkxHS+3f09oLaAPEAGA=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = UserListScreen;\nexport default UserListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserListScreen\");","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/screens/UserListScreen.js"],"names":["React","useEffect","LinkContainer","useDispatch","useSelector","Table","Button","Message","Loader","listUsers","deleteUser","Meta","UserListScreen","history","dispatch","userList","state","loading","error","users","count","userLogin","userInfo","userDelete","success","successDelete","isAdmin","push","deleteHandler","id","window","confirm","map","user","_id","name","email","color"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser } from '../actions/userActions'\r\nimport Meta from '../components/Meta'\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users, count } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDelete = useSelector(state => state.userDelete)\r\n    const { success: successDelete } = userDelete\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        }\r\n        else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDelete, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure ?')) {\r\n            dispatch(deleteUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Meta title={'Manager Users'} />\r\n\r\n            <h1>Users {count && `(${count})`}</h1>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error}</Message>\r\n                        : (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>EMAIL</th>\r\n                                        <th>ADMIN</th>\r\n                                        <th>METHOD</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.map(user => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>)\r\n                                                        : (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                    <Button variant='light' className='btn-sm'>\r\n                                                        <i className='fas fa-edit'></i>\r\n                                                        EDIT\r\n                                                    </Button>\r\n                                                </LinkContainer>\r\n                                                <Button variant='danger' className='btn-sm'\r\n                                                    onClick={() => deleteHandler(user._id)}>\r\n                                                    <i className='fas fa-trash'></i>\r\n                                                    {' '}DELETE\r\n                                                </Button>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n"]},"metadata":{},"sourceType":"module"}