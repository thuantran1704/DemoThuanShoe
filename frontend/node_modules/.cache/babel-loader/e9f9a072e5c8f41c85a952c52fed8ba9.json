{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { producListReducer, producDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer, productBrandReducer, productTopRatedByBrandReducer, productSameReducer, productTopRatedByCategoryReducer, productCategoryReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderCancelReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nimport { brandListReducer, brandDeleteReducer, brandCreateReducer, brandUpdateReducer, brandDetailsReducer } from './reducers/brandReducers';\nimport { categoryListReducer, categoryDeleteReducer, categoryCreateReducer, categoryUpdateReducer, categoryDetailsReducer } from './reducers/categoryReducers';\nconst reducer = combineReducers({\n  brandList: brandListReducer,\n  brandDetails: brandDetailsReducer,\n  brandDelete: brandDeleteReducer,\n  brandCreate: brandCreateReducer,\n  brandUpdate: brandUpdateReducer,\n  categoryList: categoryListReducer,\n  categoryDetailsReducer: categoryDetailsReducer,\n  categoryDelete: categoryDeleteReducer,\n  categoryCreate: categoryCreateReducer,\n  categoryUpdate: categoryUpdateReducer,\n  productList: producListReducer,\n  productDetails: producDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  productBrand: productBrandReducer,\n  productTopRatedByBrand: productTopRatedByBrandReducer,\n  productSame: productSameReducer,\n  productCategory: productCategoryReducer,\n  productTopRatedByCategory: productTopRatedByCategoryReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderCancel: orderCancelReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","producListReducer","producDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","productBrandReducer","productTopRatedByBrandReducer","productSameReducer","productTopRatedByCategoryReducer","productCategoryReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderCancelReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","brandListReducer","brandDeleteReducer","brandCreateReducer","brandUpdateReducer","brandDetailsReducer","categoryListReducer","categoryDeleteReducer","categoryCreateReducer","categoryUpdateReducer","categoryDetailsReducer","reducer","brandList","brandDetails","brandDelete","brandCreate","brandUpdate","categoryList","categoryDelete","categoryCreate","categoryUpdate","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","productBrand","productTopRatedByBrand","productSame","productCategory","productTopRatedByCategory","cart","userLogin","userRegister","userDetail","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderCancel","orderDetails","orderPay","orderDeliver","orderListMy","orderList","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    producListReducer,\r\n    producDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n    productBrandReducer,\r\n    productTopRatedByBrandReducer,\r\n    productSameReducer,\r\n    productTopRatedByCategoryReducer,\r\n    productCategoryReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderCancelReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n\r\n} from './reducers/orderReducers'\r\n\r\nimport {\r\n    brandListReducer,\r\n    brandDeleteReducer,\r\n    brandCreateReducer,\r\n    brandUpdateReducer,\r\n    brandDetailsReducer\r\n} from './reducers/brandReducers'\r\n\r\nimport {\r\n    categoryListReducer,\r\n    categoryDeleteReducer,\r\n    categoryCreateReducer,\r\n    categoryUpdateReducer,\r\n    categoryDetailsReducer\r\n} from './reducers/categoryReducers'\r\n\r\n\r\nconst reducer = combineReducers({\r\n\r\n    brandList:brandListReducer,\r\n    brandDetails:brandDetailsReducer,\r\n    brandDelete:brandDeleteReducer,\r\n    brandCreate:brandCreateReducer,\r\n    brandUpdate:brandUpdateReducer,\r\n\r\n    categoryList:categoryListReducer,\r\n    categoryDetailsReducer:categoryDetailsReducer,\r\n    categoryDelete:categoryDeleteReducer,\r\n    categoryCreate:categoryCreateReducer,\r\n    categoryUpdate:categoryUpdateReducer,\r\n\r\n    productList: producListReducer,\r\n    productDetails: producDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    productBrand: productBrandReducer,\r\n    productTopRatedByBrand: productTopRatedByBrandReducer,\r\n    productSame:productSameReducer,\r\n    productCategory:productCategoryReducer,\r\n    productTopRatedByCategory:productTopRatedByCategoryReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetail: userDetailReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderCancel:orderCancelReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst cartItemsFromStorage =\r\n    localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems'))\r\n        : []\r\n\r\nconst userInfoFromStorage =\r\n    localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null\r\n\r\nconst shippingAddressFromStorage =\r\n    localStorage.getItem('shippingAddress')\r\n        ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n        : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}