{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\Demo\\\\frontend\\\\src\\\\screens\\\\BrandCreateScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Form, Image, Row, Col, Toast } from 'react-bootstrap-v5';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport FormContainer from '../components/FormContainer';\nimport { createBrand } from '../actions/brandActions';\nimport { BRAND_CREATE_RESET } from '../constants/brandConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst BrandCreateScreen = ({\n  history\n}) => {\n  _s();\n\n  const [name, setName] = useState('');\n  const [images, setImages] = useState([]);\n  const [description, setDescription] = useState('');\n  const [uploading] = useState(false);\n  const [message, setMessage] = useState(null);\n  const dispatch = useDispatch();\n  const brandCreate = useSelector(state => state.brandCreate);\n  const {\n    loading: loadingCreate,\n    error: errorCreate,\n    success: successCreate\n  } = brandCreate;\n  useEffect(() => {\n    if (successCreate) {\n      dispatch({\n        type: BRAND_CREATE_RESET\n      });\n      history.push('/admin/brandlist');\n    }\n  }, [dispatch, history, successCreate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n\n    if (name.trim() === \"\") {\n      setMessage('Name must not be empty !');\n    } else if (images.length === 0) {\n      setMessage('Images must not be empty !');\n    } else if (description.trim() === \"\") {\n      setMessage('Description must not be empty !');\n    } else {\n      dispatch(createBrand(name, description, images));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/brandlist\",\n      className: \"btn btn-light my-3\",\n      children: \" Go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Create Brand\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), loadingCreate ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 34\n      }, this) : errorCreate ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [message && /*#__PURE__*/_jsxDEV(Message, {\n          variant: \"danger\",\n          children: [\" \", message, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 45\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitHandler,\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"name\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"name\",\n              placeholder: \"Enter name\",\n              value: name,\n              onChange: e => setName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"description\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              type: \"text\",\n              placeholder: \"Enter description\",\n              value: description,\n              onChange: e => setDescription(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            controlId: \"image1\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Image From Left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 41\n            }, this), !images[0] ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                placeholder: \"Enter image URL\",\n                value: images,\n                onChange: e => setImages(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 53\n              }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n                id: \"image-file\" // label='Choose Image'\n                ,\n                custom: true,\n                onChange: uploadFileHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 53\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(Image, {\n              src: images[0].url,\n              width: \"120\",\n              height: \"120\",\n              style: {\n                marginLeft: \"20px\"\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 49\n            }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 55\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            className: \"btn btn-primary\",\n            type: \"submit\",\n            variant: \"primary\",\n            children: \"Create\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(BrandCreateScreen, \"TOWhBTosYemRQ+4ruYUgVwtOXP8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = BrandCreateScreen;\nexport default BrandCreateScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"BrandCreateScreen\");","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/screens/BrandCreateScreen.js"],"names":["React","useState","useEffect","axios","Link","useDispatch","useSelector","Button","Form","Image","Row","Col","Toast","Message","Loader","FormContainer","createBrand","BRAND_CREATE_RESET","BrandCreateScreen","history","name","setName","images","setImages","description","setDescription","uploading","message","setMessage","dispatch","brandCreate","state","loading","loadingCreate","error","errorCreate","success","successCreate","type","push","submitHandler","e","preventDefault","trim","length","target","value","uploadFileHandler","url","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form, Image, Row, Col, Toast } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createBrand } from '../actions/brandActions'\r\nimport { BRAND_CREATE_RESET } from '../constants/brandConstants'\r\n\r\nconst BrandCreateScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [images, setImages] = useState([])\r\n    const [description, setDescription] = useState('')\r\n    const [uploading] = useState(false)\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const brandCreate = useSelector(state => state.brandCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate } = brandCreate\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: BRAND_CREATE_RESET })\r\n            history.push('/admin/brandlist')\r\n        }\r\n    }, [dispatch, history, successCreate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (name.trim() === \"\") {\r\n            setMessage('Name must not be empty !')\r\n        }\r\n        else if (images.length === 0) {\r\n            setMessage('Images must not be empty !')\r\n        }\r\n        else if (description.trim() === \"\") {\r\n            setMessage('Description must not be empty !')\r\n        }\r\n        else {\r\n            dispatch(createBrand(name, description, images))\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    return (\r\n        <>\r\n\r\n            <Link to='/admin/brandlist' className='btn btn-light my-3'> Go Back </Link>\r\n            <FormContainer>\r\n                <h1>Create Brand</h1>\r\n                {loadingCreate ? <Loader />\r\n                    : errorCreate ? <Message variant='danger'>{errorCreate}</Message>\r\n                        : (\r\n                            <>\r\n                                {message && <Message variant='danger'> {message} </Message>}\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type='name' placeholder='Enter name' value={name}\r\n                                            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='description'>\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control type='text' placeholder='Enter description' value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='image1'>\r\n                                        <Form.Label>Image From Left</Form.Label>\r\n                                        {!images[0] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages(e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[0].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Button className=\"btn btn-primary\" type='submit' variant='primary'\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                </Form>\r\n                            </>\r\n                        )}\r\n            </FormContainer>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default BrandCreateScreen"]},"metadata":{},"sourceType":"module"}