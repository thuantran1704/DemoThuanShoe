{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\Github\\\\thuan_shoe\\\\frontend\\\\src\\\\screens\\\\ProductEditScreen.js\",\n    _s = $RefreshSig$();\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductEditScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const productId = match.params.id;\n  const [name, setName] = useState('');\n  const [price, setPrice] = useState(0);\n  const [images, setImages] = useState([]);\n  const [brand, setBrand] = useState('');\n  const [category, setCategory] = useState('');\n  const [countInStock, setCountInStock] = useState(0);\n  const [description, setDescription] = useState('');\n  const [uploading] = useState(false);\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productUpdate = useSelector(state => state.productUpdate);\n  const {\n    loading: loadingUpdate,\n    error: errorUpdate,\n    success: successUpdate\n  } = productUpdate;\n  useEffect(() => {\n    if (successUpdate) {\n      dispatch({\n        type: PRODUCT_UPDATE_RESET\n      });\n      history.push('/admin/productlist');\n    } else {\n      if (product._id !== productId) {\n        dispatch(listProductDetails(productId));\n      } else {\n        setName(product.name);\n        setPrice(product.price);\n        setBrand(product.brand);\n        setImages(product.images);\n        setCategory(product.category);\n        setCountInStock(product.countInStock);\n        setDescription(product.description);\n      }\n    }\n  }, [dispatch, history, productId, product, successUpdate]);\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(updateProduct(productId, name, price, images, brand, category, countInStock, description));\n  };\n\n  const uploadFileHandler = async e => {\n    const file = e.target.files[0];\n\n    if (!file) {\n      return alert.error('File not exist!');\n    }\n\n    if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\n      return alert.error('File format is incorrect!');\n    }\n\n    if (file.size > 1024 * 1024 * 5) {\n      return alert.error('File too large!');\n    }\n\n    let formData = new FormData();\n    formData.append('file', file);\n    const res = await axios.post('/api/upload', formData, {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    });\n    console.log(res.data);\n    setImages(oldArray => [...oldArray, res.data]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: \"/admin/productlist\",\n      className: \"btn btn-light my-3\",\n      children: \" Go Back \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Edit Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), loadingUpdate && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 35\n      }, this), errorUpdate && /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: errorUpdate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 33\n      }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 28\n      }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n        variant: \"danger\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 31\n      }, this) : /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: submitHandler,\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"name\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"name\",\n            placeholder: \"Enter name\",\n            value: name,\n            onChange: e => setName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"price\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Price\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter price\",\n            value: price,\n            onChange: e => setPrice(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"image1\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Image From Left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter image URL\",\n            value: images,\n            onChange: e => setImages[0](e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.File, {\n            id: \"image-file\" // label='Choose Image'\n            ,\n            custom: true,\n            onChange: uploadFileHandler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 37\n          }, this), uploading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 51\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"brand\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Brand\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter brand\",\n            value: brand,\n            onChange: e => setBrand(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"category\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Category\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter category\",\n            value: category,\n            onChange: e => setCategory(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"countInStock\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Count In Stock\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"number\",\n            placeholder: \"Enter Count In Stock\",\n            value: countInStock,\n            onChange: e => setCountInStock(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"description\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"text\",\n            placeholder: \"Enter description\",\n            value: description,\n            onChange: e => setDescription(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"primary\",\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductEditScreen, \"OKif89zVAr/OTaACG25qvx6K1+4=\", true);\n\n_c = ProductEditScreen;\nexport default ProductEditScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductEditScreen\");","map":{"version":3,"sources":["D:/projects React/Github/thuan_shoe/frontend/src/screens/ProductEditScreen.js"],"names":["ProductEditScreen","match","history","productId","params","id","name","setName","useState","price","setPrice","images","setImages","brand","setBrand","category","setCategory","countInStock","setCountInStock","description","setDescription","uploading","dispatch","useDispatch","productDetails","useSelector","state","loading","error","product","productUpdate","loadingUpdate","errorUpdate","success","successUpdate","useEffect","type","PRODUCT_UPDATE_RESET","push","_id","listProductDetails","submitHandler","e","preventDefault","updateProduct","uploadFileHandler","file","target","files","alert","size","formData","FormData","append","res","axios","post","headers","console","log","data","oldArray","value"],"mappings":"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","sourcesContent":["\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n    const productId = match.params.id\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [images, setImages] = useState([])\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n    \r\n    const productUpdate = useSelector(state => state.productUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: PRODUCT_UPDATE_RESET })\r\n            history.push('/admin/productlist')\r\n        } else {\r\n            if (product._id !== productId) {\r\n                dispatch(listProductDetails(productId))\r\n            } else {\r\n                setName(product.name)\r\n                setPrice(product.price)\r\n                setBrand(product.brand)\r\n                setImages(product.images)\r\n                setCategory(product.category)\r\n                setCountInStock(product.countInStock)\r\n                setDescription(product.description)\r\n            }\r\n        }\r\n    }, [dispatch, history, productId, product, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(updateProduct(productId, name, price, images, brand, category, countInStock, description))\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n        const file = e.target.files[0]\r\n        if (!file) {\r\n            return alert.error('File not exist!')\r\n        }\r\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\r\n            return alert.error('File format is incorrect!')\r\n        }\r\n        if (file.size > 1024 * 1024 * 5) {\r\n            return alert.error('File too large!')\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('file', file)\r\n\r\n        const res = await axios.post('/api/upload', formData, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n        console.log(res.data);\r\n        setImages(oldArray => [...oldArray, res.data])\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/productlist' className='btn btn-light my-3'> Go Back </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit Product</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='name' placeholder='Enter name' value={name}\r\n                                        onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='price'>\r\n                                    <Form.Label>Price</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter price' value={price}\r\n                                        onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='image1'>\r\n                                    <Form.Label>Image From Left</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                        onChange={(e) => setImages[0](e.target.value)}></Form.Control>\r\n                                    <Form.File id='image-file'\r\n                                        // label='Choose Image'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}>\r\n\r\n                                    </Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                {/* <Form.Group controlId='image2'>\r\n                                    <Form.Label>Image From Right</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                        onChange={(e) => setImages[1](e.target.value)}> </Form.Control>\r\n                                    <Form.File id='image-file'\r\n                                        // label='Choose Image'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}>\r\n\r\n                                    </Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='image3'>\r\n                                    <Form.Label>Image From Front</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                        onChange={(e) => setImages[2](e.target.value)}></Form.Control>\r\n                                    <Form.File id='image-file'\r\n                                        // label='Choose Image'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}>\r\n\r\n                                    </Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='image4'>\r\n                                    <Form.Label>Image From Behind</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                        onChange={(e) => setImages[3](e.target.value)}></Form.Control>\r\n                                    <Form.File id='image-file'\r\n                                        // label='Choose Image'\r\n                                        custom\r\n                                        onChange={uploadFileHandler}>\r\n\r\n                                    </Form.File>\r\n                                    {uploading && <Loader />}\r\n                                </Form.Group> */}\r\n\r\n                                <Form.Group controlId='brand'>\r\n                                    <Form.Label>Brand</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter brand' value={brand}\r\n                                        onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='category'>\r\n                                    <Form.Label>Category</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter category' value={category}\r\n                                        onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='countInStock'>\r\n                                    <Form.Label>Count In Stock</Form.Label>\r\n                                    <Form.Control type='number' placeholder='Enter Count In Stock' value={countInStock}\r\n                                        onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='description'>\r\n                                    <Form.Label>Description</Form.Label>\r\n                                    <Form.Control type='text' placeholder='Enter description' value={description}\r\n                                        onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n                                </Button>\r\n                            </Form>\r\n                        )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductEditScreen"]},"metadata":{},"sourceType":"module"}