{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\Demo\\\\frontend\\\\src\\\\screens\\\\DashboardScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table } from 'react-bootstrap-v5';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { Bar } from 'react-chartjs-2';\nimport { listStatisticProductSold } from '../actions/statisticActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardScreen = ({}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    loading,\n    error,\n    statisticProductSolds\n  } = useSelector(state => state.statisticProductSoldList);\n  useEffect(() => {\n    dispatch(listStatisticProductSold());\n  }, [dispatch]);\n  const names = statisticProductSolds && statisticProductSolds.map(item => item.name.slice(0, 20));\n  const solds = statisticProductSolds && statisticProductSolds.map(item => item.sold);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 27\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"table-secondary\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"th\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Statistical table of the most sold products\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(Bar, {\n                data: {\n                  labels: names,\n                  datasets: [{\n                    label: \"Sold\",\n                    backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n                    borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n                    borderWidth: 1,\n                    data: solds\n                  }]\n                },\n                options: {\n                  legend: {\n                    display: false\n                  },\n                  title: {\n                    display: true,\n                    text: \"Alooo aloooo\"\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 33\n      }, this)\n    }, void 0, false)\n  }, void 0, false);\n};\n\n_s(DashboardScreen, \"hLfFCd3hG4g30FaMOV4DwctXYkA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DashboardScreen;\nexport default DashboardScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardScreen\");","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/screens/DashboardScreen.js"],"names":["React","useEffect","useDispatch","useSelector","Table","Message","Loader","Bar","listStatisticProductSold","DashboardScreen","dispatch","loading","error","statisticProductSolds","state","statisticProductSoldList","names","map","item","name","slice","solds","sold","labels","datasets","label","backgroundColor","borderColor","borderWidth","data","legend","display","title","text"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { listStatisticProductSold } from '../actions/statisticActions'\r\n\r\nconst DashboardScreen = ({ }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, statisticProductSolds } = useSelector(state => state.statisticProductSoldList)\r\n\r\n    useEffect(() => {\r\n        dispatch(listStatisticProductSold())\r\n    }, [dispatch])\r\n\r\n    const names = statisticProductSolds && statisticProductSolds.map((item) => (item.name.slice(0, 20)));\r\n    const solds = statisticProductSolds && statisticProductSolds.map((item) => (item.sold));\r\n    return (\r\n        <>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error} </Message>\r\n                        : (\r\n                            <>\r\n                                <Table striped bordered hover responsive className='table-secondary'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>\r\n                                                <h2>\r\n                                                    Statistical table of the most sold products\r\n                                                </h2>\r\n                                            </th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <Bar\r\n                                                    data={{\r\n                                                        labels: names,\r\n                                                        datasets: [\r\n                                                            {\r\n                                                                label: \"Sold\",\r\n                                                                backgroundColor: [\r\n                                                                    'rgba(255, 99, 132, 0.2)',\r\n                                                                    'rgba(54, 162, 235, 0.2)',\r\n                                                                    'rgba(255, 206, 86, 0.2)',\r\n                                                                    'rgba(75, 192, 192, 0.2)',\r\n                                                                    'rgba(153, 102, 255, 0.2)',\r\n                                                                    'rgba(255, 159, 64, 0.2)'\r\n                                                                ],\r\n                                                                borderColor: [\r\n                                                                    'rgba(255, 99, 132, 1)',\r\n                                                                    'rgba(54, 162, 235, 1)',\r\n                                                                    'rgba(255, 206, 86, 1)',\r\n                                                                    'rgba(75, 192, 192, 1)',\r\n                                                                    'rgba(153, 102, 255, 1)',\r\n                                                                    'rgba(255, 159, 64, 1)'\r\n                                                                ],\r\n                                                                borderWidth: 1,\r\n                                                                data: solds\r\n                                                            }\r\n                                                        ]\r\n                                                    }}\r\n                                                    options={{\r\n                                                        legend: { display: false },\r\n                                                        title: {\r\n                                                            display: true,\r\n                                                            text: \"Alooo aloooo\"\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n\r\n                                            </td>\r\n                                        </tr>\r\n                                    </tbody>\r\n                                </Table>\r\n                            </>\r\n                        )\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default DashboardScreen;\r\n"]},"metadata":{},"sourceType":"module"}