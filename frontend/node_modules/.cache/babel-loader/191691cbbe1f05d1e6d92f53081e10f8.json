{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\proShop\\\\frontend\\\\src\\\\screens\\\\OrderListScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Table, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport Paginate from '../components/Paginate';\nimport { listOrders } from '../actions/orderActions';\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants';\nimport Meta from '../components/Meta';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderListScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const pageNumber = match.params.pageNumber || 1;\n  const dispatch = useDispatch();\n  const orderList = useSelector(state => state.orderList);\n  const {\n    loading,\n    error,\n    orders,\n    pages,\n    page,\n    count\n  } = orderList;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (userInfo && userInfo.isAdmin) {\n      dispatch(listOrders(pageNumber));\n      dispatch({\n        type: ORDER_DETAILS_RESET\n      });\n    } else {\n      history.push('/login');\n    }\n  }, [dispatch, history, userInfo, pageNumber]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Meta, {\n      title: 'Manager Orders'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Orders \", count && `(${count})`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 27\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        striped: true,\n        bordered: true,\n        hover: true,\n        responsive: true,\n        className: \"table-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"USER\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DATE\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"TOTAL\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"METHOD\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"PAID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"DELIVERED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: orders.map(order => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.user && order.user.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.createdAt.substring(0, 10)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.totalPrice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.paymentMethod\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isPaid ? order.paidAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.isDelivered ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: order.paymentMethodorder.isPaid ? order.deliveredAt.substring(0, 10) : /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-times\",\n                style: {\n                  color: 'red'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 64\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(LinkContainer, {\n                to: `/order/${order._id}`,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"light\",\n                  className: \"btn-sm\",\n                  children: \"Details\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 57\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 49\n            }, this)]\n          }, order._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 45\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 37\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(Paginate, {\n        pages: pages,\n        page: page,\n        isAdmin: true,\n        details: \"orderlist\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n\n_s(OrderListScreen, \"T22Ya5guJBYtT2WBadWLHdx/0BQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = OrderListScreen;\nexport default OrderListScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderListScreen\");","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/screens/OrderListScreen.js"],"names":["React","useEffect","LinkContainer","useDispatch","useSelector","Table","Button","Message","Loader","Paginate","listOrders","ORDER_DETAILS_RESET","Meta","OrderListScreen","history","match","pageNumber","params","dispatch","orderList","state","loading","error","orders","pages","page","count","userLogin","userInfo","isAdmin","type","push","map","order","user","name","createdAt","substring","totalPrice","paymentMethod","isPaid","paidAt","color","isDelivered","deliveredAt","paymentMethodorder","_id"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Paginate from '../components/Paginate'\r\nimport { listOrders } from '../actions/orderActions'\r\nimport { ORDER_DETAILS_RESET } from '../constants/orderConstants'\r\nimport Meta from '../components/Meta'\r\n\r\nconst OrderListScreen = ({ history, match }) => {\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderList = useSelector(state => state.orderList)\r\n    const { loading, error, orders, pages, page, count } = orderList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listOrders(pageNumber))\r\n            dispatch({ type: ORDER_DETAILS_RESET })\r\n        } else {\r\n            history.push('/login')\r\n        }\r\n\r\n    }, [dispatch, history, userInfo, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta title={'Manager Orders'} />\r\n\r\n            <h1>Orders {count && `(${count})`}</h1>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error}</Message>\r\n                        : (\r\n                            <>\r\n                                <Table striped bordered hover responsive className='table-sm'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>USER</th>\r\n                                            <th>DATE</th>\r\n                                            <th>TOTAL</th>\r\n                                            <th>METHOD</th>\r\n                                            <th>PAID</th>\r\n                                            <th>DELIVERED</th>\r\n                                            <th></th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {orders.map(order => (\r\n                                            <tr key={order._id}>\r\n                                                <td>{order.user && order.user.name}</td>\r\n                                                <td>{order.createdAt.substring(0, 10)}</td>\r\n                                                <td>{order.totalPrice}</td>\r\n                                                <td>{order.paymentMethod}</td>\r\n\r\n                                                <td>\r\n                                                    {\r\n                                                        order.isPaid ? (order.paidAt.substring(0, 10))\r\n                                                            : (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {\r\n                                                        order.isDelivered ? (order.deliveredAt.substring(0, 10))\r\n                                                            : (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    {\r\n                                                        order.paymentMethodorder.isPaid ? (order.deliveredAt.substring(0, 10))\r\n                                                            : (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                                    }\r\n                                                </td>\r\n                                                <td>\r\n                                                    <LinkContainer to={`/order/${order._id}`}>\r\n                                                        <Button variant='light' className='btn-sm'>\r\n                                                            Details\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Paginate\r\n                                    pages={pages}\r\n                                    page={page}\r\n                                    isAdmin={true}\r\n                                    details='orderlist' />\r\n                            </>\r\n                        )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default OrderListScreen\r\n"]},"metadata":{},"sourceType":"module"}