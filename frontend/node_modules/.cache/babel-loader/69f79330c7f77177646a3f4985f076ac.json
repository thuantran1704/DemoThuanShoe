{"ast":null,"code":"import axios from 'axios';\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_DELETE_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_UPDATE_FAIL, CATEGORY_UPDATE_REQUEST, CATEGORY_UPDATE_RESET, CATEGORY_UPDATE_SUCCESS } from '../constants/categoryConstants';\nexport const listCategories = () => async dispatch => {\n  try {\n    dispatch({\n      type: CATEGORY_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(`/api/categories`);\n    dispatch({\n      type: CATEGORY_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_LIST_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const listCategoryDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        // 'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/categories/${id}`, config);\n    dispatch({\n      type: CATEGORY_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: CATEGORY_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const deleteCategory = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_DELETE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    await axios.delete(`/api/categories/${id}`, config);\n    dispatch({\n      type: CATEGORY_DELETE_SUCCESS\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CATEGORY_DELETE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const createCategory = (name, description) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/categories`, {\n      name,\n      description\n    }, config);\n    dispatch({\n      type: CATEGORY_CREATE_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CATEGORY_CREATE_FAIL,\n      payload: message\n    });\n  }\n};\nexport const updateCategory = (categoryId, name, description) => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: CATEGORY_UPDATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/categories/${categoryId}`, {\n      categoryId,\n      name,\n      description\n    }, config);\n    dispatch({\n      type: CATEGORY_UPDATE_SUCCESS\n    });\n    dispatch({\n      type: CATEGORY_UPDATE_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: CATEGORY_UPDATE_FAIL,\n      payload: message\n    });\n  }\n};","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/actions/categoryActions.js"],"names":["axios","CATEGORY_CREATE_FAIL","CATEGORY_CREATE_REQUEST","CATEGORY_CREATE_SUCCESS","CATEGORY_DELETE_FAIL","CATEGORY_DELETE_REQUEST","CATEGORY_DELETE_SUCCESS","CATEGORY_DETAILS_FAIL","CATEGORY_DETAILS_REQUEST","CATEGORY_DETAILS_SUCCESS","CATEGORY_LIST_FAIL","CATEGORY_LIST_REQUEST","CATEGORY_LIST_SUCCESS","CATEGORY_UPDATE_FAIL","CATEGORY_UPDATE_REQUEST","CATEGORY_UPDATE_RESET","CATEGORY_UPDATE_SUCCESS","listCategories","dispatch","type","data","get","payload","error","response","message","listCategoryDetails","id","getState","userLogin","userInfo","config","headers","Authorization","token","deleteCategory","delete","createCategory","name","description","post","updateCategory","categoryId","put"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_DELETE_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_UPDATE_FAIL, CATEGORY_UPDATE_REQUEST, CATEGORY_UPDATE_RESET, CATEGORY_UPDATE_SUCCESS } from '../constants/categoryConstants'\r\n\r\nexport const listCategories = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CATEGORY_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/categories`)\r\n        dispatch({\r\n            type: CATEGORY_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listCategoryDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CATEGORY_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.get(`/api/categories/${id}`, config)\r\n        dispatch({\r\n            type: CATEGORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/categories/${id}`, config)\r\n\r\n        dispatch({\r\n            type: CATEGORY_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n       \r\n        dispatch({\r\n            type: CATEGORY_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createCategory = (name, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/categories`, { name, description }, config)\r\n\r\n        dispatch({\r\n            type: CATEGORY_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n       \r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCategory = (categoryId, name, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/categories/${categoryId}`, { categoryId, name, description }, config)\r\n\r\n        dispatch({\r\n            type: CATEGORY_UPDATE_SUCCESS,\r\n\r\n        })\r\n        \r\n        dispatch({ type: CATEGORY_UPDATE_RESET })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: CATEGORY_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}