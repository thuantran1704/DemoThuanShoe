{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\Demo\\\\frontend\\\\src\\\\screens\\\\SupplierScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, Col, Form, Row } from 'react-bootstrap-v5';\nimport FormContainer from '../components/FormContainer';\nimport CheckoutStepsAdmin from '../components/CheckoutStepsAdmin';\nimport { saveSupplier } from '../actions/receiptActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SupplierScreen = ({\n  history\n}) => {\n  _s();\n\n  const receiptCart = useSelector(state => state.receiptCart);\n  const {\n    supplier\n  } = receiptCart;\n  const [name, setName] = useState(supplier.name);\n  const [address, setAddress] = useState(supplier.address);\n  const [country, setCountry] = useState(supplier.country);\n  const [phone, setPhone] = useState(supplier.phone);\n  const dispatch = useDispatch();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    dispatch(saveSupplier({\n      name,\n      address,\n      country,\n      phone\n    }));\n    history.push('/admin/placeReceipt');\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: [/*#__PURE__*/_jsxDEV(CheckoutStepsAdmin, {\n      step1: true,\n      step2: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Supplier\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"name\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Supplier Name\",\n          value: name,\n          required: true,\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"address\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Address\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Supplier Address\",\n          value: address,\n          required: true,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"country\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Country\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"text\",\n          placeholder: \"Enter Supplier Country\",\n          value: country,\n          required: true,\n          onChange: e => setCountry(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"phone\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Phone Number\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          type: \"number\",\n          placeholder: \"Enter Supplier Phone Number\",\n          value: phone,\n          required: true,\n          onChange: e => setPhone(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          md: 5,\n          style: {\n            marginLeft: \"0%\"\n          },\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              type: \"submit\",\n              variant: \"primary\",\n              children: \"Place Receipt\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SupplierScreen, \"Eth6V7gdAUkmJ+6Zih2UojUFfys=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = SupplierScreen;\nexport default SupplierScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"SupplierScreen\");","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/screens/SupplierScreen.js"],"names":["React","useState","useDispatch","useSelector","Button","Col","Form","Row","FormContainer","CheckoutStepsAdmin","saveSupplier","SupplierScreen","history","receiptCart","state","supplier","name","setName","address","setAddress","country","setCountry","phone","setPhone","dispatch","submitHandler","e","preventDefault","push","target","value","marginLeft"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Col, Form, Row } from 'react-bootstrap-v5'\r\nimport FormContainer from '../components/FormContainer'\r\nimport CheckoutStepsAdmin from '../components/CheckoutStepsAdmin'\r\nimport { saveSupplier } from '../actions/receiptActions'\r\n\r\nconst SupplierScreen = ({ history }) => {\r\n    const receiptCart = useSelector(state => state.receiptCart)\r\n    const { supplier } = receiptCart\r\n\r\n    const [name, setName] = useState(supplier.name)\r\n    const [address, setAddress] = useState(supplier.address)\r\n    const [country, setCountry] = useState(supplier.country)\r\n    const [phone, setPhone] = useState(supplier.phone)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(saveSupplier({ name, address, country, phone }))\r\n        history.push('/admin/placeReceipt')\r\n    }\r\n\r\n    return (\r\n        <FormContainer>\r\n            <CheckoutStepsAdmin step1 step2 />\r\n            <h1>Supplier</h1>\r\n            <Form onSubmit={submitHandler}>\r\n                <Form.Group controlId='name'>\r\n                    <Form.Label>name</Form.Label>\r\n                    <Form.Control type='text'\r\n                        placeholder='Enter Supplier Name'\r\n                        value={name} required\r\n                        onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='address'>\r\n                    <Form.Label>Address</Form.Label>\r\n                    <Form.Control type='text'\r\n                        placeholder='Enter Supplier Address'\r\n                        value={address} required\r\n                        onChange={(e) => setAddress(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='country'>\r\n                    <Form.Label>Country</Form.Label>\r\n                    <Form.Control type='text'\r\n                        placeholder='Enter Supplier Country'\r\n                        value={country} required\r\n                        onChange={(e) => setCountry(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='phone'>\r\n                    <Form.Label>Phone Number</Form.Label>\r\n                    <Form.Control type='number'\r\n                        placeholder='Enter Supplier Phone Number'\r\n                        value={phone} required\r\n                        onChange={(e) => setPhone(e.target.value)}></Form.Control>\r\n                </Form.Group>\r\n\r\n                <br />\r\n                <Row>\r\n                   \r\n                    <Col md={5} style={{marginLeft: \"0%\"}}>\r\n                        <Row>\r\n                            <Button type='submit' variant='primary'>\r\n                                Place Receipt\r\n                            </Button>\r\n                        </Row>\r\n                    </Col>\r\n                \r\n                </Row>\r\n            </Form>\r\n        </FormContainer>\r\n    )\r\n}\r\n\r\nexport default SupplierScreen\r\n"]},"metadata":{},"sourceType":"module"}