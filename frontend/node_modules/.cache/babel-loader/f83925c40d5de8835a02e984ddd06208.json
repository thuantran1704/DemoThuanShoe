{"ast":null,"code":"import axios from 'axios';\nimport { RECEIPT_CANCEL_FAIL, RECEIPT_CANCEL_SUCCESS, RECEIPT_CART_ADD_ITEM, RECEIPT_CART_REMOVE_ITEM, RECEIPT_CART_SAVE_SUPPLIER, RECEIPT_CREATE_FAIL, RECEIPT_CREATE_REQUEST, RECEIPT_CREATE_RESET, RECEIPT_CREATE_SUCCESS, RECEIPT_DETAILS_FAIL, RECEIPT_DETAILS_REQUEST, RECEIPT_DETAILS_RESET, RECEIPT_DETAILS_SUCCESS } from '../constants/receiptConstants';\nimport { USER_DETAIL_RESET, USER_LIST_RESET, USER_LOGOUT } from '../constants/userConstants';\nexport const logout = () => dispatch => {\n  localStorage.removeItem('userInfo');\n  localStorage.removeItem('cartItems');\n  localStorage.removeItem('shippingAddress');\n  localStorage.removeItem('paymentMethod');\n  localStorage.removeItem('receiptItems');\n  localStorage.removeItem('supplier');\n  dispatch({\n    type: USER_LOGOUT\n  });\n  dispatch({\n    type: USER_DETAIL_RESET\n  });\n  dispatch({\n    type: ORDER_LIST_MY_RESET\n  });\n  dispatch({\n    type: USER_LIST_RESET\n  });\n  document.location.href = '/login';\n};\nexport const createReceipt = receipt => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECEIPT_CREATE_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.post(`/api/receipts`, receipt, config);\n    dispatch({\n      type: RECEIPT_CREATE_SUCCESS\n    });\n    dispatch({\n      type: RECEIPT_CREATE_RESET,\n      payload: data\n    });\n    localStorage.removeItem('receiptItems');\n  } catch (error) {\n    dispatch({\n      type: RECEIPT_CREATE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const cancelReceipt = receipt => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECEIPT_CANCEL_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.put(`/api/receipts/${receipt._id}/cancel`, receipt, config);\n    dispatch({\n      type: RECEIPT_CANCEL_SUCCESS\n    });\n    dispatch({\n      type: RECEIPT_DETAILS_SUCCESS,\n      payload: data\n    });\n    dispatch({\n      type: RECEIPT_DETAILS_RESET\n    });\n  } catch (error) {\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\n    dispatch({\n      type: RECEIPT_CANCEL_FAIL,\n      payload: message\n    });\n  }\n};\nexport const getReceiptDetails = id => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: RECEIPT_DETAILS_REQUEST\n    });\n    const {\n      userLogin: {\n        userInfo\n      }\n    } = getState();\n    const config = {\n      headers: {\n        Authorization: `Bearer ${userInfo.token}`\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/receipts/${id}`, config);\n    dispatch({\n      type: RECEIPT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: RECEIPT_DETAILS_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const addToReceiptCart = (id, qty) => async (dispatch, getState) => {\n  const {\n    data\n  } = await axios.get(`/api/products/${id}`);\n  dispatch({\n    type: RECEIPT_CART_ADD_ITEM,\n    payload: {\n      product: data._id,\n      name: data.name,\n      price: data.price,\n      qty\n    }\n  });\n  localStorage.setItem('receiptItems', JSON.stringify(getState().receiptCart.receiptItems));\n};\nexport const removeFromReceiptCart = id => (dispatch, getState) => {\n  dispatch({\n    type: RECEIPT_CART_REMOVE_ITEM,\n    payload: id\n  });\n  localStorage.setItem('receiptItems', JSON.stringify(getState().receiptCart.receiptItems));\n};\nexport const saveSupplier = data => dispatch => {\n  dispatch({\n    type: RECEIPT_CART_SAVE_SUPPLIER,\n    payload: data\n  });\n  localStorage.setItem('supplier', JSON.stringify(data));\n};","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/actions/receiptActions.js"],"names":["axios","RECEIPT_CANCEL_FAIL","RECEIPT_CANCEL_SUCCESS","RECEIPT_CART_ADD_ITEM","RECEIPT_CART_REMOVE_ITEM","RECEIPT_CART_SAVE_SUPPLIER","RECEIPT_CREATE_FAIL","RECEIPT_CREATE_REQUEST","RECEIPT_CREATE_RESET","RECEIPT_CREATE_SUCCESS","RECEIPT_DETAILS_FAIL","RECEIPT_DETAILS_REQUEST","RECEIPT_DETAILS_RESET","RECEIPT_DETAILS_SUCCESS","USER_DETAIL_RESET","USER_LIST_RESET","USER_LOGOUT","logout","dispatch","localStorage","removeItem","type","ORDER_LIST_MY_RESET","document","location","href","createReceipt","receipt","getState","userLogin","userInfo","config","headers","Authorization","token","data","post","payload","error","response","message","cancelReceipt","RECEIPT_CANCEL_REQUEST","put","_id","getReceiptDetails","id","get","addToReceiptCart","qty","product","name","price","setItem","JSON","stringify","receiptCart","receiptItems","removeFromReceiptCart","saveSupplier"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { RECEIPT_CANCEL_FAIL, RECEIPT_CANCEL_SUCCESS, RECEIPT_CART_ADD_ITEM, RECEIPT_CART_REMOVE_ITEM, RECEIPT_CART_SAVE_SUPPLIER, RECEIPT_CREATE_FAIL, RECEIPT_CREATE_REQUEST, RECEIPT_CREATE_RESET, RECEIPT_CREATE_SUCCESS, RECEIPT_DETAILS_FAIL, RECEIPT_DETAILS_REQUEST, RECEIPT_DETAILS_RESET, RECEIPT_DETAILS_SUCCESS } from '../constants/receiptConstants'\r\nimport { USER_DETAIL_RESET, USER_LIST_RESET, USER_LOGOUT } from '../constants/userConstants'\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    localStorage.removeItem('receiptItems')\r\n    localStorage.removeItem('supplier')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAIL_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    document.location.href = '/login'\r\n}\r\n\r\nexport const createReceipt = (receipt) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: RECEIPT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(\r\n            `/api/receipts`, receipt, config)\r\n\r\n        dispatch({\r\n            type: RECEIPT_CREATE_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: RECEIPT_CREATE_RESET,\r\n            payload: data\r\n\r\n        })\r\n        localStorage.removeItem('receiptItems')\r\n    } catch (error) {\r\n        dispatch({\r\n            type: RECEIPT_CREATE_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const cancelReceipt = (receipt) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: RECEIPT_CANCEL_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/receipts/${receipt._id}/cancel`, receipt, config)\r\n\r\n        dispatch({\r\n            type: RECEIPT_CANCEL_SUCCESS,\r\n        })\r\n        dispatch({\r\n            type: RECEIPT_DETAILS_SUCCESS, payload: data\r\n        })\r\n        dispatch({ type: RECEIPT_DETAILS_RESET })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: RECEIPT_CANCEL_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const getReceiptDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: RECEIPT_DETAILS_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.get(\r\n            `/api/receipts/${id}`, config)\r\n\r\n        dispatch({\r\n            type: RECEIPT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        dispatch({\r\n            type: RECEIPT_DETAILS_FAIL,\r\n            payload:\r\n                error.response && error.response.data.message\r\n                    ? error.response.data.message\r\n                    : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const addToReceiptCart = (id, qty) => async (dispatch, getState) => {\r\n    const { data } = await axios.get(`/api/products/${id}`)\r\n\r\n    dispatch({\r\n        type: RECEIPT_CART_ADD_ITEM,\r\n        payload: {\r\n            product: data._id,\r\n            name: data.name,\r\n            price: data.price,\r\n            qty\r\n        }\r\n    })\r\n\r\n    localStorage.setItem('receiptItems', JSON.stringify(getState().receiptCart.receiptItems))\r\n}\r\n\r\nexport const removeFromReceiptCart = (id) => (dispatch, getState) => {\r\n    dispatch({\r\n        type: RECEIPT_CART_REMOVE_ITEM,\r\n        payload: id\r\n    })\r\n\r\n    localStorage.setItem('receiptItems', JSON.stringify(getState().receiptCart.receiptItems))\r\n}\r\n\r\nexport const saveSupplier = (data) => (dispatch) => {\r\n    dispatch({\r\n        type: RECEIPT_CART_SAVE_SUPPLIER,\r\n        payload: data\r\n    })\r\n\r\n    localStorage.setItem('supplier', JSON.stringify(data))\r\n}"]},"metadata":{},"sourceType":"module"}