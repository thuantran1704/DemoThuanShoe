{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\proShop\\\\frontend\\\\src\\\\screens\\\\OrderScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { PayPalButton } from 'react-paypal-button-v2';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst OrderScreen = ({\n  match,\n  history\n}) => {\n  _s();\n\n  const orderId = match.params.id;\n  const [sdkReady, setSdkReady] = useState(false);\n  const dispatch = useDispatch();\n  const orderDetails = useSelector(state => state.orderDetails);\n  const {\n    order,\n    loading,\n    error\n  } = orderDetails; //kiểu nó k lấy được state thay đổi\n\n  const orderPay = useSelector(state => state.orderPay);\n  const {\n    loading: loadingPay,\n    success: successPay\n  } = orderPay;\n  const orderDeliver = useSelector(state => state.orderDeliver);\n  const {\n    loading: loadingDeliver,\n    success: successDeliver\n  } = orderDeliver;\n  const userLogin = useSelector(state => state.userLogin);\n  const {\n    userInfo\n  } = userLogin;\n  useEffect(() => {\n    if (!userInfo) {\n      history.push('/login');\n    }\n\n    const addPayPalScript = async () => {\n      const {\n        data: clientId\n      } = await axios.get('/api/config/paypal');\n      const script = document.createElement('script');\n      script.type = 'text/javascript';\n      script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`;\n      script.async = true;\n\n      script.onload = () => {\n        setSdkReady(true);\n      };\n\n      document.body.appendChild(script);\n    };\n\n    if (!order || successPay || successDeliver) {\n      dispatch(getOrderDetails(orderId));\n      dispatch({\n        type: ORDER_PAY_RESET\n      });\n      dispatch({\n        type: ORDER_DELIVER_RESET\n      });\n    } else if (!order.isPaid) {\n      if (!window.paypal) {\n        addPayPalScript();\n      } else {\n        setSdkReady(true);\n      }\n    }\n  }, [dispatch, orderId, successPay, successDeliver, order]);\n\n  if (!loading) {\n    // Calculate prices\n    const addDecimals = num => {\n      return (Math.round(num * 100) / 100).toFixed(2);\n    };\n\n    order.itemsPrice = addDecimals(order.orderItems.reduce((acc, item) => Number((acc + item.price * item.qty).toFixed(2)), 0));\n  }\n\n  const successPaymentHandler = paymentResult => {\n    dispatch(payOrder(orderId, paymentResult));\n  };\n\n  const deliverHandler = () => {\n    dispatch(deliverOrder(order));\n  }; // t đi đái cái =)))))\n\n\n  return loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 19\n  }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n    variant: \"danger\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 23\n  }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Order \", order._id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 8,\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \" Shipping \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Name : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 40\n              }, this), \" \", order.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Email : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                href: `mailto:${order.user.email}`,\n                children: order.user.email\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Address : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 41\n              }, this), order.shippingAddress.address, \",\", ' ', order.shippingAddress.city, \",\", ' ', order.shippingAddress.country, \",\", ' ', order.shippingAddress.postalCode]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 37\n            }, this), order.isDelivered ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.deliveredAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 47\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Delivered\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Payment Method\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Method:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 41\n              }, this), \" \", ' ', \" \", order.paymentMethod]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 37\n            }, this), order.isPaid ? /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"success\",\n              children: [\"Paid on \", order.paidAt]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 47\n            }, this) : /*#__PURE__*/_jsxDEV(Message, {\n              variant: \"danger\",\n              children: \"Not Paid\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 47\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Order Items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this), order.orderItems.length === 0 ? /*#__PURE__*/_jsxDEV(Message, {\n              children: \"Your order is empty\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 43\n            }, this) : /*#__PURE__*/_jsxDEV(ListGroup, {\n              variant: \"flush\",\n              children: order.orderItems.map((item, index) => /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n                children: /*#__PURE__*/_jsxDEV(Row, {\n                  children: [/*#__PURE__*/_jsxDEV(Col, {\n                    md: 2,\n                    children: /*#__PURE__*/_jsxDEV(Image, {\n                      src: item.image,\n                      alt: item.name,\n                      fluid: true,\n                      rounded: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    children: /*#__PURE__*/_jsxDEV(Row, {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        to: `/product/${item.product}`,\n                        children: item.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 144,\n                        columnNumber: 69\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 65\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(Col, {\n                    md: 4,\n                    children: [item.qty, \" x $\", item.price, \" = $\", item.qty * item.price]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 57\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 53\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: /*#__PURE__*/_jsxDEV(ListGroup, {\n            variant: \"flush\",\n            children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: \"Order Summary\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Items\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.itemsPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Shipping\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.shippingPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 178,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Tax\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.taxPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  children: \"Total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [\"$\", order.totalPrice]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 37\n            }, this), userInfo && !userInfo.isAdmin && !order.isPaid && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: [loadingPay && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 60\n              }, this), // chỗ này nữa nè .. t phải bỏ dấu ! sdkReady thì nó mới cho paid ko là nó load quài \n              // t k làm paypal nên k biết cái này kkk\n              sdkReady ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 61\n              }, this) : /*#__PURE__*/_jsxDEV(PayPalButton, {\n                amount: order.totalPrice,\n                onSuccess: successPaymentHandler\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 57\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 41\n            }, this) // <ListGroup.Item>\n            //     {loadingPay && <Loader />}\n            //     {!sdkReady ? (\n            //         <Loader />\n            //     ) : (\n            //         <PayPalButton\n            //             amount={order.totalPrice}\n            //             onSuccess={successPaymentHandler}\n            //         />\n            //     )}\n            // </ListGroup.Item>\n            , loadingDeliver && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 56\n            }, this), userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                type: \"button\",\n                className: \"btn btn-block\",\n                onClick: deliverHandler,\n                children: \"Mark As Delivered\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true);\n};\n\n_s(OrderScreen, \"HOhLnPESNk9Q/WdGwKc133nA1wU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = OrderScreen;\nexport default OrderScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderScreen\");","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/screens/OrderScreen.js"],"names":["React","useState","useEffect","axios","PayPalButton","Link","useDispatch","useSelector","Row","Col","ListGroup","Image","Card","Button","Message","Loader","getOrderDetails","payOrder","deliverOrder","ORDER_DELIVER_RESET","ORDER_PAY_RESET","OrderScreen","match","history","orderId","params","id","sdkReady","setSdkReady","dispatch","orderDetails","state","order","loading","error","orderPay","loadingPay","success","successPay","orderDeliver","loadingDeliver","successDeliver","userLogin","userInfo","push","addPayPalScript","data","clientId","get","script","document","createElement","type","src","async","onload","body","appendChild","isPaid","window","paypal","addDecimals","num","Math","round","toFixed","itemsPrice","orderItems","reduce","acc","item","Number","price","qty","successPaymentHandler","paymentResult","deliverHandler","_id","user","name","email","shippingAddress","address","city","country","postalCode","isDelivered","deliveredAt","paymentMethod","paidAt","length","map","index","image","product","shippingPrice","taxPrice","totalPrice","isAdmin"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions'\r\nimport { ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants'\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n    //kiểu nó k lấy được state thay đổi\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver) {\r\n            dispatch(getOrderDetails(orderId))\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n\r\n        }\r\n        else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, orderId, successPay, successDeliver, order])\r\n\r\n    if (!loading) {\r\n\r\n        // Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\r\n            (acc, item) => Number((acc + item.price * item.qty).toFixed(2)), 0))\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n\r\n    }\r\n    // t đi đái cái =)))))\r\n\r\n    return (\r\n\r\n        loading ? <Loader />\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n                : <>\r\n                    <h1>Order {order._id}</h1>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2> Shipping </h2>\r\n                                    <p><strong>Name : </strong> {order.user.name}</p>\r\n                                    <p>\r\n                                        <strong>Email : </strong>\r\n                                        <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Address : </strong>\r\n                                        {order.shippingAddress.address},{' '}\r\n                                        {order.shippingAddress.city},{' '}\r\n                                        {order.shippingAddress.country},{' '}\r\n                                        {order.shippingAddress.postalCode}\r\n                                    </p>\r\n                                    {\r\n                                        order.isDelivered\r\n                                            ? <Message variant='success'>Paid on {order.deliveredAt}</Message>\r\n                                            : <Message variant='danger'>Not Delivered</Message>\r\n                                    }\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method:</strong> {' '} {order.paymentMethod}\r\n                                    </p>\r\n                                    {\r\n                                        order.isPaid\r\n                                            ? <Message variant='success'>Paid on {order.paidAt}</Message>\r\n                                            : <Message variant='danger'>Not Paid</Message>\r\n                                    }\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0\r\n                                        ? <Message>Your order is empty</Message>\r\n                                        : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={2}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n                                                            <Col  >\r\n                                                                <Row >\r\n                                                                    <Link to={`/product/${item.product}`}>\r\n                                                                        {item.name}\r\n                                                                    </Link>\r\n                                                                </Row>\r\n                                                            </Col>\r\n                                                            <Col md={4} >\r\n                                                                {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {userInfo && !userInfo.isAdmin && !order.isPaid && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n                                            { // chỗ này nữa nè .. t phải bỏ dấu ! sdkReady thì nó mới cho paid ko là nó load quài \r\n                                                // t k làm paypal nên k biết cái này kkk\r\n                                                sdkReady ? (<Loader />) :\r\n                                                    (\r\n                                                        <PayPalButton amount={order.totalPrice}\r\n                                                            onSuccess={successPaymentHandler} />\r\n                                                    )\r\n                                            }\r\n                                        </ListGroup.Item>\r\n\r\n                                        // <ListGroup.Item>\r\n                                        //     {loadingPay && <Loader />}\r\n                                        //     {!sdkReady ? (\r\n                                        //         <Loader />\r\n                                        //     ) : (\r\n                                        //         <PayPalButton\r\n                                        //             amount={order.totalPrice}\r\n                                        //             onSuccess={successPaymentHandler}\r\n                                        //         />\r\n                                        //     )}\r\n                                        // </ListGroup.Item>\r\n                                    )}\r\n                                    {loadingDeliver && <Loader />}\r\n                                    {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                                        <ListGroup.Item>\r\n                                            <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                                Mark As Delivered\r\n                                            </Button>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n"]},"metadata":{},"sourceType":"module"}