{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\proShop\\\\frontend\\\\src\\\\screens\\\\ProductScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Row, Col, Card, Image, ListGroup, Button, Form } from 'react-bootstrap'; //\n\nimport Rating from '../components/Rating';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { listProductDetails, createProductReview } from '../actions/productActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ProductScreen = ({\n  history,\n  match\n}) => {\n  _s();\n\n  const [qty, setQty] = useState(1);\n  const [rating, setRating] = useState(0);\n  const [comment, setComment] = useState('');\n  const dispatch = useDispatch();\n  const productDetails = useSelector(state => state.productDetails);\n  const {\n    loading,\n    error,\n    product\n  } = productDetails;\n  const productReviewCreate = useSelector(state => state.productReviewCreate);\n  const {\n    error: errorProductReview,\n    success: successProductReview\n  } = productReviewCreate;\n  useEffect(() => {\n    dispatch(listProductDetails(match.params.id));\n  }, [dispatch, match]);\n\n  const addToCartHandler = () => {\n    history.push(`/cart/${match.params.id}?qty=${qty}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      className: \"btn btn-dark my-3\",\n      to: \"/\",\n      children: \"Go back\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), loading ? /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 23\n    }, this) : error ? /*#__PURE__*/_jsxDEV(Message, {\n      variant: \"danger\",\n      children: [\" \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        md: 5,\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: product.image,\n          alt: product.name,\n          fluid: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 29\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        md: 4,\n        children: [/*#__PURE__*/_jsxDEV(Card, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n          variant: \"flush\",\n          children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: product.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Rating, {\n              value: product.rating,\n              text: `${product.numReviews} reviews`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [\"Price : $\", product.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: [/*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: \"Decription :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: product.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: `Status : ${product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this), product.countInStock > 0 && /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                children: \"Quantity :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Form.Control, {\n                  as: \"select\",\n                  value: qty,\n                  onChange: e => setQty(e.target.value),\n                  children: [...Array(product.countInStock).keys()].map(x => /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: x + 1,\n                    children: x + 1\n                  }, x + 1, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 96,\n                    columnNumber: 65\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 53\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 45\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: /*#__PURE__*/_jsxDEV(Col, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: addToCartHandler,\n                  className: \"btn-block\",\n                  type: \"button\",\n                  disabled: product.countInStock === 0,\n                  children: \"Add to cart\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 33\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 28\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ProductScreen, \"8zvbnMcYD4YQibvf7JSP8KlAPGw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ProductScreen;\nexport default ProductScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductScreen\");","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/screens/ProductScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Row","Col","Card","Image","ListGroup","Button","Form","Rating","Message","Loader","listProductDetails","createProductReview","ProductScreen","history","match","qty","setQty","rating","setRating","comment","setComment","dispatch","productDetails","state","loading","error","product","productReviewCreate","errorProductReview","success","successProductReview","params","id","addToCartHandler","push","image","name","numReviews","price","description","countInStock","e","target","value","Array","keys","map","x"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Card, Image, ListGroup, Button, Form } from 'react-bootstrap' //\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listProductDetails, createProductReview } from '../actions/productActions'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const [qty, setQty] = useState(1)\r\n\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n    useEffect(() => {\r\n        dispatch(listProductDetails(match.params.id))\r\n    }, [dispatch, match])\r\n\r\n    const addToCartHandler = () => {\r\n        history.push(`/cart/${match.params.id}?qty=${qty}`)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link className='btn btn-dark my-3' to='/'>\r\n                Go back\r\n            </Link>\r\n            {\r\n                loading\r\n                    ? <Loader />\r\n                    : error\r\n                        ? <Message variant='danger' > {error}</Message>\r\n                        : (<Row>\r\n                            <Col md={5} >\r\n                                <Image src={product.image} alt={product.name} fluid />\r\n                            </Col>\r\n\r\n                            <Col md={1} />\r\n\r\n                            <Col md={4}>\r\n                                <Card></Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h3>{product.name}</h3>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Rating\r\n                                            value={product.rating}\r\n                                            text={`${product.numReviews} reviews`} />\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        Price : ${product.price}\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                Decription :\r\n                                            </Col>\r\n                                        </Row>\r\n                                        <Row>\r\n                                            <Col>{product.description}</Col>\r\n                                        </Row>\r\n\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                {`Status : ${product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}`}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {product.countInStock > 0 && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>Quantity :</Col>\r\n                                                <Col>\r\n                                                    <Form.Control\r\n                                                        as='select' value={qty}\r\n                                                        onChange={(e) => setQty(e.target.value)}>\r\n                                                        {\r\n                                                            [...Array(product.countInStock).keys()].map(x => (\r\n                                                                <option key={x + 1} value={x + 1}>\r\n                                                                    {x + 1}\r\n                                                                </option>\r\n                                                            ))\r\n                                                        }\r\n                                                    </Form.Control>\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>\r\n                                                <Button\r\n                                                    onClick={addToCartHandler}\r\n                                                    className='btn-block'\r\n                                                    type='button'\r\n                                                    disabled={product.countInStock === 0}>\r\n                                                    Add to cart\r\n                                                </Button>\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                </ListGroup>\r\n                            </Col>\r\n                        </Row>\r\n                        )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n"]},"metadata":{},"sourceType":"module"}