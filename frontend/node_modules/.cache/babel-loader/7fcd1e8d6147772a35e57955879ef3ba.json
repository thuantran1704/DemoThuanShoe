{"ast":null,"code":"var _jsxFileName = \"D:\\\\projects React\\\\Demo\\\\frontend\\\\src\\\\screens\\\\DashboardScreen.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Message from '../components/Message';\nimport Loader from '../components/Loader';\nimport { Bar } from 'react-chartjs-2';\nimport { listStatisticProductSold } from '../actions/statisticActions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst DashboardScreen = ({}) => {\n  _s();\n\n  const dispatch = useDispatch();\n  const statisticProductSoldList = useSelector(state => state.statisticProductSoldList);\n  const {\n    loading,\n    error,\n    data\n  } = statisticProductSoldList;\n  const names = data && data.map(item => item.name.slice(0, 20));\n  const solds = data && data.map(item => item.sold);\n  useEffect(() => {\n    dispatch(listStatisticProductSold());\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Bar, {\n      data: {\n        labels: names,\n        datasets: [{\n          label: \"Sold\",\n          backgroundColor: ['rgba(255, 99, 132, 0.2)', 'rgba(54, 162, 235, 0.2)', 'rgba(255, 206, 86, 0.2)', 'rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n          borderColor: ['rgba(255, 99, 132, 1)', 'rgba(54, 162, 235, 1)', 'rgba(255, 206, 86, 1)', 'rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n          borderWidth: 1,\n          data: solds\n        }]\n      },\n      options: {\n        legend: {\n          display: false\n        },\n        ti\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(DashboardScreen, \"IltfmUWMm21D91Eyd+bp0Y3bDn4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DashboardScreen;\nexport default DashboardScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardScreen\");","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/screens/DashboardScreen.js"],"names":["React","useDispatch","useSelector","Message","Loader","Bar","listStatisticProductSold","DashboardScreen","dispatch","statisticProductSoldList","state","loading","error","data","names","map","item","name","slice","solds","sold","useEffect","labels","datasets","label","backgroundColor","borderColor","borderWidth","legend","display","ti"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,GAAT,QAAoB,iBAApB;AACA,SAASC,wBAAT,QAAyC,6BAAzC;;;;AAEA,MAAMC,eAAe,GAAG,CAAC,EAAD,KAAS;AAAA;;AAC7B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,QAAMQ,wBAAwB,GAAGP,WAAW,CAACQ,KAAK,IAAIA,KAAK,CAACD,wBAAhB,CAA5C;AACA,QAAM;AAAEE,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2BJ,wBAAjC;AAEA,QAAMK,KAAK,GAAGD,IAAI,IAAIA,IAAI,CAACE,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACC,IAAL,CAAUC,KAAV,CAAgB,CAAhB,EAAmB,EAAnB,CAAjB,CAAtB;AACA,QAAMC,KAAK,GAAGN,IAAI,IAAIA,IAAI,CAACE,GAAL,CAASC,IAAI,IAAIA,IAAI,CAACI,IAAtB,CAAtB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZb,IAAAA,QAAQ,CAACF,wBAAwB,EAAzB,CAAR;AACH,GAFQ,EAEN,CAACE,QAAD,CAFM,CAAT;AAGA,sBACI;AAAA,2BACI,QAAC,GAAD;AACI,MAAA,IAAI,EAAE;AACFc,QAAAA,MAAM,EAAER,KADN;AAEFS,QAAAA,QAAQ,EAAE,CACN;AACIC,UAAAA,KAAK,EAAE,MADX;AAEIC,UAAAA,eAAe,EAAE,CACb,yBADa,EAEb,yBAFa,EAGb,yBAHa,EAIb,yBAJa,EAKb,0BALa,EAMb,yBANa,CAFrB;AAUIC,UAAAA,WAAW,EAAE,CACT,uBADS,EAET,uBAFS,EAGT,uBAHS,EAIT,uBAJS,EAKT,wBALS,EAMT,uBANS,CAVjB;AAkBIC,UAAAA,WAAW,EAAE,CAlBjB;AAmBId,UAAAA,IAAI,EAAEM;AAnBV,SADM;AAFR,OADV;AA2BI,MAAA,OAAO,EAAE;AACLS,QAAAA,MAAM,EAAE;AAACC,UAAAA,OAAO,EAAG;AAAX,SADH;AAELC,QAAAA;AAFK;AA3Bb;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAsCH,CAlDD;;GAAMvB,e;UACeN,W,EAEgBC,W;;;KAH/BK,e;AAmDN,eAAeA,eAAf","sourcesContent":["import React from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { listStatisticProductSold } from '../actions/statisticActions'\r\n\r\nconst DashboardScreen = ({ }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const statisticProductSoldList = useSelector(state => state.statisticProductSoldList)\r\n    const { loading, error, data } = statisticProductSoldList\r\n\r\n    const names = data && data.map(item => item.name.slice(0, 20));\r\n    const solds = data && data.map(item => item.sold);\r\n\r\n    useEffect(() => {\r\n        dispatch(listStatisticProductSold())\r\n    }, [dispatch])\r\n    return (\r\n        <>\r\n            <Bar\r\n                data={{\r\n                    labels: names,\r\n                    datasets: [\r\n                        {\r\n                            label: \"Sold\",\r\n                            backgroundColor: [\r\n                                'rgba(255, 99, 132, 0.2)',\r\n                                'rgba(54, 162, 235, 0.2)',\r\n                                'rgba(255, 206, 86, 0.2)',\r\n                                'rgba(75, 192, 192, 0.2)',\r\n                                'rgba(153, 102, 255, 0.2)',\r\n                                'rgba(255, 159, 64, 0.2)'\r\n                            ],\r\n                            borderColor: [\r\n                                'rgba(255, 99, 132, 1)',\r\n                                'rgba(54, 162, 235, 1)',\r\n                                'rgba(255, 206, 86, 1)',\r\n                                'rgba(75, 192, 192, 1)',\r\n                                'rgba(153, 102, 255, 1)',\r\n                                'rgba(255, 159, 64, 1)'\r\n                            ],\r\n                            borderWidth: 1,\r\n                            data: solds\r\n                        }\r\n                    ]\r\n                }}\r\n                options={{\r\n                    legend: {display : false},\r\n                    ti\r\n                }}\r\n            >\r\n\r\n            </Bar>\r\n        </>\r\n    )\r\n}\r\nexport default DashboardScreen;\r\n"]},"metadata":{},"sourceType":"module"}