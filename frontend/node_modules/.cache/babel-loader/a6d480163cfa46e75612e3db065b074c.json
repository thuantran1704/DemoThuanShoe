{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { producListReducer, producDetailsReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nconst reducer = combineReducers({\n  productList: producListReducer,\n  productDetails: producDetailsReducer,\n  cart: cartReducer\n});\nconst cartItensFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst initialState = {\n  cart: {\n    cartItems: cartItem\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","producListReducer","producDetailsReducer","cartReducer","reducer","productList","productDetails","cart","cartItensFromStorage","localStorage","getItem","JSON","parse","initialState","cartItems","cartItem","middleware","store"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,4BAAxD;AACA,SAASC,WAAT,QAA4B,yBAA5B;AAEA,MAAMC,OAAO,GAAGP,eAAe,CAAC;AAC5BQ,EAAAA,WAAW,EAAEJ,iBADe;AAE5BK,EAAAA,cAAc,EAAEJ,oBAFY;AAG5BK,EAAAA,IAAI,EAAGJ;AAHqB,CAAD,CAA/B;AAMA,MAAMK,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAChEH,YAAY,CAACC,OAAb,CAAqB,WAArB,CADgE,CAApC,GACS,EADtC;AAGA,MAAMG,YAAY,GAAG;AACjBN,EAAAA,IAAI,EAAE;AAACO,IAAAA,SAAS,EAAEC;AAAZ;AADW,CAArB;AAIA,MAAMC,UAAU,GAAG,CAACjB,KAAD,CAAnB;AAEA,MAAMkB,KAAK,GAAGrB,WAAW,CAACQ,OAAD,EAAUS,YAAV,EACrBb,mBAAmB,CAACF,eAAe,CAAC,GAAGkB,UAAJ,CAAhB,CADE,CAAzB;AAGA,eAAeC,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport { producListReducer, producDetailsReducer } from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\n\r\nconst reducer = combineReducers({\r\n    productList: producListReducer,\r\n    productDetails: producDetailsReducer,\r\n    cart : cartReducer\r\n})\r\n\r\nconst cartItensFromStorage = localStorage.getItem('cartItems') ? JSON.parse\r\n(localStorage.getItem('cartItems')) : []\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItem}\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}