{"ast":null,"code":"import _slicedToArray from\"D:/projects React/proShop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import{Link}from'react-router-dom';import{useDispatch,useSelector}from'react-redux';import{Button,Form}from'react-bootstrap';import Message from'../components/Message';import Loader from'../components/Loader';import FormContainer from'../components/FormContainer';import{getUserDetail,updateUser}from'../actions/userActions';import{USER_UPDATE_RESET}from'../constants/userConstants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var UserEditScreen=function UserEditScreen(_ref){var match=_ref.match,history=_ref.history;var userId=match.params.id;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),email=_useState2[0],setEmail=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),name=_useState4[0],setName=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isAdmin=_useState6[0],setIsAdmin=_useState6[1];var dispatch=useDispatch();var userDetail=useSelector(function(state){return state.userDetail;});var loading=userDetail.loading,error=userDetail.error,user=userDetail.user;var userUpdate=useSelector(function(state){return state.userUpdate;});var loadingUpdate=userUpdate.loading,errorUpdate=userUpdate.error,successUpdate=userUpdate.success;useEffect(function(){if(successUpdate){dispatch({type:USER_UPDATE_RESET});history.push('/admin/userlist');}else{if(!user.name||user._id!==userId){dispatch(getUserDetail(userId));}else{setName(user.name);setEmail(user.email);setIsAdmin(user.isAdmin);}}},[dispatch,history,userId,user,successUpdate]);var submitHandler=function submitHandler(e){e.preventDefault();dispatch(updateUser({_id:userId,name:name,email:email,isAdmin:isAdmin}));};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Link,{to:\"/admin/userlist\",className:\"btn btn-light my-3\",children:\" Go Back \"}),/*#__PURE__*/_jsxs(FormContainer,{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Edit User\"}),loadingUpdate&&/*#__PURE__*/_jsx(Loader,{}),errorUpdate&&/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:errorUpdate}),loading?/*#__PURE__*/_jsx(Loader,{}):error?/*#__PURE__*/_jsx(Message,{variant:\"danger\",children:error}):/*#__PURE__*/_jsxs(Form,{onSubmit:submitHandler,children:[/*#__PURE__*/_jsxs(Form.Group,{controlId:\"name\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Name\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"name\",placeholder:\"Enter name\",value:name,onChange:function onChange(e){return setName(e.target.value);}})]}),/*#__PURE__*/_jsxs(Form.Group,{controlId:\"email\",children:[/*#__PURE__*/_jsx(Form.Label,{children:\"Email Address\"}),/*#__PURE__*/_jsx(Form.Control,{type:\"email\",placeholder:\"Enter email\",value:email,onChange:function onChange(e){return setEmail(e.target.value);}})]}),/*#__PURE__*/_jsx(Form.Group,{controlId:\"isadmin\",children:/*#__PURE__*/_jsx(Form.Check,{type:\"checkbox\",label:\"Is Admin\",value:isAdmin,checked:isAdmin,onChange:function onChange(e){return setIsAdmin(e.target.checked);}})}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"primary\",children:\"Update\"})]})]})]});};export default UserEditScreen;","map":{"version":3,"sources":["D:/projects React/proShop/frontend/src/screens/UserEditScreen.js"],"names":["React","useState","useEffect","Link","useDispatch","useSelector","Button","Form","Message","Loader","FormContainer","getUserDetail","updateUser","USER_UPDATE_RESET","UserEditScreen","match","history","userId","params","id","email","setEmail","name","setName","isAdmin","setIsAdmin","dispatch","userDetail","state","loading","error","user","userUpdate","loadingUpdate","errorUpdate","successUpdate","success","type","push","_id","submitHandler","e","preventDefault","target","value","checked"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { getUserDetail, updateUser } from '../actions/userActions'\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants'\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n    const userId = match.params.id\r\n\r\n    const [email, setEmail] = useState('')\r\n    const [name, setName] = useState('')\r\n    const [isAdmin, setIsAdmin] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const userDetail = useSelector(state => state.userDetail)\r\n    const { loading, error, user } = userDetail\r\n\r\n    const userUpdate = useSelector(state => state.userUpdate)\r\n    const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate\r\n\r\n    useEffect(() => {\r\n        if (successUpdate) {\r\n            dispatch({ type: USER_UPDATE_RESET })\r\n            history.push('/admin/userlist')\r\n        } else {\r\n            if (!user.name || user._id !== userId) {\r\n                dispatch(getUserDetail(userId))\r\n            } else {\r\n                setName(user.name)\r\n                setEmail(user.email)\r\n                setIsAdmin(user.isAdmin)\r\n            }\r\n        }\r\n    }, [dispatch, history, userId, user, successUpdate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        dispatch(updateUser({ _id: userId, name, email, isAdmin }))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Link to='/admin/userlist' className='btn btn-light my-3'> Go Back </Link>\r\n\r\n            <FormContainer>\r\n                <h1>Edit User</h1>\r\n                {loadingUpdate && <Loader />}\r\n                {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n                {loading ? <Loader />\r\n                    : error ? <Message variant='danger'>{error}</Message>\r\n                        : (\r\n                            <Form onSubmit={submitHandler}>\r\n                                <Form.Group controlId='name'>\r\n                                    <Form.Label>Name</Form.Label>\r\n                                    <Form.Control type='name' placeholder='Enter name' value={name}\r\n                                        onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='email'>\r\n                                    <Form.Label>Email Address</Form.Label>\r\n                                    <Form.Control type='email' placeholder='Enter email' value={email}\r\n                                        onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId='isadmin'>\r\n                                    <Form.Check type='checkbox'\r\n                                        label='Is Admin'\r\n                                        value={isAdmin}\r\n                                        checked={isAdmin}\r\n                                        onChange={(e) => setIsAdmin(e.target.checked)}></Form.Check>\r\n                                </Form.Group>\r\n\r\n                                <Button type='submit' variant='primary'>\r\n                                    Update\r\n                                </Button>\r\n                            </Form>\r\n                        )}\r\n            </FormContainer>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserEditScreen"]},"metadata":{},"sourceType":"module"}