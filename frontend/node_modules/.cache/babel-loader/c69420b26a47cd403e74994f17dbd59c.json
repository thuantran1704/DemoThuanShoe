{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { producListReducer, producDetailsReducer, productDeleteReducer, productCreateReducer, productUpdateReducer, productReviewCreateReducer, productTopRatedReducer, productBrandReducer, productTopRatedByBrandReducer, productSameReducer, productTopRatedByCategoryReducer, productCategoryReducer } from './reducers/productReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailReducer, userUpdateProfileReducer, userListReducer, userDeleteReducer, userUpdateReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderCancelReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer, orderListReducer, orderDeliverReducer } from './reducers/orderReducers';\nimport { brandListReducer, brandDeleteReducer, brandCreateReducer, brandUpdateReducer, brandDetailsReducer } from './reducers/brandReducers';\nimport { categoryListReducer, categoryDeleteReducer, categoryCreateReducer, categoryUpdateReducer, categoryDetailsReducer } from './reducers/categoryReducers';\nimport { receiptCreateReducer, receiptCancelReducer, receiptReceiveReducer, receiptListReducer, receiptDetailsReducer, receiptCartReducer } from './reducers/receiptReducers';\nimport { statisticProductSoldListReducer } from './reducers/';\nconst reducer = combineReducers({\n  statisticProductSoldList: statisticProductSoldListReducer,\n  receiptCart: receiptCartReducer,\n  receiptCreate: receiptCreateReducer,\n  receiptCancel: receiptCancelReducer,\n  receiptReceive: receiptReceiveReducer,\n  receiptList: receiptListReducer,\n  receiptDetails: receiptDetailsReducer,\n  brandList: brandListReducer,\n  brandDetails: brandDetailsReducer,\n  brandDelete: brandDeleteReducer,\n  brandCreate: brandCreateReducer,\n  brandUpdate: brandUpdateReducer,\n  categoryList: categoryListReducer,\n  categoryDetails: categoryDetailsReducer,\n  categoryDelete: categoryDeleteReducer,\n  categoryCreate: categoryCreateReducer,\n  categoryUpdate: categoryUpdateReducer,\n  productList: producListReducer,\n  productDetails: producDetailsReducer,\n  productDelete: productDeleteReducer,\n  productCreate: productCreateReducer,\n  productUpdate: productUpdateReducer,\n  productReviewCreate: productReviewCreateReducer,\n  productTopRated: productTopRatedReducer,\n  productBrand: productBrandReducer,\n  productTopRatedByBrand: productTopRatedByBrandReducer,\n  productSame: productSameReducer,\n  productCategory: productCategoryReducer,\n  productTopRatedByCategory: productTopRatedByCategoryReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  userDetail: userDetailReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  userList: userListReducer,\n  userDelete: userDeleteReducer,\n  userUpdate: userUpdateReducer,\n  orderCreate: orderCreateReducer,\n  orderCancel: orderCancelReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  orderDeliver: orderDeliverReducer,\n  orderListMy: orderListMyReducer,\n  orderList: orderListReducer\n});\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : {};\nconst receiptItemsFromStorage = localStorage.getItem('receiptItems') ? JSON.parse(localStorage.getItem('receiptItems')) : [];\nconst supplierFromStorage = localStorage.getItem('supplier') ? JSON.parse(localStorage.getItem('supplier')) : {};\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  receiptCart: {\n    receiptItems: receiptItemsFromStorage,\n    supplier: supplierFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"sources":["D:/projects React/Demo/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","producListReducer","producDetailsReducer","productDeleteReducer","productCreateReducer","productUpdateReducer","productReviewCreateReducer","productTopRatedReducer","productBrandReducer","productTopRatedByBrandReducer","productSameReducer","productTopRatedByCategoryReducer","productCategoryReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailReducer","userUpdateProfileReducer","userListReducer","userDeleteReducer","userUpdateReducer","orderCreateReducer","orderCancelReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","orderListReducer","orderDeliverReducer","brandListReducer","brandDeleteReducer","brandCreateReducer","brandUpdateReducer","brandDetailsReducer","categoryListReducer","categoryDeleteReducer","categoryCreateReducer","categoryUpdateReducer","categoryDetailsReducer","receiptCreateReducer","receiptCancelReducer","receiptReceiveReducer","receiptListReducer","receiptDetailsReducer","receiptCartReducer","statisticProductSoldListReducer","reducer","statisticProductSoldList","receiptCart","receiptCreate","receiptCancel","receiptReceive","receiptList","receiptDetails","brandList","brandDetails","brandDelete","brandCreate","brandUpdate","categoryList","categoryDetails","categoryDelete","categoryCreate","categoryUpdate","productList","productDetails","productDelete","productCreate","productUpdate","productReviewCreate","productTopRated","productBrand","productTopRatedByBrand","productSame","productCategory","productTopRatedByCategory","cart","userLogin","userRegister","userDetail","userUpdateProfile","userList","userDelete","userUpdate","orderCreate","orderCancel","orderDetails","orderPay","orderDeliver","orderListMy","orderList","userInfoFromStorage","localStorage","getItem","JSON","parse","cartItemsFromStorage","shippingAddressFromStorage","receiptItemsFromStorage","supplierFromStorage","initialState","cartItems","shippingAddress","receiptItems","supplier","userInfo","middleware","store"],"mappings":"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","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport { composeWithDevTools } from 'redux-devtools-extension'\r\nimport {\r\n    producListReducer,\r\n    producDetailsReducer,\r\n    productDeleteReducer,\r\n    productCreateReducer,\r\n    productUpdateReducer,\r\n    productReviewCreateReducer,\r\n    productTopRatedReducer,\r\n    productBrandReducer,\r\n    productTopRatedByBrandReducer,\r\n    productSameReducer,\r\n    productTopRatedByCategoryReducer,\r\n    productCategoryReducer\r\n} from './reducers/productReducers'\r\nimport { cartReducer } from './reducers/cartReducers'\r\nimport {\r\n    userLoginReducer,\r\n    userRegisterReducer,\r\n    userDetailReducer,\r\n    userUpdateProfileReducer,\r\n    userListReducer,\r\n    userDeleteReducer,\r\n    userUpdateReducer\r\n} from './reducers/userReducers'\r\nimport {\r\n    orderCreateReducer,\r\n    orderCancelReducer,\r\n    orderDetailsReducer,\r\n    orderPayReducer,\r\n    orderListMyReducer,\r\n    orderListReducer,\r\n    orderDeliverReducer,\r\n} from './reducers/orderReducers'\r\n\r\nimport {\r\n    brandListReducer,\r\n    brandDeleteReducer,\r\n    brandCreateReducer,\r\n    brandUpdateReducer,\r\n    brandDetailsReducer\r\n} from './reducers/brandReducers'\r\n\r\nimport {\r\n    categoryListReducer,\r\n    categoryDeleteReducer,\r\n    categoryCreateReducer,\r\n    categoryUpdateReducer,\r\n    categoryDetailsReducer\r\n} from './reducers/categoryReducers'\r\n\r\nimport {\r\n    receiptCreateReducer,\r\n    receiptCancelReducer,\r\n    receiptReceiveReducer,\r\n    receiptListReducer,\r\n    receiptDetailsReducer,\r\n    receiptCartReducer\r\n} from './reducers/receiptReducers'\r\n\r\nimport {\r\n    statisticProductSoldListReducer,\r\n} from './reducers/'\r\n\r\nconst reducer = combineReducers({\r\n\r\n    statisticProductSoldList:statisticProductSoldListReducer,\r\n\r\n    receiptCart:receiptCartReducer,\r\n    receiptCreate: receiptCreateReducer,\r\n    receiptCancel: receiptCancelReducer,\r\n    receiptReceive: receiptReceiveReducer,\r\n    receiptList: receiptListReducer,\r\n    receiptDetails: receiptDetailsReducer,\r\n\r\n    brandList: brandListReducer,\r\n    brandDetails: brandDetailsReducer,\r\n    brandDelete: brandDeleteReducer,\r\n    brandCreate: brandCreateReducer,\r\n    brandUpdate: brandUpdateReducer,\r\n\r\n    categoryList: categoryListReducer,\r\n    categoryDetails: categoryDetailsReducer,\r\n    categoryDelete: categoryDeleteReducer,\r\n    categoryCreate: categoryCreateReducer,\r\n    categoryUpdate: categoryUpdateReducer,\r\n\r\n    productList: producListReducer,\r\n    productDetails: producDetailsReducer,\r\n    productDelete: productDeleteReducer,\r\n    productCreate: productCreateReducer,\r\n    productUpdate: productUpdateReducer,\r\n    productReviewCreate: productReviewCreateReducer,\r\n    productTopRated: productTopRatedReducer,\r\n    productBrand: productBrandReducer,\r\n    productTopRatedByBrand: productTopRatedByBrandReducer,\r\n    productSame: productSameReducer,\r\n    productCategory: productCategoryReducer,\r\n    productTopRatedByCategory: productTopRatedByCategoryReducer,\r\n\r\n    cart: cartReducer,\r\n\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    userDetail: userDetailReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    userList: userListReducer,\r\n    userDelete: userDeleteReducer,\r\n    userUpdate: userUpdateReducer,\r\n\r\n    orderCreate: orderCreateReducer,\r\n    orderCancel: orderCancelReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    orderDeliver: orderDeliverReducer,\r\n    orderListMy: orderListMyReducer,\r\n    orderList: orderListReducer,\r\n})\r\n\r\nconst userInfoFromStorage =\r\n    localStorage.getItem('userInfo')\r\n        ? JSON.parse(localStorage.getItem('userInfo'))\r\n        : null\r\n\r\nconst cartItemsFromStorage =\r\n    localStorage.getItem('cartItems') ?\r\n        JSON.parse(localStorage.getItem('cartItems'))\r\n        : []\r\n\r\nconst shippingAddressFromStorage =\r\n    localStorage.getItem('shippingAddress')\r\n        ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n        : {}\r\n\r\nconst receiptItemsFromStorage =\r\n    localStorage.getItem('receiptItems') ?\r\n        JSON.parse(localStorage.getItem('receiptItems'))\r\n        : []\r\n\r\nconst supplierFromStorage =\r\n    localStorage.getItem('supplier')\r\n        ? JSON.parse(localStorage.getItem('supplier'))\r\n        : {}\r\n\r\nconst initialState = {\r\n    cart: {\r\n        cartItems: cartItemsFromStorage,\r\n        shippingAddress: shippingAddressFromStorage\r\n    },\r\n    receiptCart: {\r\n        receiptItems: receiptItemsFromStorage,\r\n        supplier: supplierFromStorage\r\n    },\r\n    userLogin: { userInfo: userInfoFromStorage }\r\n}\r\n\r\nconst middleware = [thunk]\r\n\r\nconst store = createStore(reducer, initialState,\r\n    composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store"]},"metadata":{},"sourceType":"module"}