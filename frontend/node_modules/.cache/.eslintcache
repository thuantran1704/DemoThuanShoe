[{"D:\\projects React\\proShop\\frontend\\src\\index.js":"1","D:\\projects React\\proShop\\frontend\\src\\App.js":"2","D:\\projects React\\proShop\\frontend\\src\\reportWebVitals.js":"3","D:\\projects React\\proShop\\frontend\\src\\components\\Header.js":"4","D:\\projects React\\proShop\\frontend\\src\\components\\Footer.js":"5","D:\\projects React\\proShop\\frontend\\src\\screens\\HomeScreen.js":"6","D:\\projects React\\proShop\\frontend\\src\\components\\Product.js":"7","D:\\projects React\\proShop\\frontend\\src\\components\\Rating.js":"8","D:\\projects React\\proShop\\frontend\\src\\screens\\ProductScreen.js":"9","D:\\projects React\\proShop\\frontend\\src\\store.js":"10","D:\\projects React\\proShop\\frontend\\src\\reducers\\productReducers.js":"11","D:\\projects React\\proShop\\frontend\\src\\constants\\productConstants.js":"12","D:\\projects React\\proShop\\frontend\\src\\actions\\productActions.js":"13","D:\\projects React\\proShop\\frontend\\src\\components\\Message.js":"14","D:\\projects React\\proShop\\frontend\\src\\components\\Loader.js":"15","D:\\projects React\\proShop\\frontend\\src\\screens\\CartScreen.js":"16","D:\\projects React\\proShop\\frontend\\src\\reducers\\cartReducers.js":"17","D:\\projects React\\proShop\\frontend\\src\\constants\\cartConstants.js":"18","D:\\projects React\\proShop\\frontend\\src\\actions\\cartActions.js":"19","D:\\projects React\\proShop\\frontend\\src\\reducers\\userReducers.js":"20","D:\\projects React\\proShop\\frontend\\src\\constants\\userConstants.js":"21","D:\\projects React\\proShop\\frontend\\src\\screens\\LoginScreen.js":"22","D:\\projects React\\proShop\\frontend\\src\\actions\\userActions.js":"23","D:\\projects React\\proShop\\frontend\\src\\components\\FormContainer.js":"24","D:\\projects React\\proShop\\frontend\\src\\screens\\RegisterScreen.js":"25","D:\\projects React\\proShop\\frontend\\src\\screens\\ProfileScreen.js":"26","D:\\projects React\\proShop\\frontend\\src\\screens\\ShippingScreen.js":"27","D:\\projects React\\proShop\\frontend\\src\\components\\CheckoutSteps.js":"28","D:\\projects React\\proShop\\frontend\\src\\screens\\PaymentScreen.js":"29","D:\\projects React\\proShop\\frontend\\src\\screens\\PlaceOrderScreen.js":"30","D:\\projects React\\proShop\\frontend\\src\\reducers\\orderReducers.js":"31","D:\\projects React\\proShop\\frontend\\src\\constants\\orderConstants.js":"32","D:\\projects React\\proShop\\frontend\\src\\actions\\orderActions.js":"33","D:\\projects React\\proShop\\frontend\\src\\screens\\OrderScreen.js":"34","D:\\projects React\\proShop\\frontend\\src\\screens\\UserListScreen.js":"35","D:\\projects React\\proShop\\frontend\\src\\screens\\UserEditScreen.js":"36","D:\\projects React\\proShop\\frontend\\src\\screens\\ProductListScreen.js":"37","D:\\projects React\\proShop\\frontend\\src\\screens\\ProductEditScreen.js":"38","D:\\projects React\\proShop\\frontend\\src\\screens\\OrderListScreen.js":"39","D:\\projects React\\proShop\\frontend\\src\\components\\SearchBox.js":"40","D:\\projects React\\proShop\\frontend\\src\\components\\Paginate.js":"41","D:\\projects React\\proShop\\frontend\\src\\components\\ProductCarousel.js":"42","D:\\projects React\\proShop\\frontend\\src\\components\\Meta.js":"43","D:\\projects React\\proShop\\frontend\\src\\screens\\BrandScreen.js":"44","D:\\projects React\\proShop\\frontend\\src\\screens\\ProductCreateScreen.js":"45","D:\\projects React\\proShop\\frontend\\src\\components\\Navigation.js":"46","D:\\projects React\\proShop\\frontend\\src\\components\\ProductTop3.js":"47","D:\\projects React\\proShop\\frontend\\src\\screens\\AllProductScreen.js":"48","D:\\projects React\\proShop\\frontend\\src\\screens\\CategoryScreen.js":"49","D:\\projects React\\proShop\\frontend\\src\\screens\\AboutScreen.js":"50","D:\\projects React\\proShop\\frontend\\src\\components\\AdminSearchBox.js":"51","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\index.js":"52","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\App.js":"53","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\store.js":"54","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reportWebVitals.js":"55","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Footer.js":"56","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductScreen.js":"57","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Navigation.js":"58","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\CartScreen.js":"59","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\LoginScreen.js":"60","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Header.js":"61","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\RegisterScreen.js":"62","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\HomeScreen.js":"63","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProfileScreen.js":"64","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ShippingScreen.js":"65","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\PlaceOrderScreen.js":"66","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\OrderScreen.js":"67","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\UserListScreen.js":"68","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\UserEditScreen.js":"69","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\PaymentScreen.js":"70","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductEditScreen.js":"71","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductListScreen.js":"72","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\AllProductScreen.js":"73","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\OrderListScreen.js":"74","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\BrandScreen.js":"75","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\AboutScreen.js":"76","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\CategoryScreen.js":"77","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductCreateScreen.js":"78","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\userReducers.js":"79","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\productReducers.js":"80","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\cartReducers.js":"81","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\orderReducers.js":"82","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Message.js":"83","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Rating.js":"84","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Loader.js":"85","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Meta.js":"86","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Product.js":"87","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\SearchBox.js":"88","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\FormContainer.js":"89","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Paginate.js":"90","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\cartActions.js":"91","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\productActions.js":"92","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\userActions.js":"93","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\orderActions.js":"94","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\userConstants.js":"95","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\productConstants.js":"96","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\orderConstants.js":"97","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\cartConstants.js":"98","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\AdminSearchBox.js":"99","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\CheckoutSteps.js":"100","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\ProductCarousel.js":"101","D:\\projects React\\Demo\\frontend\\src\\index.js":"102","D:\\projects React\\Demo\\frontend\\src\\App.js":"103","D:\\projects React\\Demo\\frontend\\src\\store.js":"104","D:\\projects React\\Demo\\frontend\\src\\reportWebVitals.js":"105","D:\\projects React\\Demo\\frontend\\src\\components\\Header.js":"106","D:\\projects React\\Demo\\frontend\\src\\components\\Footer.js":"107","D:\\projects React\\Demo\\frontend\\src\\components\\Navigation.js":"108","D:\\projects React\\Demo\\frontend\\src\\screens\\RegisterScreen.js":"109","D:\\projects React\\Demo\\frontend\\src\\screens\\LoginScreen.js":"110","D:\\projects React\\Demo\\frontend\\src\\screens\\CartScreen.js":"111","D:\\projects React\\Demo\\frontend\\src\\screens\\ShippingScreen.js":"112","D:\\projects React\\Demo\\frontend\\src\\screens\\HomeScreen.js":"113","D:\\projects React\\Demo\\frontend\\src\\screens\\PaymentScreen.js":"114","D:\\projects React\\Demo\\frontend\\src\\screens\\ProductScreen.js":"115","D:\\projects React\\Demo\\frontend\\src\\screens\\ProfileScreen.js":"116","D:\\projects React\\Demo\\frontend\\src\\screens\\ProductListScreen.js":"117","D:\\projects React\\Demo\\frontend\\src\\screens\\UserListScreen.js":"118","D:\\projects React\\Demo\\frontend\\src\\screens\\PlaceOrderScreen.js":"119","D:\\projects React\\Demo\\frontend\\src\\screens\\UserEditScreen.js":"120","D:\\projects React\\Demo\\frontend\\src\\screens\\OrderScreen.js":"121","D:\\projects React\\Demo\\frontend\\src\\screens\\OrderListScreen.js":"122","D:\\projects React\\Demo\\frontend\\src\\screens\\AllProductScreen.js":"123","D:\\projects React\\Demo\\frontend\\src\\screens\\AboutScreen.js":"124","D:\\projects React\\Demo\\frontend\\src\\screens\\ProductEditScreen.js":"125","D:\\projects React\\Demo\\frontend\\src\\screens\\BrandScreen.js":"126","D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryScreen.js":"127","D:\\projects React\\Demo\\frontend\\src\\reducers\\productReducers.js":"128","D:\\projects React\\Demo\\frontend\\src\\screens\\ProductCreateScreen.js":"129","D:\\projects React\\Demo\\frontend\\src\\reducers\\userReducers.js":"130","D:\\projects React\\Demo\\frontend\\src\\reducers\\orderReducers.js":"131","D:\\projects React\\Demo\\frontend\\src\\reducers\\cartReducers.js":"132","D:\\projects React\\Demo\\frontend\\src\\components\\Message.js":"133","D:\\projects React\\Demo\\frontend\\src\\components\\SearchBox.js":"134","D:\\projects React\\Demo\\frontend\\src\\components\\Loader.js":"135","D:\\projects React\\Demo\\frontend\\src\\components\\FormContainer.js":"136","D:\\projects React\\Demo\\frontend\\src\\components\\Meta.js":"137","D:\\projects React\\Demo\\frontend\\src\\components\\CheckoutSteps.js":"138","D:\\projects React\\Demo\\frontend\\src\\components\\Product.js":"139","D:\\projects React\\Demo\\frontend\\src\\components\\Paginate.js":"140","D:\\projects React\\Demo\\frontend\\src\\actions\\userActions.js":"141","D:\\projects React\\Demo\\frontend\\src\\constants\\orderConstants.js":"142","D:\\projects React\\Demo\\frontend\\src\\constants\\userConstants.js":"143","D:\\projects React\\Demo\\frontend\\src\\actions\\cartActions.js":"144","D:\\projects React\\Demo\\frontend\\src\\constants\\productConstants.js":"145","D:\\projects React\\Demo\\frontend\\src\\actions\\productActions.js":"146","D:\\projects React\\Demo\\frontend\\src\\constants\\cartConstants.js":"147","D:\\projects React\\Demo\\frontend\\src\\actions\\orderActions.js":"148","D:\\projects React\\Demo\\frontend\\src\\components\\AdminSearchBox.js":"149","D:\\projects React\\Demo\\frontend\\src\\components\\ProductCarousel.js":"150","D:\\projects React\\Demo\\frontend\\src\\components\\Rating.js":"151","D:\\projects React\\Demo\\frontend\\src\\reducers\\brandReducers.js":"152","D:\\projects React\\Demo\\frontend\\src\\constants\\brandConstants.js":"153","D:\\projects React\\Demo\\frontend\\src\\constants\\categoryConstants.js":"154","D:\\projects React\\Demo\\frontend\\src\\reducers\\categoryReducers.js":"155","D:\\projects React\\Demo\\frontend\\src\\screens\\BrandListScreen.js":"156","D:\\projects React\\Demo\\frontend\\src\\actions\\brandActions.js":"157","D:\\projects React\\Demo\\frontend\\src\\actions\\categoryActions.js":"158","D:\\projects React\\Demo\\frontend\\src\\screens\\BrandCreateScreen.js":"159","D:\\projects React\\Demo\\frontend\\src\\screens\\BrandEditScreen.js":"160","D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryListScreen.js":"161","D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryEditScreen.js":"162","D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryCreateScreen.js":"163","D:\\projects React\\Demo\\frontend\\src\\reducers\\receiptReducers.js":"164","D:\\projects React\\Demo\\frontend\\src\\constants\\receiptConstants.js":"165","D:\\projects React\\Demo\\frontend\\src\\screens\\ReceiptCartScreen.js":"166","D:\\projects React\\Demo\\frontend\\src\\actions\\receiptActions.js":"167","D:\\projects React\\Demo\\frontend\\src\\screens\\SupplierScreen.js":"168","D:\\projects React\\Demo\\frontend\\src\\components\\CheckoutStepsAdmin.js":"169","D:\\projects React\\Demo\\frontend\\src\\screens\\PlaceReceiptScreen.js":"170","D:\\projects React\\Demo\\frontend\\src\\screens\\ReceiptScreen.js":"171","D:\\projects React\\Demo\\frontend\\src\\screens\\ReceiptListScreen.js":"172","D:\\projects React\\Demo\\frontend\\src\\screens\\DashboardScreen.js":"173","D:\\projects React\\Demo\\frontend\\src\\reducers\\statisticReducers.js":"174","D:\\projects React\\Demo\\frontend\\src\\constants\\statisticConstants.js":"175","D:\\projects React\\Demo\\frontend\\src\\actions\\statisticActions.js":"176","D:\\projects React\\Demo\\frontend\\src\\screens\\RevenueScreen.js":"177"},{"size":780,"mtime":1629878776145,"results":"178","hashOfConfig":"179"},{"size":3928,"mtime":1630057647863,"results":"180","hashOfConfig":"179"},{"size":362,"mtime":499162500000,"results":"181","hashOfConfig":"179"},{"size":3912,"mtime":1629971312318,"results":"182","hashOfConfig":"179"},{"size":3333,"mtime":1629889340985,"results":"183","hashOfConfig":"179"},{"size":6534,"mtime":1629893154026,"results":"184","hashOfConfig":"179"},{"size":1120,"mtime":1629798925644,"results":"185","hashOfConfig":"179"},{"size":1959,"mtime":1624254152102,"results":"186","hashOfConfig":"179"},{"size":21988,"mtime":1629885801916,"results":"187","hashOfConfig":"179"},{"size":3005,"mtime":1629795863609,"results":"188","hashOfConfig":"179"},{"size":7355,"mtime":1629968255814,"results":"189","hashOfConfig":"179"},{"size":2590,"mtime":1629795447720,"results":"190","hashOfConfig":"179"},{"size":10528,"mtime":1629795692331,"results":"191","hashOfConfig":"179"},{"size":296,"mtime":1624447209854,"results":"192","hashOfConfig":"179"},{"size":474,"mtime":1624528171351,"results":"193","hashOfConfig":"179"},{"size":8131,"mtime":1629732571815,"results":"194","hashOfConfig":"179"},{"size":1587,"mtime":1629712439457,"results":"195","hashOfConfig":"179"},{"size":288,"mtime":1627229989950,"results":"196","hashOfConfig":"179"},{"size":1365,"mtime":1629711273277,"results":"197","hashOfConfig":"179"},{"size":3873,"mtime":1629969025798,"results":"198","hashOfConfig":"179"},{"size":1498,"mtime":1627111887359,"results":"199","hashOfConfig":"179"},{"size":2303,"mtime":1628245945320,"results":"200","hashOfConfig":"179"},{"size":8060,"mtime":1627381359115,"results":"201","hashOfConfig":"179"},{"size":399,"mtime":1624797071327,"results":"202","hashOfConfig":"179"},{"size":3467,"mtime":1626865886669,"results":"203","hashOfConfig":"179"},{"size":8284,"mtime":1627546084319,"results":"204","hashOfConfig":"179"},{"size":2831,"mtime":1626865875400,"results":"205","hashOfConfig":"179"},{"size":1530,"mtime":1625141318699,"results":"206","hashOfConfig":"179"},{"size":2347,"mtime":1627385015199,"results":"207","hashOfConfig":"179"},{"size":7623,"mtime":1627386248729,"results":"208","hashOfConfig":"179"},{"size":5027,"mtime":1629969242758,"results":"209","hashOfConfig":"179"},{"size":1554,"mtime":1629719735173,"results":"210","hashOfConfig":"179"},{"size":7786,"mtime":1629720080175,"results":"211","hashOfConfig":"179"},{"size":16776,"mtime":1629971404419,"results":"212","hashOfConfig":"179"},{"size":4095,"mtime":1629969094420,"results":"213","hashOfConfig":"179"},{"size":3705,"mtime":1627118541965,"results":"214","hashOfConfig":"179"},{"size":5528,"mtime":1630058303399,"results":"215","hashOfConfig":"179"},{"size":9300,"mtime":1629748074118,"results":"216","hashOfConfig":"179"},{"size":5815,"mtime":1629972226111,"results":"217","hashOfConfig":"179"},{"size":1251,"mtime":1630055478019,"results":"218","hashOfConfig":"179"},{"size":1622,"mtime":1630057188253,"results":"219","hashOfConfig":"179"},{"size":1922,"mtime":1629893270603,"results":"220","hashOfConfig":"179"},{"size":420,"mtime":1627300591742,"results":"221","hashOfConfig":"179"},{"size":2262,"mtime":1629795740624,"results":"222","hashOfConfig":"179"},{"size":10530,"mtime":1629797524902,"results":"223","hashOfConfig":"179"},{"size":2390,"mtime":1629796575657,"results":"224","hashOfConfig":"179"},{"size":1126,"mtime":1629460099300,"results":"225","hashOfConfig":"179"},{"size":2307,"mtime":1630056381214,"results":"226","hashOfConfig":"179"},{"size":2311,"mtime":1629796520146,"results":"227","hashOfConfig":"179"},{"size":1072,"mtime":1629982941261,"results":"228","hashOfConfig":"179"},{"size":1346,"mtime":1630058336919,"results":"229","hashOfConfig":"179"},{"size":780,"mtime":1629878776145,"results":"230","hashOfConfig":"231"},{"size":3931,"mtime":1630486275485,"results":"232","hashOfConfig":"231"},{"size":3005,"mtime":1629795863609,"results":"233","hashOfConfig":"231"},{"size":362,"mtime":499162500000,"results":"234","hashOfConfig":"231"},{"size":3334,"mtime":1630486367455,"results":"235","hashOfConfig":"231"},{"size":21680,"mtime":1630499923179,"results":"236","hashOfConfig":"231"},{"size":2390,"mtime":1630486399671,"results":"237","hashOfConfig":"231"},{"size":8132,"mtime":1630486441499,"results":"238","hashOfConfig":"231"},{"size":2306,"mtime":1630486451410,"results":"239","hashOfConfig":"231"},{"size":3873,"mtime":1630497392382,"results":"240","hashOfConfig":"231"},{"size":4402,"mtime":1630486493407,"results":"241","hashOfConfig":"231"},{"size":6537,"mtime":1630486448559,"results":"242","hashOfConfig":"231"},{"size":8287,"mtime":1630486489952,"results":"243","hashOfConfig":"231"},{"size":2834,"mtime":1630486496305,"results":"244","hashOfConfig":"231"},{"size":7626,"mtime":1630486469405,"results":"245","hashOfConfig":"231"},{"size":16779,"mtime":1630486462451,"results":"246","hashOfConfig":"231"},{"size":4098,"mtime":1630486503050,"results":"247","hashOfConfig":"231"},{"size":3708,"mtime":1630486499680,"results":"248","hashOfConfig":"231"},{"size":2350,"mtime":1630486466972,"results":"249","hashOfConfig":"231"},{"size":10503,"mtime":1630488366727,"results":"250","hashOfConfig":"231"},{"size":5525,"mtime":1630486480439,"results":"251","hashOfConfig":"231"},{"size":2310,"mtime":1630486432630,"results":"252","hashOfConfig":"231"},{"size":5818,"mtime":1630486457241,"results":"253","hashOfConfig":"231"},{"size":2265,"mtime":1630486435191,"results":"254","hashOfConfig":"231"},{"size":1072,"mtime":1629982941261,"results":"255","hashOfConfig":"231"},{"size":2314,"mtime":1630486445950,"results":"256","hashOfConfig":"231"},{"size":12627,"mtime":1630497395130,"results":"257","hashOfConfig":"231"},{"size":3873,"mtime":1629969025798,"results":"258","hashOfConfig":"231"},{"size":7355,"mtime":1629968255814,"results":"259","hashOfConfig":"231"},{"size":1587,"mtime":1629712439457,"results":"260","hashOfConfig":"231"},{"size":5027,"mtime":1629969242758,"results":"261","hashOfConfig":"231"},{"size":299,"mtime":1630486393699,"results":"262","hashOfConfig":"231"},{"size":1959,"mtime":1624254152102,"results":"263","hashOfConfig":"231"},{"size":477,"mtime":1630486391218,"results":"264","hashOfConfig":"231"},{"size":420,"mtime":1627300591742,"results":"265","hashOfConfig":"231"},{"size":1123,"mtime":1630486405871,"results":"266","hashOfConfig":"231"},{"size":1254,"mtime":1630486418631,"results":"267","hashOfConfig":"231"},{"size":402,"mtime":1630486383081,"results":"268","hashOfConfig":"231"},{"size":1625,"mtime":1630486579611,"results":"269","hashOfConfig":"231"},{"size":1365,"mtime":1629711273277,"results":"270","hashOfConfig":"231"},{"size":10528,"mtime":1629795692331,"results":"271","hashOfConfig":"231"},{"size":8094,"mtime":1630250557876,"results":"272","hashOfConfig":"231"},{"size":7786,"mtime":1629720080175,"results":"273","hashOfConfig":"231"},{"size":1498,"mtime":1627111887359,"results":"274","hashOfConfig":"231"},{"size":2590,"mtime":1629795447720,"results":"275","hashOfConfig":"231"},{"size":1554,"mtime":1629719735173,"results":"276","hashOfConfig":"231"},{"size":288,"mtime":1627229989950,"results":"277","hashOfConfig":"231"},{"size":1349,"mtime":1630486348715,"results":"278","hashOfConfig":"231"},{"size":1533,"mtime":1630486546050,"results":"279","hashOfConfig":"231"},{"size":1925,"mtime":1630486408754,"results":"280","hashOfConfig":"231"},{"size":782,"mtime":1630848052960,"results":"281","hashOfConfig":"282"},{"size":5622,"mtime":1631120173548,"results":"283","hashOfConfig":"282"},{"size":4951,"mtime":1631347453037,"results":"284","hashOfConfig":"282"},{"size":362,"mtime":499162500000,"results":"285","hashOfConfig":"282"},{"size":5334,"mtime":1631114970264,"results":"286","hashOfConfig":"282"},{"size":3334,"mtime":1630486367455,"results":"287","hashOfConfig":"282"},{"size":3793,"mtime":1631033745118,"results":"288","hashOfConfig":"282"},{"size":4710,"mtime":1631115499321,"results":"289","hashOfConfig":"282"},{"size":2512,"mtime":1631115257230,"results":"290","hashOfConfig":"282"},{"size":8731,"mtime":1631115203046,"results":"291","hashOfConfig":"282"},{"size":3089,"mtime":1631115526409,"results":"292","hashOfConfig":"282"},{"size":6621,"mtime":1631115232381,"results":"293","hashOfConfig":"282"},{"size":2592,"mtime":1631115361520,"results":"294","hashOfConfig":"282"},{"size":20944,"mtime":1631268246053,"results":"295","hashOfConfig":"282"},{"size":8785,"mtime":1631115474868,"results":"296","hashOfConfig":"282"},{"size":7503,"mtime":1631328906266,"results":"297","hashOfConfig":"282"},{"size":5005,"mtime":1631347651173,"results":"298","hashOfConfig":"282"},{"size":7720,"mtime":1631266349056,"results":"299","hashOfConfig":"282"},{"size":3708,"mtime":1630486499680,"results":"300","hashOfConfig":"282"},{"size":16845,"mtime":1631266380414,"results":"301","hashOfConfig":"282"},{"size":5820,"mtime":1631347843715,"results":"302","hashOfConfig":"282"},{"size":2391,"mtime":1631115132837,"results":"303","hashOfConfig":"282"},{"size":1240,"mtime":1631260916652,"results":"304","hashOfConfig":"282"},{"size":15886,"mtime":1631328995156,"results":"305","hashOfConfig":"282"},{"size":2346,"mtime":1631115148384,"results":"306","hashOfConfig":"282"},{"size":2397,"mtime":1631115186726,"results":"307","hashOfConfig":"282"},{"size":7344,"mtime":1631111542884,"results":"308","hashOfConfig":"282"},{"size":14596,"mtime":1631328962803,"results":"309","hashOfConfig":"282"},{"size":4355,"mtime":1631347327365,"results":"310","hashOfConfig":"282"},{"size":5027,"mtime":1629969242758,"results":"311","hashOfConfig":"282"},{"size":1587,"mtime":1630944718364,"results":"312","hashOfConfig":"282"},{"size":299,"mtime":1630486393699,"results":"313","hashOfConfig":"282"},{"size":1254,"mtime":1630486418631,"results":"314","hashOfConfig":"282"},{"size":477,"mtime":1630486391218,"results":"315","hashOfConfig":"282"},{"size":402,"mtime":1630486383081,"results":"316","hashOfConfig":"282"},{"size":420,"mtime":1627300591742,"results":"317","hashOfConfig":"282"},{"size":1533,"mtime":1630932513841,"results":"318","hashOfConfig":"282"},{"size":1388,"mtime":1631328732704,"results":"319","hashOfConfig":"282"},{"size":1625,"mtime":1630486579611,"results":"320","hashOfConfig":"282"},{"size":9084,"mtime":1631347377220,"results":"321","hashOfConfig":"282"},{"size":1554,"mtime":1629719735173,"results":"322","hashOfConfig":"282"},{"size":1674,"mtime":1631347242736,"results":"323","hashOfConfig":"282"},{"size":1365,"mtime":1629711273277,"results":"324","hashOfConfig":"282"},{"size":2591,"mtime":1630658537280,"results":"325","hashOfConfig":"282"},{"size":10484,"mtime":1631256308743,"results":"326","hashOfConfig":"282"},{"size":288,"mtime":1627229989950,"results":"327","hashOfConfig":"282"},{"size":7757,"mtime":1630919799047,"results":"328","hashOfConfig":"282"},{"size":1349,"mtime":1630486348715,"results":"329","hashOfConfig":"282"},{"size":1925,"mtime":1630486408754,"results":"330","hashOfConfig":"282"},{"size":1959,"mtime":1624254152102,"results":"331","hashOfConfig":"282"},{"size":2734,"mtime":1630747753896,"results":"332","hashOfConfig":"282"},{"size":1045,"mtime":1630741325410,"results":"333","hashOfConfig":"282"},{"size":1150,"mtime":1630908268561,"results":"334","hashOfConfig":"282"},{"size":2888,"mtime":1630908870345,"results":"335","hashOfConfig":"282"},{"size":4436,"mtime":1630740126228,"results":"336","hashOfConfig":"282"},{"size":4438,"mtime":1630910243129,"results":"337","hashOfConfig":"282"},{"size":4576,"mtime":1630910305500,"results":"338","hashOfConfig":"282"},{"size":3380,"mtime":1630917996502,"results":"339","hashOfConfig":"282"},{"size":3894,"mtime":1630917906649,"results":"340","hashOfConfig":"282"},{"size":4543,"mtime":1630909646556,"results":"341","hashOfConfig":"282"},{"size":3949,"mtime":1630917982248,"results":"342","hashOfConfig":"282"},{"size":3414,"mtime":1630917988091,"results":"343","hashOfConfig":"282"},{"size":4899,"mtime":1630944719641,"results":"344","hashOfConfig":"282"},{"size":1446,"mtime":1630924317402,"results":"345","hashOfConfig":"282"},{"size":9797,"mtime":1631079969519,"results":"346","hashOfConfig":"282"},{"size":7000,"mtime":1630954593591,"results":"347","hashOfConfig":"282"},{"size":3140,"mtime":1630932494859,"results":"348","hashOfConfig":"282"},{"size":1255,"mtime":1630932158916,"results":"349","hashOfConfig":"282"},{"size":6883,"mtime":1630946904833,"results":"350","hashOfConfig":"282"},{"size":15743,"mtime":1631267662032,"results":"351","hashOfConfig":"282"},{"size":4685,"mtime":1630954998634,"results":"352","hashOfConfig":"282"},{"size":6296,"mtime":1631183182154,"results":"353","hashOfConfig":"282"},{"size":1569,"mtime":1631255390350,"results":"354","hashOfConfig":"282"},{"size":566,"mtime":1631118202649,"results":"355","hashOfConfig":"282"},{"size":1911,"mtime":1631156711948,"results":"356","hashOfConfig":"282"},{"size":7102,"mtime":1631330366648,"results":"357","hashOfConfig":"282"},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},"3dispn",{"filePath":"361","messages":"362","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"363","messages":"364","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"365","messages":"366","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"367","usedDeprecatedRules":"360"},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"370","messages":"371","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"372","usedDeprecatedRules":"360"},{"filePath":"373","messages":"374","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"375","messages":"376","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"377","messages":"378","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"379","messages":"380","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"381","messages":"382","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"383","messages":"384","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"385","messages":"386","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"387","messages":"388","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"389","messages":"390","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"391","messages":"392","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"393","messages":"394","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"395","messages":"396","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"397","messages":"398","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"399","messages":"400","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"401","messages":"402","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"403","messages":"404","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"433","messages":"434","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"435"},{"filePath":"436","messages":"437","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"438","messages":"439","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"440","messages":"441","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"442","messages":"443","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"444","messages":"445","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"446","messages":"447","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"448","messages":"449","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"450","messages":"451","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"452","messages":"453","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"454","usedDeprecatedRules":"360"},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"457"},{"filePath":"458","messages":"459","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"360"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464"},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},"1wxkiiz",{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"480","messages":"481","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"482","messages":"483","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"490","messages":"491","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"492","usedDeprecatedRules":"469"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"507","messages":"508","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"509","messages":"510","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"511","messages":"512","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"513","messages":"514","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"515","messages":"516","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"517","messages":"518","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"464","usedDeprecatedRules":"469"},{"filePath":"519","messages":"520","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"521","messages":"522","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"523","usedDeprecatedRules":"469"},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"469"},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},"16qbnu6",{"filePath":"573","messages":"574","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"575","messages":"576","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"577","messages":"578","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"581","usedDeprecatedRules":"572"},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"586","usedDeprecatedRules":"572"},{"filePath":"587","messages":"588","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"589","messages":"590","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"593","messages":"594","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"595","messages":"596","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"597","usedDeprecatedRules":"572"},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"600","messages":"601","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"602"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"607","messages":"608","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"614","messages":"615","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"616"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"623"},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"632","messages":"633","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"634"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"655","messages":"656","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"657","messages":"658","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"667","messages":"668","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"669"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"690","messages":"691","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"692","usedDeprecatedRules":"572"},{"filePath":"693","messages":"694","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"695","usedDeprecatedRules":"572"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"572"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"715","messages":"716","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"717","messages":"718","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"721","usedDeprecatedRules":"572"},{"filePath":"722","messages":"723","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"724"},{"filePath":"725","messages":"726","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"727","messages":"728","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"729"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"734","messages":"735","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"572"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"738"},"D:\\projects React\\proShop\\frontend\\src\\index.js",[],["739","740"],"D:\\projects React\\proShop\\frontend\\src\\App.js",[],"D:\\projects React\\proShop\\frontend\\src\\reportWebVitals.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\Header.js",["741"],"import React from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container, Navbar, Nav, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n// import { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-dark\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand >Thuận's Shoe</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Collapse className='justify-content-end' id='basic-navbar-nav'>\r\n                        {/* <Nav class=\"mx-auto order-0\">\r\n                            //add something here like brand, category in future\r\n                        </Nav> */}\r\n                        <Nav className=\"ml-auto\">\r\n                            <Route render={({ history }) => <SearchBox history={history} />} />\r\n                            {userInfo && userInfo.isAdmin ? (\r\n                                <NavDropdown title='Manager' id='adminmenu'>\r\n                                    \r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>  Users </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item> Products </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item> Orders </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/cart'>\r\n                                    <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                                </LinkContainer>)\r\n                            }\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            {/* <i className=\"fa fa-user fa-fw\" /> */}\r\n                                            {' '}Profile </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        {/* <i className=\"fa fa-sign-out fa-fw\" /> */}\r\n                                        Logout </NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                            )\r\n                                : <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                                </LinkContainer>}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","D:\\projects React\\proShop\\frontend\\src\\components\\Footer.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\HomeScreen.js",["742","743","744"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts, listTopProductsByBrand, listTopProductsByCategory } from '../actions/productActions'\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\n\r\n// import { ComparisonSlider } from 'react-comparison-slider'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const brand = \"Adidas\"\r\n    const category = \"Womens\"\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productTopRatedByBrand = useSelector(state => state.productTopRatedByBrand)\r\n    const { loading: loading1, error: error1, products: productsTopRatedByBrand } = productTopRatedByBrand\r\n\r\n    const productTopRatedByCategory = useSelector(state => state.productTopRatedByCategory)\r\n    const { loading: loading2, error: error2, products: productsTopRatedByCategory } = productTopRatedByCategory\r\n\r\n    const images = [\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892628/shop/z3i6ndgwegrgijgnzyjb.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892698/shop/elspkzrsrc49pitru5ma.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892984/shop/hkiwohtzqhfvwuw1fi2q.jpg\" },\r\n\r\n    ];\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n        dispatch(listTopProductsByBrand(brand))\r\n        dispatch(listTopProductsByCategory(category))\r\n\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n\r\n            {!keyword ? <ProductCarousel />\r\n                : <Link to='/' className='btn btn-light'>Go Back</Link>\r\n            }\r\n            <hr />\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Link to={\"/brand/Nike\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/nike.png\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                            <div class=\"card-img-overlay\">\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Link to={\"/brand/Converse\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/Converse.jpg\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                        </div>\r\n                    </Link>\r\n                </Col><Col md={4}>\r\n                    <Link to={\"/brand/Adidas\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/adidas.jpg\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n            <br />\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Most Rated of Adidas </span><b></b></h2>\r\n            {\r\n                loading1 ? <Loader />\r\n                    : error1 ? <Message variant='danger'> {error1} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {productsTopRatedByBrand.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </>\r\n                        )\r\n            }\r\n            <hr />\r\n            <div className='text-center py-3'>\r\n                <SimpleImageSlider\r\n                    width={1560}\r\n                    height={600}\r\n                    images={images}\r\n                    showBullets={true}\r\n                    showNavs={true}\r\n                    style={{marginLeft:\"-130px\"}}\r\n                />\r\n            </div>\r\n            <br />\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Women's favorite shoes</span><b></b></h2>\r\n            {\r\n                loading2 ? <Loader />\r\n                    : error2 ? <Message variant='danger'> {error2} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {productsTopRatedByCategory.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </>\r\n                        )\r\n            }\r\n            <hr />\r\n\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Lastest Products</span><b></b></h2>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {products.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                                <div class=\"section-title section-title-center\"><b></b><Link to=\"/allproduct\">See All Products</Link><b></b></div>\r\n                            </>\r\n                        )\r\n\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","D:\\projects React\\proShop\\frontend\\src\\components\\Product.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\Rating.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\store.js",[],"D:\\projects React\\proShop\\frontend\\src\\reducers\\productReducers.js",[],"D:\\projects React\\proShop\\frontend\\src\\constants\\productConstants.js",[],"D:\\projects React\\proShop\\frontend\\src\\actions\\productActions.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\Message.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\Loader.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\CartScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\projects React\\proShop\\frontend\\src\\constants\\cartConstants.js",[],"D:\\projects React\\proShop\\frontend\\src\\actions\\cartActions.js",[],"D:\\projects React\\proShop\\frontend\\src\\reducers\\userReducers.js",[],"D:\\projects React\\proShop\\frontend\\src\\constants\\userConstants.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\actions\\userActions.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\FormContainer.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\projects React\\proShop\\frontend\\src\\constants\\orderConstants.js",[],"D:\\projects React\\proShop\\frontend\\src\\actions\\orderActions.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\OrderScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\ProductListScreen.js",["745"],"import React, { useEffect } from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button, Row, Col } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport AdminSearchBox from '../components/AdminSearchBox'\r\nimport Paginate from '../components/Paginate'\r\nimport { listProducts, deleteProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\nimport Meta from '../components/Meta'\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products, pages, page, count } = productList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productDelete = useSelector(state => state.productDelete)\r\n    const {\r\n        error: errorDelete,\r\n        success: successDelete } = productDelete\r\n\r\n    useEffect(() => {\r\n        dispatch({ type: PRODUCT_CREATE_RESET })\r\n\r\n        if (!userInfo.isAdmin) {\r\n            history.push('/login')\r\n        }\r\n\r\n        dispatch(listProducts(keyword, pageNumber))\r\n\r\n    }, [dispatch, history, successDelete,keyword, userInfo, pageNumber])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure ?')) {\r\n            dispatch(deleteProduct(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Meta title={'Manager Products'} />\r\n\r\n            <Row className='align-items-center'>\r\n                <Col md={4}>\r\n                    <h1>Products {count && `(${count})`}</h1>\r\n                </Col>\r\n                <Col className='btn btn-right'>\r\n                    <Route render={({ history }) => <AdminSearchBox history={history} type=\"products\" />} />\r\n\r\n                </Col>\r\n                <Col className='btn btn-right'>\r\n                    <LinkContainer to={`/admin/product/create`}>\r\n                        <Button className='btn btn-primary'>\r\n                            <i className='fas fa-plus'></i>\r\n                            {' '} Create Product\r\n                        </Button>\r\n\r\n                    </LinkContainer>\r\n\r\n                </Col>\r\n\r\n            </Row>\r\n            {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error}</Message>\r\n                        : (\r\n                            <>\r\n                                <Table striped bordered hover responsive className='table-secondary'>\r\n                                    <thead>\r\n                                        <tr>\r\n                                            <th>NAME</th>\r\n                                            <th>PRICE</th>\r\n                                            <th>CATEGORY</th>\r\n                                            <th>BRAND</th>\r\n                                            <th>METHOD</th>\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        {products.map(product => (\r\n                                            <tr key={product._id}>\r\n                                                <td>{product.name}</td>\r\n                                                <td>${product.price}</td>\r\n                                                <td>{product.category}</td>\r\n                                                <td>{product.brand}</td>\r\n                                                <td>\r\n                                                    <LinkContainer to={`/admin/product/${product._id}/edit`}>\r\n                                                        <Button variant='light' className='btn-sm'>\r\n                                                            <i className='fas fa-edit'></i>\r\n                                                            EDIT\r\n                                                        </Button>\r\n                                                    </LinkContainer>\r\n                                                    <Button variant='danger' className='btn-sm'\r\n                                                        onClick={() => deleteHandler(product._id)}>\r\n                                                        <i className='fas fa-trash'></i>\r\n                                                        {' '}DELETE\r\n                                                    </Button>\r\n                                                </td>\r\n                                            </tr>\r\n                                        ))}\r\n                                    </tbody>\r\n                                </Table>\r\n                                <Paginate\r\n                                    pages={pages}\r\n                                    page={page}\r\n                                    keyword={keyword ? keyword : ''}\r\n                                    isAdmin={true}\r\n                                    details='productlist' />\r\n                            </>\r\n                        )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductListScreen\r\n","D:\\projects React\\proShop\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\SearchBox.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\Paginate.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\Meta.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\BrandScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\ProductCreateScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\components\\Navigation.js",["746"],"import React from 'react'\r\nimport { Route, Link } from 'react-router-dom'\r\nimport { Nav, NavDropdown } from 'react-bootstrap'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\n\r\nconst Navigation = () => {\r\n    return (\r\n        <>\r\n            <ul class=\"nav justify-content-center\">\r\n\r\n                <Nav class=\"nav-item\">\r\n                    <Link class=\"nav-link active\" to=\"/\">Home</Link>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n\r\n                    <NavDropdown title='Brands'>\r\n                        <LinkContainer to='/brand/Nike'>\r\n                            <NavDropdown.Item><strong>Nike</strong></NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <div class=\"dropdown-divider\" />\r\n\r\n                        <LinkContainer to='/brand/Adidas'>\r\n                            <NavDropdown.Item><strong>Adidas</strong></NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <div class=\"dropdown-divider\" />\r\n\r\n                        <LinkContainer to='/brand/Converse'>\r\n                        <NavDropdown.Item><strong>Converse</strong></NavDropdown.Item>\r\n                        </LinkContainer>\r\n                    </NavDropdown>\r\n                </Nav>\r\n\r\n                <Nav className=\"ml-auto\">\r\n                    <NavDropdown title='Categories'>\r\n                        <LinkContainer to='/category/Mens'>\r\n                            <NavDropdown.Item><strong>Mens</strong></NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <div class=\"dropdown-divider\" />\r\n\r\n                        <LinkContainer to='/category/Womens'>\r\n                            <NavDropdown.Item><strong>Womens</strong></NavDropdown.Item>\r\n                        </LinkContainer>\r\n                        <div class=\"dropdown-divider\" />\r\n\r\n                        <LinkContainer to='/category/Kids'>\r\n                            <NavDropdown.Item><strong>Kids</strong></NavDropdown.Item>\r\n                        </LinkContainer>\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Nav class=\"nav-item\">\r\n                    <Link class=\"nav-link\" to=\"/about\" tabindex=\"-1\" aria-disabled=\"true\">About</Link>\r\n                </Nav>\r\n\r\n            </ul>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation","D:\\projects React\\proShop\\frontend\\src\\components\\ProductTop3.js",[],["747","748"],"D:\\projects React\\proShop\\frontend\\src\\screens\\AllProductScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\CategoryScreen.js",[],"D:\\projects React\\proShop\\frontend\\src\\screens\\AboutScreen.js",["749"],"import React from 'react'\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\n\r\n\r\nconst AboutScreen = ({ }) => {\r\n\r\n    const images = [\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892050/shop/ntyfa5jauma2miqqq7ss.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892346/shop/xmnqusgpc17n7016xq9p.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892371/shop/ziixbpvi20vroh9htwuc.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892393/shop/rpoizmsch63svmfsmnbn.jpg\" },\r\n//\r\n    ];\r\n    return (\r\n        <>\r\n            <div className='text-center py-3'>\r\n            <h2>About Me</h2>\r\n\r\n                <SimpleImageSlider\r\n                    width={1200}\r\n                    height={600}\r\n                    images={images}\r\n                    showBullets={true}\r\n                    showNavs={true}\r\n                    style={{marginLeft:\"4%\"}}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AboutScreen\r\n","D:\\projects React\\proShop\\frontend\\src\\components\\AdminSearchBox.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\index.js",[],["750","751"],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\App.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\store.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reportWebVitals.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Footer.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Navigation.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\CartScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Header.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\HomeScreen.js",["752","753","754"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap-v5'\r\nimport { Link } from 'react-router-dom'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts, listTopProductsByBrand, listTopProductsByCategory } from '../actions/productActions'\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\n\r\n// import { ComparisonSlider } from 'react-comparison-slider'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const brand = \"Adidas\"\r\n    const category = \"Womens\"\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productTopRatedByBrand = useSelector(state => state.productTopRatedByBrand)\r\n    const { loading: loading1, error: error1, products: productsTopRatedByBrand } = productTopRatedByBrand\r\n\r\n    const productTopRatedByCategory = useSelector(state => state.productTopRatedByCategory)\r\n    const { loading: loading2, error: error2, products: productsTopRatedByCategory } = productTopRatedByCategory\r\n\r\n    const images = [\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892628/shop/z3i6ndgwegrgijgnzyjb.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892698/shop/elspkzrsrc49pitru5ma.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892984/shop/hkiwohtzqhfvwuw1fi2q.jpg\" },\r\n\r\n    ];\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n        dispatch(listTopProductsByBrand(brand))\r\n        dispatch(listTopProductsByCategory(category))\r\n\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Meta />\r\n\r\n            {!keyword ? <ProductCarousel />\r\n                : <Link to='/' className='btn btn-light'>Go Back</Link>\r\n            }\r\n            <hr />\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Link to={\"/brand/Nike\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/nike.png\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                            <div class=\"card-img-overlay\">\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Link to={\"/brand/Converse\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/Converse.jpg\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                        </div>\r\n                    </Link>\r\n                </Col><Col md={4}>\r\n                    <Link to={\"/brand/Adidas\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/adidas.jpg\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n            <br />\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Most Rated of Adidas </span><b></b></h2>\r\n            {\r\n                loading1 ? <Loader />\r\n                    : error1 ? <Message variant='danger'> {error1} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {productsTopRatedByBrand.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </>\r\n                        )\r\n            }\r\n            <hr />\r\n            <div className='text-center py-3'>\r\n                <SimpleImageSlider\r\n                    width={1560}\r\n                    height={600}\r\n                    images={images}\r\n                    showBullets={true}\r\n                    showNavs={true}\r\n                    style={{marginLeft:\"-130px\"}}\r\n                />\r\n            </div>\r\n            <br />\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Women's favorite shoes</span><b></b></h2>\r\n            {\r\n                loading2 ? <Loader />\r\n                    : error2 ? <Message variant='danger'> {error2} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {productsTopRatedByCategory.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </>\r\n                        )\r\n            }\r\n            <hr />\r\n\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Lastest Products</span><b></b></h2>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {products.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                                <div class=\"section-title section-title-center\"><b></b><Link to=\"/allproduct\">See All Products</Link><b></b></div>\r\n                            </>\r\n                        )\r\n\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\OrderScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\UserListScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\AllProductScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\BrandScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\AboutScreen.js",["755"],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\CategoryScreen.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\screens\\ProductCreateScreen.js",["756","757"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form, Image, Row, Col, Toast } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductCreateScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(0)\r\n    const [images, setImages] = useState([])\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading] = useState(false)\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const [showA, setShowA] = useState(false);\r\n    const toggleShowA = () => setShowA(!showA);\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate } = productCreate\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: PRODUCT_CREATE_RESET })\r\n            history.push('/admin/productlist')\r\n        }\r\n    }, [dispatch, history, successCreate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (name.trim() === \"\") {\r\n            setMessage('Name must not be empty !')\r\n        }\r\n        else if (price <= 0) {\r\n            setMessage('Price must be greater than 0 !')\r\n        }\r\n        else if (images.length === 0) {\r\n            setMessage('Must have at least 1 image !')\r\n        }\r\n        else if (brand.trim() === \"\") {\r\n            setMessage('Brand must not be empty !')\r\n        }\r\n        else if (category.trim() === \"\") {\r\n            setMessage('Category must not be empty !')\r\n        }\r\n        else if (description.trim() === \"\") {\r\n            setMessage('Description must not be empty !')\r\n        }\r\n        else if (countInStock < 0) {\r\n            setMessage('Count In Stock must not be lower than 0 !')\r\n        }\r\n        else {\r\n            dispatch(createProduct(name, price, images, brand, category, countInStock, description))\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n        const file = e.target.files[0]\r\n        if (!file) {\r\n            return alert.error('File not exist!')\r\n        }\r\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\r\n            return alert.error('File format is incorrect!')\r\n        }\r\n        if (file.size > 1024 * 1024 * 5) {\r\n            return alert.error('File too large!')\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('file', file)\r\n\r\n        const res = await axios.post('/api/upload', formData, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n        console.log(res.data);\r\n        setImages(oldArray => [...oldArray, res.data])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <Link to='/admin/productlist' className='btn btn-light my-3'> Go Back </Link>\r\n\r\n                </Col>\r\n                {/* {message &&\r\n                    <Toast show={showA} onClose={toggleShowA} delay={6000} autohide bg='danger'>\r\n                        <Toast.Header>\r\n                            <strong className=\"me-auto\">Warning !</strong>\r\n\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                } */}\r\n            </Row>\r\n            <FormContainer>\r\n                <h1>Create Product</h1>\r\n                {loadingCreate ? <Loader />\r\n                    : errorCreate ? <Message variant='danger'>{errorCreate}</Message>\r\n                        : (\r\n                            <>\r\n                                {message && <Message variant='danger'> {message} </Message>}\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type='name' placeholder='Enter name' value={name}\r\n                                            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='price'>\r\n                                        <Form.Label>Price</Form.Label>\r\n                                        <Form.Control type='number' placeholder='Enter price' value={price}\r\n                                            onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='image1'>\r\n                                        <Form.Label>Image From Left</Form.Label>\r\n                                        {!images[0] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[0](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[0].url} width=\"150\" height=\"150\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n\r\n\r\n                                    <Form.Group controlId='image2'>\r\n                                        <Form.Label>Image From Right</Form.Label>\r\n                                        {!images[1] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[1](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[1].url} width=\"150\" height=\"150\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <Form.Group controlId='image3'>\r\n                                        <Form.Label>Image From Front</Form.Label>\r\n                                        {!images[2] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[2](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[2].url} width=\"150\" height=\"150\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='image4'>\r\n                                        <Form.Label>Image From Behind</Form.Label>\r\n                                        {!images[3] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[3](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[3].url} width=\"150\" height=\"150\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='brand'>\r\n                                        <Form.Label>Brand</Form.Label>\r\n                                        <Form.Control type='text' placeholder='Enter brand' value={brand}\r\n                                            onChange={(e) => setBrand(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='category'>\r\n                                        <Form.Label>Category</Form.Label>\r\n                                        <Form.Control type='text' placeholder='Enter category' value={category}\r\n                                            onChange={(e) => setCategory(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='countInStock'>\r\n                                        <Form.Label>Count In Stock</Form.Label>\r\n                                        <Form.Control type='number' placeholder='Enter Count In Stock' value={countInStock}\r\n                                            onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n\r\n                                    <Form.Group controlId='description'>\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control type='text' placeholder='Enter description' value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Button className=\"btn btn-primary\" type='submit' variant='primary'\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                </Form>\r\n                            </>\r\n                        )}\r\n            </FormContainer>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductCreateScreen","D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\userReducers.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\productReducers.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Message.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Rating.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Loader.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Meta.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Product.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\SearchBox.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\FormContainer.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\Paginate.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\cartActions.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\productActions.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\userActions.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\actions\\orderActions.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\userConstants.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\productConstants.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\orderConstants.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\constants\\cartConstants.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\AdminSearchBox.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\projects React\\Github\\thuan_shoe\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\projects React\\Demo\\frontend\\src\\index.js",[],["758","759"],"D:\\projects React\\Demo\\frontend\\src\\App.js",[],"D:\\projects React\\Demo\\frontend\\src\\store.js",[],"D:\\projects React\\Demo\\frontend\\src\\reportWebVitals.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Header.js",["760"],"import React from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Container, Navbar, Nav, NavDropdown, Button } from 'react-bootstrap-v5'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { logout } from '../actions/userActions'\r\nimport SearchBox from './SearchBox'\r\n// import { Link } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const logoutHandler = () => {\r\n        dispatch(logout())\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <Navbar className=\"navbar navbar-expand-lg navbar-dark bg-dark\" collapseOnSelect>\r\n                <Container>\r\n                    <LinkContainer to='/'>\r\n                        <Navbar.Brand >Thuận's Shoe</Navbar.Brand>\r\n                    </LinkContainer>\r\n\r\n                    <Navbar.Collapse className='justify-content-end' id='basic-navbar-nav'>\r\n                        {/* <Nav class=\"mx-auto order-0\">\r\n                            //add something here like brand, category in future\r\n                        </Nav> */}\r\n                        <Nav className=\"ml-auto\">\r\n                            <Route render={({ history }) => <SearchBox history={history} />} />\r\n                            {userInfo && userInfo.isAdmin ? (\r\n                                <NavDropdown title='Manager' id='adminmenu'>\r\n\r\n                                    <LinkContainer to='/admin/userlist'>\r\n                                        <NavDropdown.Item>  Users </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/productlist'>\r\n                                        <NavDropdown.Item> Products </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/receiptlist'>\r\n                                        <NavDropdown.Item> Receipts </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/orderlist'>\r\n                                        <NavDropdown.Item> Orders </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/statistic'>\r\n                                        <NavDropdown.Item> Statistic </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/revenue'>\r\n                                        <NavDropdown.Item> Revenue </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/brandlist'>\r\n                                        <NavDropdown.Item> Brands </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <LinkContainer to='/admin/categorylist'>\r\n                                        <NavDropdown.Item> Categories </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                </NavDropdown>\r\n                            ) : (\r\n                                <LinkContainer to='/cart'>\r\n                                    <Nav.Link><i className='fas fa-shopping-cart'></i> Cart</Nav.Link>\r\n                                </LinkContainer>)\r\n                            }\r\n\r\n                            {userInfo ? (\r\n                                <NavDropdown title={userInfo.name} id='username'>\r\n                                    <LinkContainer to='/profile'>\r\n                                        <NavDropdown.Item>\r\n                                            {/* <i className=\"fa fa-user fa-fw\" /> */}\r\n                                            {' '}Profile </NavDropdown.Item>\r\n                                    </LinkContainer>\r\n                                    <div class=\"dropdown-divider\" />\r\n\r\n                                    <NavDropdown.Item onClick={logoutHandler}>\r\n                                        {/* <i className=\"fa fa-sign-out fa-fw\" /> */}\r\n                                        Logout </NavDropdown.Item>\r\n                                </NavDropdown>\r\n\r\n                            )\r\n                                : <LinkContainer to='/login'>\r\n                                    <Nav.Link><i className='fas fa-user'></i> Sign In</Nav.Link>\r\n                                </LinkContainer>}\r\n                        </Nav>\r\n                    </Navbar.Collapse>\r\n                </Container>\r\n            </Navbar >\r\n        </header >\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","D:\\projects React\\Demo\\frontend\\src\\components\\Footer.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Navigation.js",["761"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Nav, NavDropdown, Dropdown } from 'react-bootstrap-v5'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { listBrands } from '../actions/brandActions'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listCategories } from '../actions/categoryActions'\r\n\r\nconst Navigation = () => {\r\n    const dispatch = useDispatch()\r\n\r\n    const brandList = useSelector(state => state.brandList)\r\n    const { loading, error, brands } = brandList\r\n\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { loading: loadingCate, error: errorCate, categories } = categoryList\r\n\r\n    useEffect(() => {\r\n        dispatch(listBrands())\r\n        dispatch(listCategories())\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <>\r\n            <div class=\"nav justify-content-center\">\r\n\r\n                <Nav class=\"nav-item\">\r\n                    <Link class=\"nav-link active\" to=\"/\">Home</Link>\r\n                </Nav>\r\n                <Nav className=\"ml-auto\">\r\n\r\n                    <NavDropdown title='Brands'>\r\n                        {\r\n                            loading ? <Loader />\r\n                                : error ? <Message variant='danger'> {error}</Message>\r\n                                    : (\r\n                                        <>\r\n                                            {brands.map(brand => (\r\n                                                <>\r\n                                                    <LinkContainer to={`/brand/${brand.name}`}>\r\n                                                        <NavDropdown.Item><strong>{brand.name}</strong></NavDropdown.Item>\r\n                                                    </LinkContainer>\r\n                                                    <div class=\"dropdown-divider\" />\r\n\r\n                                                </>\r\n                                            ))}\r\n\r\n                                        </>\r\n                                    )\r\n                        }\r\n\r\n                    </NavDropdown>\r\n                </Nav>\r\n\r\n                <Nav className=\"ml-auto\">\r\n\r\n                    <NavDropdown title='Categories'>\r\n                        {\r\n                            loadingCate ? <Loader />\r\n                                : errorCate ? <Message variant='danger'> {errorCate}</Message>\r\n                                    : (\r\n                                        categories && (\r\n                                            <>\r\n                                                {categories.map(category => (\r\n                                                    <>\r\n                                                        <LinkContainer to={`/category/${category.name}`}>\r\n                                                            <NavDropdown.Item><strong>{category.name}</strong></NavDropdown.Item>\r\n                                                        </LinkContainer>\r\n                                                        <div class=\"dropdown-divider\" />\r\n                                                    </>\r\n                                                ))}\r\n                                            </>\r\n                                        )\r\n                                    )\r\n                        }\r\n                    </NavDropdown>\r\n                </Nav>\r\n                <Nav class=\"nav-item\">\r\n                    <Link class=\"nav-link\" to=\"/about\" tabindex=\"-1\" aria-disabled=\"true\">About</Link>\r\n                </Nav>\r\n\r\n            </div>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Navigation","D:\\projects React\\Demo\\frontend\\src\\screens\\RegisterScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\LoginScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\CartScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\ShippingScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\HomeScreen.js",["762","763","764"],"import React, { useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col } from 'react-bootstrap-v5'\r\nimport { Link } from 'react-router-dom'\r\nimport Product from '../components/Product'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport ProductCarousel from '../components/ProductCarousel'\r\nimport { listProducts, listTopProductsByBrand, listTopProductsByCategory } from '../actions/productActions'\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\nimport Navigation from '../components/Navigation'\r\n\r\n// import { ComparisonSlider } from 'react-comparison-slider'\r\n\r\nconst HomeScreen = ({ match }) => {\r\n    const keyword = match.params.keyword\r\n    const pageNumber = match.params.pageNumber || 1\r\n    const brand = \"Adidas\"\r\n    const category = \"Womens\"\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productList = useSelector(state => state.productList)\r\n    const { loading, error, products } = productList\r\n\r\n    const productTopRatedByBrand = useSelector(state => state.productTopRatedByBrand)\r\n    const { loading: loading1, error: error1, products: productsTopRatedByBrand } = productTopRatedByBrand\r\n\r\n    const productTopRatedByCategory = useSelector(state => state.productTopRatedByCategory)\r\n    const { loading: loading2, error: error2, products: productsTopRatedByCategory } = productTopRatedByCategory\r\n\r\n    const images = [\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892628/shop/z3i6ndgwegrgijgnzyjb.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892698/shop/elspkzrsrc49pitru5ma.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892984/shop/hkiwohtzqhfvwuw1fi2q.jpg\" },\r\n\r\n    ];\r\n    useEffect(() => {\r\n        dispatch(listProducts(keyword, pageNumber))\r\n        dispatch(listTopProductsByBrand(brand))\r\n        dispatch(listTopProductsByCategory(category))\r\n\r\n    }, [dispatch, keyword, pageNumber])\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n\r\n            <Meta />\r\n\r\n            {!keyword ? <ProductCarousel />\r\n                : <Link to='/' className='btn btn-light'>Go Back</Link>\r\n            }\r\n            <hr />\r\n            <Row>\r\n                <Col md={4}>\r\n                    <Link to={\"/brand/Nike\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/nike.png\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                            <div class=\"card-img-overlay\">\r\n                            </div>\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Link to={\"/brand/Converse\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/Converse.jpg\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                        </div>\r\n                    </Link>\r\n                </Col><Col md={4}>\r\n                    <Link to={\"/brand/Adidas\"}>\r\n\r\n                        <div class=\"card bg-dark text-dark\">\r\n                            <img src=\"../images/adidas.jpg\" alt=\"Card image\" width=\"415\"\r\n                                height=\"550\" />\r\n                        </div>\r\n                    </Link>\r\n                </Col>\r\n\r\n            </Row>\r\n            <br />\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Most Rated of Adidas </span><b></b></h2>\r\n            {\r\n                loading1 ? <Loader />\r\n                    : error1 ? <Message variant='danger'> {error1} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {productsTopRatedByBrand.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </>\r\n                        )\r\n            }\r\n            <hr />\r\n            <div className='text-center py-3'>\r\n                <SimpleImageSlider\r\n                    width={1560}\r\n                    height={600}\r\n                    images={images}\r\n                    showBullets={true}\r\n                    showNavs={true}\r\n                    style={{ marginLeft: \"-130px\" }}\r\n                />\r\n            </div>\r\n            <br />\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Women's favorite shoes</span><b></b></h2>\r\n            {\r\n                loading2 ? <Loader />\r\n                    : error2 ? <Message variant='danger'> {error2} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {productsTopRatedByCategory.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                            </>\r\n                        )\r\n            }\r\n            <hr />\r\n\r\n            <h2 class=\"section-title section-title-center\"><b></b><span class=\"section-title-main\">Lastest Products</span><b></b></h2>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    {products.map((product) => (\r\n                                        <Col key={product._id} sm={12} md={6} lg={4} xl={3}>\r\n                                            <Product product={product} />\r\n                                        </Col>\r\n                                    ))}\r\n                                </Row>\r\n                                <div class=\"section-title section-title-center\"><b></b><Link to=\"/allproduct\">See All Products</Link><b></b></div>\r\n                            </>\r\n                        )\r\n\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default HomeScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\screens\\PaymentScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\ProductScreen.js",["765"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ReactStars from 'react-stars'\r\nimport { Carousel, Row, Col, Image, ListGroup, Button, Form } from 'react-bootstrap-v5' //\r\nimport Rating from '../components/Rating'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport Meta from '../components/Meta'\r\nimport Product from '../components/Product'\r\nimport Slider from \"react-slick\";\r\nimport { listProductDetails, createProductReview, listSameProductsByBrand } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_REVIEW_RESET, PRODUCT_CREATE_REVIEW_SUCCESS } from '../constants/productConstants'\r\nimport Navigation from '../components/Navigation'\r\n\r\nconst ProductScreen = ({ history, match }) => {\r\n    const sizeF = [\r\n        '36',\r\n        '37',\r\n        '38',\r\n        '39',\r\n        '40',\r\n        '41',\r\n        '42',\r\n    ]\r\n\r\n    const ratingChanged = (newRating) => {\r\n        setRating(newRating)\r\n    }\r\n\r\n    const [qty, setQty] = useState(1)\r\n    const [rating, setRating] = useState(0)\r\n    const [comment, setComment] = useState('')\r\n    const [size, setSize] = useState('')\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const productDetails = useSelector(state => state.productDetails)\r\n    const { loading, error, product } = productDetails\r\n\r\n    const productSame = useSelector(state => state.productSame)\r\n    const { loading: loading1, error: error1, products: productsTopRatedByBrand } = productSame\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const productReviewCreate = useSelector(state => state.productReviewCreate)\r\n    const { loading: loadingProductReview, error: errorProductReview, success: successProductReview } = productReviewCreate\r\n\r\n\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 600,\r\n        slidesToShow: 4,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        arrows: true,\r\n        autoplaySpeed: 2000,\r\n        pauseOnFocus: true,\r\n        swipeToSlide: true\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!product || product._id !== match.params.id) {\r\n            dispatch(listProductDetails(match.params.id))\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n        }\r\n\r\n        if (successProductReview) {\r\n            alert('Review Submited !')\r\n            setRating(0)\r\n            setComment('')\r\n            dispatch({ type: PRODUCT_CREATE_REVIEW_RESET })\r\n            dispatch(listProductDetails(match.params.id))\r\n        }\r\n        if (product && product.name) {\r\n            const temp = product.brand.name\r\n            dispatch(listSameProductsByBrand(temp))\r\n        }\r\n\r\n    }, [dispatch, match, successProductReview, product])\r\n    //rõ ràng true;v, dô đây luôn :v\r\n    const addToCartHandler = () => {\r\n\r\n        history.push(`/cart/${match.params.id}?qty=${qty}&size=${size}`)\r\n        //  &size=${size}\r\n    }\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (rating === 0) {\r\n            setMessage('Please select num of start you wanna Rate !')\r\n        }\r\n        else if (comment.trim() === '') {\r\n            setMessage('Please enter your Comment !')\r\n        }\r\n        else {\r\n            setMessage(null)\r\n            dispatch(createProductReview(match.params.id, { rating, comment }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Navigation />\r\n\r\n            {\r\n                loading\r\n                    ? <Loader />\r\n                    : error\r\n                        ? <Message variant='danger' > {error} <Link to='/'>\r\n                            Go back\r\n                        </Link></Message>\r\n                        : (\r\n                            <>\r\n\r\n                                <Meta title={product.name} />\r\n                                <ol class=\"breadcrumb\">\r\n                                    <li class=\"breadcrumb-item\"><a href=\"/\">Home</a></li>\r\n                                    <li class=\"breadcrumb-item\">Product</li>\r\n                                    <li class=\"breadcrumb-item active\">{product.name}</li>\r\n                                </ol>\r\n                                <Row>\r\n                                    <Col md={5} >\r\n                                        <Row>\r\n\r\n\r\n                                            <Carousel\r\n                                                className=\"carousel carousel-dark slide\"\r\n                                                time={1500}\r\n                                                automatic={true}\r\n                                                slideNumber={true}\r\n                                                dots={true}\r\n                                                slideImageFit=\"cover\"\r\n                                                thumbnails={true}\r\n                                                thumbnailWidth=\"100px\"\r\n                                                pauseIconColor=\"white\"\r\n                                                pauseIconSize=\"40px\"\r\n                                                pause='hover'\r\n                                                variant=\"dark\">\r\n                                                {product.images && product.images[0] &&\r\n                                                    <Carousel.Item interval={1800}>\r\n                                                        <Image src={product.images && product.images[0] && product.images[0].url} alt={product.name} thumbnail />\r\n                                                    </Carousel.Item>\r\n                                                }\r\n                                                {product.images && product.images[2] &&\r\n                                                    <Carousel.Item interval={1800}>\r\n                                                        <Image src={product.images && product.images[2] && product.images[2].url} alt={product.name} thumbnail />\r\n                                                    </Carousel.Item>\r\n                                                }\r\n                                                {product.images && product.images[1] &&\r\n                                                    <Carousel.Item interval={1800}>\r\n                                                        <Image src={product.images && product.images[1] && product.images[1].url} alt={product.name} thumbnail />\r\n                                                    </Carousel.Item>\r\n                                                }\r\n                                                {product.images && product.images[3] &&\r\n                                                    <Carousel.Item interval={1800}>\r\n                                                        <Image src={product.images && product.images[3] && product.images[3].url} alt={product.name} thumbnail />\r\n                                                    </Carousel.Item>\r\n                                                }\r\n                                            </Carousel>\r\n                                        </Row>\r\n                                    </Col>\r\n\r\n                                    <Col md={1} />\r\n\r\n                                    <Col md={5}>\r\n                                        <ListGroup variant='flush'>\r\n                                            <ListGroup.Item>\r\n                                                <h3>{product.name}</h3>\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item style={{ padding: \"12px\" }}>\r\n                                                <Rating\r\n                                                    value={product.rating}\r\n                                                    text={`${product.numReviews} reviews`} />\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item style={{ padding: \"12px\" }}>\r\n                                                Price : ${product.price}\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        Decription :\r\n                                                    </Col>\r\n                                                </Row>\r\n                                                <Row>\r\n                                                    <Col>{product.description}</Col>\r\n                                                </Row>\r\n\r\n                                            </ListGroup.Item>\r\n\r\n                                            <ListGroup.Item style={{ padding: \"12px\" }}>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        {`Status : ${product.countInStock > 0 ? 'In Stock' : 'Out of Stock'}`}\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                            {product.countInStock > 0 && (\r\n                                                <>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Quantity :</Col>\r\n                                                            <Col>\r\n                                                                <Form.Control\r\n                                                                    as='select' value={qty}\r\n                                                                    onChange={(e) => setQty(e.target.value)}>\r\n                                                                    {\r\n                                                                        [...Array(product.countInStock).keys()].map(x => (\r\n                                                                            <option key={x + 1} value={x + 1}>\r\n                                                                                {x + 1}\r\n                                                                            </option>\r\n                                                                        ))\r\n                                                                    }\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                    <ListGroup.Item>\r\n                                                        <Row>\r\n                                                            <Col>Size :</Col>\r\n                                                            <Col>\r\n                                                                <Form.Control\r\n                                                                    as='select' value={size}\r\n                                                                    onChange={(e) => setSize(e.target.value)}>\r\n                                                                    {\r\n                                                                        sizeF.map(s => (\r\n                                                                            <option key={s} value={s}>\r\n                                                                                {s}\r\n                                                                            </option>\r\n                                                                        ))\r\n                                                                    }\r\n\r\n                                                                    {!size && setSize(\"36\")}\r\n                                                                </Form.Control>\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                </>\r\n                                            )}\r\n\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Col>\r\n                                                        <Button\r\n                                                            onClick={addToCartHandler}\r\n                                                            className='btn-block'\r\n                                                            type='button'\r\n                                                            disabled={product.countInStock === 0}>\r\n                                                            Add to cart\r\n                                                        </Button>\r\n                                                    </Col>\r\n                                                </Row>\r\n                                            </ListGroup.Item>\r\n\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    <Col md={5}>\r\n                                        <h2>Customer Reviews</h2>\r\n                                        {product.reviews.length === 0 && <Message>No Reviews</Message>}\r\n                                        <ListGroup variant='flush'>\r\n                                            {product.reviews.map(review => (\r\n                                                <ListGroup.Item key={review._id}>\r\n                                                    <strong>{review.name}</strong>\r\n                                                    <Rating value={review.rating} />\r\n                                                    <p>{review.createdAt.substring(0, 10)}</p>\r\n                                                    <p>{review.comment}</p>\r\n                                                </ListGroup.Item>\r\n                                            ))}\r\n                                        </ListGroup>\r\n\r\n                                        <ListGroup variant='flush'>\r\n                                            {\r\n                                                loadingProductReview ? <Loader />\r\n                                                    : errorProductReview ? <Message variant='danger'> {errorProductReview} </Message>\r\n                                                        : (\r\n                                                            <>\r\n                                                                <h2>Write YOUR Review</h2>\r\n                                                                <ListGroup.Item>\r\n                                                                    {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                                                                    {userInfo\r\n                                                                        ? (\r\n                                                                            <>\r\n                                                                                {message && <Message variant='danger'> {message} </Message>}\r\n\r\n                                                                                <Form onSubmit={submitHandler}>\r\n                                                                                    <Form.Group controlId='rating'>\r\n                                                                                        <Form.Label>Rating</Form.Label>\r\n\r\n                                                                                        <ReactStars\r\n                                                                                            count={5}\r\n                                                                                            half={false}\r\n                                                                                            value={rating}\r\n                                                                                            onChange={ratingChanged}\r\n                                                                                            size={50}\r\n                                                                                            color2={'#ffd700'} />\r\n                                                                                    </Form.Group>\r\n                                                                                    <Form.Group controlId='comment'>\r\n                                                                                        <Form.Label>Comment</Form.Label>\r\n                                                                                        <Form.Control\r\n                                                                                            as='textarea'\r\n                                                                                            value={comment}\r\n                                                                                            onChange={(e) => setComment(e.target.value)}>\r\n\r\n                                                                                        </Form.Control>\r\n                                                                                    </Form.Group>\r\n                                                                                    <Button type='submit' variant='primary'>\r\n                                                                                        Submit\r\n                                                                                    </Button>\r\n                                                                                </Form>\r\n                                                                            </>\r\n                                                                        )\r\n                                                                        : <Message> Please <Link to='/login'> Sign in </Link> to write a review {' '} </Message>}\r\n                                                                </ListGroup.Item>\r\n                                                            </>\r\n                                                        )\r\n                                            }\r\n\r\n                                        </ListGroup>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row>\r\n                                    {\r\n                                        loading1 ? <Loader />\r\n                                            : error1 ? <Message variant='danger'> {error1} </Message>\r\n                                                : (\r\n                                                    <>\r\n                                                        <h2>YOU MIGHT ALSO LOVE</h2>\r\n                                                        <Row>\r\n                                                            <Slider {...settings}>\r\n                                                                {productsTopRatedByBrand.map((product) => (\r\n                                                                    <Row>\r\n                                                                        <Col key={product._id}>\r\n                                                                            <Product product={product} />\r\n                                                                        </Col>\r\n                                                                        <Col md={1} />\r\n                                                                    </Row>\r\n                                                                ))}\r\n                                                            </Slider>\r\n                                                        </Row>\r\n                                                    </>\r\n                                                )\r\n                                    }\r\n                                </Row>\r\n\r\n                            </>\r\n                        )\r\n            }\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ProductScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\screens\\ProfileScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\ProductListScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\UserListScreen.js",["766"],"import React, { useEffect } from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Button } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listUsers, deleteUser, disableUser } from '../actions/userActions'\r\nimport Meta from '../components/Meta'\r\n\r\n\r\nconst UserListScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const userList = useSelector(state => state.userList)\r\n    const { loading, error, users } = userList\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDisable = useSelector(state => state.userDisable)\r\n    const { success: successDisable } = userDisable\r\n\r\n    useEffect(() => {\r\n        if (userInfo && userInfo.isAdmin) {\r\n            dispatch(listUsers())\r\n        }\r\n        else {\r\n            history.push('/login')\r\n        }\r\n    }, [dispatch, history, successDisable, userInfo])\r\n\r\n    const deleteHandler = (id) => {\r\n        if (window.confirm('Are you sure ?')) {\r\n            // dispatch(deleteUser(id))\r\n            dispatch(disableUser(id))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Meta title={'Manager Users'} />\r\n\r\n            <h1>Users {users && `(${users.length})`}</h1>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error}</Message>\r\n                        : (\r\n                            <Table striped bordered hover responsive className='table-sm'>\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th>ID</th>\r\n                                        <th>NAME</th>\r\n                                        <th>EMAIL</th>\r\n                                        <th>ADMIN</th>\r\n                                        <th>USING</th>\r\n                                        <th>METHOD</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {users.map(user => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td><a href={`mailto:${user.email}`}>{user.email}</a></td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.isAdmin ? (<i className='fas fa-check' style={{ color: 'green' }}></i>)\r\n                                                        : (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.isDisable ? (<i className='fas fa-times' style={{ color: 'red' }}></i>)\r\n                                                        : (<i className='fas fa-check' style={{ color: 'green' }}></i>)\r\n                                                }\r\n                                            </td>\r\n                                            {\r\n                                                !user.isDisable\r\n                                                    ? (<td>\r\n                                                        <LinkContainer to={`/admin/user/${user._id}/edit`}>\r\n                                                            <Button variant='light' className='btn-sm'>\r\n                                                                <i className='fas fa-edit'></i>\r\n                                                                EDIT\r\n                                                            </Button>\r\n                                                        </LinkContainer>\r\n                                                        <Button variant='danger' className='btn-sm'\r\n                                                            onClick={() => deleteHandler(user._id)}>\r\n                                                            <i className='fas fa-trash'></i>\r\n                                                            {' '} DISABLE\r\n                                                        </Button>\r\n                                                    </td>)\r\n                                                    : (<td />)\r\n                                            }\r\n\r\n                                        </tr>\r\n                                    ))}\r\n                                </tbody>\r\n                            </Table>\r\n                        )\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserListScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\screens\\PlaceOrderScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\UserEditScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\OrderScreen.js",["767"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { PayPalButton } from 'react-paypal-button-v2'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getOrderDetails, payOrder, deliverOrder, cancelOrder } from '../actions/orderActions'\r\nimport { ORDER_CANCEL_RESET, ORDER_DELIVER_RESET, ORDER_PAY_RESET } from '../constants/orderConstants'\r\nimport Meta from '../components/Meta'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\nimport Navigation from '../components/Navigation'\r\n\r\n\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n    const orderId = match.params.id\r\n\r\n    const [sdkReady, setSdkReady] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const orderDetails = useSelector(state => state.orderDetails)\r\n    const { order, loading, error } = orderDetails\r\n\r\n    const orderPay = useSelector(state => state.orderPay)\r\n    const { loading: loadingPay, success: successPay } = orderPay\r\n\r\n    const orderCancel = useSelector(state => state.orderCancel)\r\n    const { loading: loadingCancel, success: successCancel } = orderCancel\r\n\r\n    const orderDeliver = useSelector(state => state.orderDeliver)\r\n    const { loading: loadingDeliver, success: successDeliver } = orderDeliver\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        const addPayPalScript = async () => {\r\n            const { data: clientId } = await axios.get('/api/config/paypal')\r\n            const script = document.createElement('script')\r\n            script.type = 'text/javascript'\r\n            script.src = `https://www.paypal.com/sdk/js?client-id=${clientId}`\r\n            script.async = true\r\n            script.onload = () => {\r\n                setSdkReady(true)\r\n            }\r\n\r\n            document.body.appendChild(script)\r\n        }\r\n\r\n        if (!order || successPay || successDeliver || successCancel || order._id !== orderId) {\r\n            dispatch({ type: ORDER_PAY_RESET })\r\n            dispatch({ type: ORDER_DELIVER_RESET })\r\n            dispatch({ type: ORDER_CANCEL_RESET })\r\n            dispatch(getOrderDetails(orderId))\r\n        }\r\n        else if (!order.isPaid) {\r\n            if (!window.paypal) {\r\n                addPayPalScript()\r\n            } else {\r\n                setSdkReady(true)\r\n            }\r\n        }\r\n\r\n    }, [dispatch, orderId, successPay, successDeliver, successCancel, order, userInfo, history])\r\n\r\n    if (!loading) {\r\n\r\n        // Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        order.itemsPrice = addDecimals(order.orderItems.reduce(\r\n            (acc, item) => Number((acc + item.price * item.qty).toFixed(2)), 0))\r\n    }\r\n\r\n    const successPaymentHandler = (paymentResult) => {\r\n        dispatch(payOrder(orderId, paymentResult))\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setOpen(false);\r\n        dispatch(cancelOrder(order))\r\n    }\r\n\r\n    const deliverHandler = () => {\r\n        dispatch(deliverOrder(order))\r\n    }\r\n\r\n    return (\r\n\r\n        loading ? <Loader />\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n                : <>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <h1>Order {order._id}</h1>\r\n                            <Meta title={`${order.user.name}'s Order`} />\r\n                        </Col>\r\n                        {userInfo && userInfo.isAdmin &&\r\n                            <Col md={4}>\r\n                                <Row>\r\n                                    <Link to='/admin/orderlist' className='btn btn-dark my-3'> Go Back Order List</Link>\r\n                                </Row>\r\n                            </Col>\r\n                        }\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2> Shipping </h2>\r\n                                    <p><strong>Name : </strong> {order.user.name}</p>\r\n                                    <p>\r\n                                        <strong>Email : </strong>\r\n                                        <a href={`mailto:${order.user.email}`}>{order.user.email}</a></p>\r\n                                    <p>\r\n                                        <strong>Address : </strong>\r\n                                        {order.shippingAddress.address},{' '}\r\n                                        {order.shippingAddress.city},{' '}\r\n                                        {order.shippingAddress.country},{' '}\r\n                                        {order.shippingAddress.postalCode}\r\n                                    </p>\r\n                                    {\r\n                                        order.isDelivered\r\n                                            ? <Message variant='success'>Delivered at {order.deliveredAt.substring(0, 10)}</Message>\r\n                                            : <Message variant='info'>Not Delivered</Message>\r\n                                    }\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Payment Method</h2>\r\n                                    <p>\r\n                                        <strong>Method:</strong> {' '} {order.paymentMethod}\r\n                                    </p>\r\n                                    {\r\n                                        order.paymentMethod === 'PayPal' && order.isPaid\r\n                                            ? <Message variant='success'>Paid on {order.paidAt.substring(0, 10)}</Message>\r\n                                            : order.paymentMethod === 'PayPal' && !order.isPaid &&\r\n                                            <Message variant='info'>Not Paid</Message>\r\n                                    }\r\n                                    {\r\n                                        order.paymentMethod === 'ShipCOD'\r\n                                        && <Message variant='success'>Receive and Pay {order.paidAt}</Message>\r\n                                    }\r\n\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Order Items</h2>\r\n                                    {order.orderItems.length === 0\r\n                                        ? <Message>Your order is empty</Message>\r\n                                        : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {order.orderItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n                                                            <Col md={2}>\r\n                                                                <Image src={item.image} alt={item.name} fluid rounded />\r\n                                                            </Col>\r\n                                                            <Col  >\r\n                                                                <Row >\r\n                                                                    <Link to={`/product/${item.product}`} style={{ textDecoration: 'none' }}>\r\n                                                                        {item.name}\r\n                                                                    </Link>\r\n                                                                </Row>\r\n                                                            </Col>\r\n                                                            <Col md={4} >\r\n                                                                {item.qty} x ${item.price} = ${(item.qty * item.price).toFixed(2)}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Order Summary</h2>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items</Col>\r\n                                            <Col>${order.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping</Col>\r\n                                            <Col>${order.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Tax</Col>\r\n                                            <Col>${order.taxPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total</Col>\r\n                                            <Col>${order.totalPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    {userInfo && !userInfo.isAdmin && !order.isCancelled && !order.isPaid && order.paymentMethod === 'PayPal' && (\r\n                                        <ListGroup.Item>\r\n                                            {loadingPay && <Loader />}\r\n                                            {\r\n                                                sdkReady ? (<Loader />) :\r\n                                                    (\r\n                                                        <PayPalButton amount={order.totalPrice}\r\n                                                            onSuccess={successPaymentHandler} />\r\n                                                    )\r\n                                            }\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    {loadingDeliver && <Loader />}\r\n                                    {userInfo && userInfo.isAdmin && order.paymentMethod === 'PayPal' && order.isPaid && !order.isDelivered && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                                    Mark As Delivered\r\n                                                </Button>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                    {/*--------------------- cancel order ---------------------*/}\r\n                                    {loadingCancel && <Loader />}\r\n                                    {userInfo && !userInfo.isAdmin && order.isCancelled === false && !order.isDelivered && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Button type='button' className='btn btn-block' color=\"primary\" onClick={handleClickOpen}>\r\n                                                    Cancel Order\r\n                                                </Button>\r\n                                                <Dialog\r\n                                                    open={open}\r\n                                                    onClose={handleClose}\r\n                                                    PaperComponent={PaperComponent}\r\n                                                    aria-labelledby=\"draggable-dialog-title\"\r\n                                                >\r\n                                                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                                                        Submit\r\n                                                    </DialogTitle>\r\n                                                    <DialogContent>\r\n                                                        <DialogContentText>\r\n                                                            {'     '}Are you sure to cancel this order ? {'     '}\r\n                                                        </DialogContentText>\r\n                                                    </DialogContent>\r\n                                                    <DialogActions>\r\n                                                        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                                            Cancel\r\n                                                        </Button>\r\n                                                        <Button onClick={cancelHandler} color=\"primary\">\r\n                                                            Submit\r\n                                                        </Button>\r\n                                                    </DialogActions>\r\n                                                </Dialog>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    {userInfo && userInfo.isAdmin && !order.isCancelled && order.paymentMethod === 'ShipCOD' && !order.isDelivered && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                                                    Mark As Delivered\r\n                                                </Button>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    {userInfo && order.isCancelled && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Message variant='danger'><h5>This order was Cancelled</h5></Message>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n\r\n    )\r\n}\r\n\r\nexport default OrderScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\screens\\OrderListScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\AllProductScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\AboutScreen.js",["768"],"import React from 'react'\r\nimport SimpleImageSlider from \"react-simple-image-slider\";\r\nimport Navigation from '../components/Navigation'\r\n\r\n\r\nconst AboutScreen = ({ }) => {\r\n\r\n    const images = [\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892346/shop/xmnqusgpc17n7016xq9p.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892371/shop/ziixbpvi20vroh9htwuc.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892050/shop/ntyfa5jauma2miqqq7ss.jpg\" },\r\n        { url: \"http://res.cloudinary.com/dlodr7b0z/image/upload/v1629892393/shop/rpoizmsch63svmfsmnbn.jpg\" },\r\n        //\r\n    ];\r\n    return (\r\n        <>\r\n            <Navigation />\r\n\r\n            <div className='text-center py-3'>\r\n                <h2>About Me</h2>\r\n                <h3>I JUST WANT TO SHOW YOU THAT I LOVE HER SO MUCH</h3>\r\n                <SimpleImageSlider\r\n                    width={1200}\r\n                    height={600}\r\n                    images={images}\r\n                    showBullets={true}\r\n                    showNavs={true}\r\n                    style={{ marginLeft: \"4%\" }}\r\n                />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default AboutScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\screens\\ProductEditScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\BrandScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\reducers\\productReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\ProductCreateScreen.js",["769","770"],"import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Button, Form, Image, Row, Col, Toast } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport FormContainer from '../components/FormContainer'\r\nimport { createProduct } from '../actions/productActions'\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants'\r\n\r\nconst ProductCreateScreen = ({ history }) => {\r\n    const [name, setName] = useState('')\r\n    const [price, setPrice] = useState(1)\r\n    const [images, setImages] = useState([])\r\n    const [brand, setBrand] = useState('')\r\n    const [category, setCategory] = useState('')\r\n    const [countInStock, setCountInStock] = useState(0)\r\n    const [description, setDescription] = useState('')\r\n    const [uploading] = useState(false)\r\n    const [message, setMessage] = useState(null)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const brandList = useSelector(state => state.brandList)\r\n    const { brands } = brandList\r\n    const categoryList = useSelector(state => state.categoryList)\r\n    const { categories } = categoryList\r\n\r\n    const [showA, setShowA] = useState(false);\r\n    const toggleShowA = () => setShowA(!showA);\r\n\r\n    const productCreate = useSelector(state => state.productCreate)\r\n    const { loading: loadingCreate, error: errorCreate, success: successCreate } = productCreate\r\n\r\n    useEffect(() => {\r\n        if (successCreate) {\r\n            dispatch({ type: PRODUCT_CREATE_RESET })\r\n            history.push('/admin/productlist')\r\n        }\r\n    }, [dispatch, history, successCreate])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n        if (name.trim() === \"\") {\r\n            setMessage('Name must not be empty !')\r\n        }\r\n        else if (price <= 0) {\r\n            setMessage('Price must be greater than 0 !')\r\n        }\r\n        else if (images.length === 0) {\r\n            setMessage('Must have at least 1 image !')\r\n        }\r\n        else if (brand.trim() === \"\") {\r\n            setMessage('Brand must not be empty !')\r\n        }\r\n        else if (category.trim() === \"\") {\r\n            setMessage('Category must not be empty !')\r\n        }\r\n        else if (description.trim() === \"\") {\r\n            setMessage('Description must not be empty !')\r\n        }\r\n        else {\r\n            dispatch(createProduct(name, price, images, brand, category, countInStock, description))\r\n        }\r\n    }\r\n\r\n    const uploadFileHandler = async (e) => {\r\n\r\n        const file = e.target.files[0]\r\n        if (!file) {\r\n            return alert.error('File not exist!')\r\n        }\r\n        if (file.type !== 'image/jpeg' && file.type !== 'image/jpg' && file.type !== 'image/png') {\r\n            return alert.error('File format is incorrect!')\r\n        }\r\n        if (file.size > 1024 * 1024 * 5) {\r\n            return alert.error('File too large!')\r\n        }\r\n\r\n        let formData = new FormData()\r\n        formData.append('file', file)\r\n\r\n        const res = await axios.post('/api/upload', formData, {\r\n            headers: { 'content-type': 'multipart/form-data' }\r\n        })\r\n        console.log(res.data);\r\n        setImages(oldArray => [...oldArray, res.data])\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Col>\r\n                    <Link to='/admin/productlist' className='btn btn-light my-3'> Go Back </Link>\r\n\r\n                </Col>\r\n                {/* {message &&\r\n                    <Toast show={showA} onClose={toggleShowA} delay={6000} autohide bg='danger'>\r\n                        <Toast.Header>\r\n                            <strong className=\"me-auto\">Warning !</strong>\r\n\r\n                        </Toast.Header>\r\n                        <Toast.Body>{message}</Toast.Body>\r\n                    </Toast>\r\n                } */}\r\n            </Row>\r\n            <FormContainer>\r\n                <h1>Create Product</h1>\r\n                {loadingCreate ? <Loader />\r\n                    : errorCreate ? <Message variant='danger'>{errorCreate}</Message>\r\n                        : (\r\n                            <>\r\n                                {message && <Message variant='danger'> {message} </Message>}\r\n                                <Form onSubmit={submitHandler}>\r\n                                    <Form.Group controlId='name'>\r\n                                        <Form.Label>Name</Form.Label>\r\n                                        <Form.Control type='name' placeholder='Enter name' value={name}\r\n                                            onChange={(e) => setName(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Row>\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='price'>\r\n                                                <Form.Label>Price</Form.Label>\r\n                                                <Form.Control type='number' placeholder='Enter price' value={price}\r\n                                                    min={1}\r\n                                                    onChange={(e) => setPrice(e.target.value)}></Form.Control>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={1} />\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='countInStock'>\r\n                                                <Form.Label>Count In Stock</Form.Label>\r\n                                                <Form.Control disabled type='number' placeholder='Enter Count In Stock' value={countInStock}\r\n                                                    onChange={(e) => setCountInStock(e.target.value)}></Form.Control>\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='image1'>\r\n                                        <Form.Label>Image From Left</Form.Label>\r\n                                        {!images[0] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[0](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[0].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n\r\n                                    <Form.Group controlId='image2'>\r\n                                        <Form.Label>Image From Right</Form.Label>\r\n                                        {!images[1] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[1](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[1].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='image3'>\r\n                                        <Form.Label>Image From Front</Form.Label>\r\n                                        {!images[2] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[2](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[2].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='image4'>\r\n                                        <Form.Label>Image From Behind</Form.Label>\r\n                                        {!images[3] ?\r\n                                            (\r\n                                                <>\r\n                                                    <Form.Control type='text' placeholder='Enter image URL' value={images}\r\n                                                        onChange={(e) => setImages[3](e.target.value)}></Form.Control>\r\n                                                    <Form.File id='image-file'\r\n                                                        // label='Choose Image'\r\n                                                        custom\r\n                                                        onChange={uploadFileHandler}>\r\n\r\n                                                    </Form.File>\r\n                                                </>\r\n                                            ) : (\r\n                                                <Image src={images[3].url} width=\"120\" height=\"120\" style={{ marginLeft: \"20px\" }} />\r\n                                            )}\r\n                                        {uploading && <Loader />}\r\n                                    </Form.Group>\r\n                                    <br />\r\n\r\n                                    <Row>\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='brand'>\r\n                                                <Form.Label>Brand</Form.Label>\r\n\r\n                                                <Form.Select aria-label=\"Floating label select example\" value={brand}\r\n                                                    onChange={(e) => setBrand(e.target.value)}>\r\n\r\n                                                    {brands && brands.map(brand => (\r\n                                                        <option value={`${brand._id}`}>{brand.name}</option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={1} />\r\n                                        <Col md={5}>\r\n                                            <Form.Group controlId='category'>\r\n                                                <Form.Label>Category</Form.Label>\r\n\r\n                                                <Form.Select aria-label=\"Floating label select example\" value={category}\r\n                                                    onChange={(e) => setCategory(e.target.value)}>\r\n\r\n                                                    {categories && categories.map(category => (\r\n                                                        <option value={`${category._id}`}>{category.name}</option>\r\n                                                    ))}\r\n                                                </Form.Select>\r\n\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                    </Row>\r\n                                    <br />\r\n\r\n                                    <Form.Group controlId='description'>\r\n                                        <Form.Label>Description</Form.Label>\r\n                                        <Form.Control as='textarea' type='text' placeholder='Enter description' value={description}\r\n                                            onChange={(e) => setDescription(e.target.value)}></Form.Control>\r\n                                    </Form.Group>\r\n                                    <br></br>\r\n                                    <Button className=\"btn btn-primary\" type='submit' variant='primary'\r\n                                    >\r\n                                        Create\r\n                                    </Button>\r\n                                </Form>\r\n                            </>\r\n                        )}\r\n            </FormContainer>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default ProductCreateScreen","D:\\projects React\\Demo\\frontend\\src\\reducers\\userReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\reducers\\orderReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\reducers\\cartReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Message.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\SearchBox.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Loader.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\FormContainer.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Meta.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\CheckoutSteps.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Product.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Paginate.js",[],"D:\\projects React\\Demo\\frontend\\src\\actions\\userActions.js",[],"D:\\projects React\\Demo\\frontend\\src\\constants\\orderConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\constants\\userConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\actions\\cartActions.js",[],"D:\\projects React\\Demo\\frontend\\src\\constants\\productConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\actions\\productActions.js",["771"],"import axios from 'axios'\r\nimport { ORDER_LIST_MY_RESET } from '../constants/orderConstants'\r\nimport {\r\n    PRODUCT_LIST_REQUEST,\r\n    PRODUCT_LIST_SUCCESS,\r\n    PRODUCT_LIST_FAIL,\r\n    PRODUCT_DETAILS_REQUEST,\r\n    PRODUCT_DETAILS_SUCCESS,\r\n    PRODUCT_DETAILS_FAIL,\r\n    PRODUCT_DELETE_REQUEST,\r\n    PRODUCT_DELETE_SUCCESS,\r\n    PRODUCT_DELETE_FAIL,\r\n    PRODUCT_CREATE_REQUEST,\r\n    PRODUCT_CREATE_SUCCESS,\r\n    PRODUCT_CREATE_FAIL,\r\n    PRODUCT_UPDATE_REQUEST,\r\n    PRODUCT_UPDATE_SUCCESS,\r\n    PRODUCT_UPDATE_FAIL,\r\n    PRODUCT_UPDATE_RESET,\r\n    PRODUCT_CREATE_REVIEW_REQUEST,\r\n    PRODUCT_CREATE_REVIEW_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_FAIL,\r\n    PRODUCT_TOP_REQUEST,\r\n    PRODUCT_TOP_SUCCESS,\r\n    PRODUCT_TOP_FAIL,\r\n    PRODUCT_BRAND_REQUEST,\r\n    PRODUCT_BRAND_SUCCESS,\r\n    PRODUCT_BRAND_FAIL,\r\n    PRODUCT_TOP_LIST_REQUEST,\r\n    PRODUCT_TOP_LIST_FAIL,\r\n    PRODUCT_TOP_LIST_SUCCESS,\r\n    PRODUCT_SAME_LIST_REQUEST,\r\n    PRODUCT_SAME_LIST_SUCCESS,\r\n    PRODUCT_SAME_LIST_FAIL,\r\n    PRODUCT_TOP_CATEGORY_REQUEST,\r\n    PRODUCT_TOP_CATEGORY_SUCCESS,\r\n    PRODUCT_TOP_CATEGORY_FAIL,\r\n    PRODUCT_CATEGORY_REQUEST,\r\n    PRODUCT_CATEGORY_FAIL,\r\n    PRODUCT_CATEGORY_SUCCESS,\r\n    PRODUCT_CREATE_REVIEW_RESET\r\n} from '../constants/productConstants'\r\nimport { USER_DETAIL_RESET, USER_LIST_RESET, USER_LOGOUT } from '../constants/userConstants'\r\n\r\nexport const logout = () => (dispatch) => {\r\n    localStorage.removeItem('userInfo')\r\n    localStorage.removeItem('cartItems')\r\n    localStorage.removeItem('shippingAddress')\r\n    localStorage.removeItem('paymentMethod')\r\n    dispatch({ type: USER_LOGOUT })\r\n    dispatch({ type: USER_DETAIL_RESET })\r\n    dispatch({ type: ORDER_LIST_MY_RESET })\r\n    dispatch({ type: USER_LIST_RESET })\r\n    document.location.href = '/login'\r\n}\r\n\r\nexport const listProducts = (keyword = '', pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products?keyword=${keyword}&pageNumber=${pageNumber}`)\r\n        dispatch({\r\n            type: PRODUCT_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listProductDetails = (id) => async (dispatch) => {\r\n\r\n    try {\r\n        dispatch({ type: PRODUCT_DETAILS_REQUEST })\r\n        const { data } = await axios.get(`/api/products/${id}`)\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteProduct = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/products/${id}`, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProduct = (name, price, images, brand, category, countInStock, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/products`, { name, price, images, brand, category, countInStock, description }, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        if (message === 'Not authorized, token failed') {\r\n            dispatch(logout())\r\n        }\r\n        dispatch({\r\n            type: PRODUCT_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateProduct = (productId, name, price, images, brand, category, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/products/${productId}`, { productId, name, price, images, brand, category, description }, config)\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_SUCCESS,\r\n\r\n        })\r\n        dispatch({\r\n            type: PRODUCT_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n        dispatch({ type: PRODUCT_UPDATE_RESET })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: PRODUCT_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createProductReview = (productId, review) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        await axios.post(`/api/products/${productId}/reviews`, review, config)\r\n\r\n        dispatch({type: PRODUCT_CREATE_REVIEW_SUCCESS})\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: PRODUCT_CREATE_REVIEW_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProducts = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_REQUEST })\r\n        const { data } = await axios.get(`/api/products/top`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProductsByBrand = (brand) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products/top/${brand}`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listSameProductsByBrand = (brand) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_SAME_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/products/same/${brand}`)\r\n        dispatch({\r\n            type: PRODUCT_SAME_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_SAME_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listBrandProducts = (brand, pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_BRAND_REQUEST })\r\n        const { data } = await axios.get(`/api/products/brand/${brand}?pageNumber=${pageNumber}`)\r\n        dispatch({\r\n            type: PRODUCT_BRAND_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_BRAND_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listCategoryProducts = (category, pageNumber = '') => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_CATEGORY_REQUEST })\r\n        const { data } = await axios.get(`/api/products/category/${category}`)\r\n        dispatch({\r\n            type: PRODUCT_CATEGORY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_CATEGORY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listTopProductsByCategory = (category) => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: PRODUCT_TOP_CATEGORY_REQUEST })\r\n        const { data } = await axios.get(`/api/products/top4/${category}`)\r\n        dispatch({\r\n            type: PRODUCT_TOP_CATEGORY_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: PRODUCT_TOP_CATEGORY_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}","D:\\projects React\\Demo\\frontend\\src\\constants\\cartConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\actions\\orderActions.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\AdminSearchBox.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\ProductCarousel.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\Rating.js",[],"D:\\projects React\\Demo\\frontend\\src\\reducers\\brandReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\constants\\brandConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\constants\\categoryConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\reducers\\categoryReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\BrandListScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\actions\\brandActions.js",["772","773"],"import axios from 'axios'\r\nimport { BRAND_DETAILS_REQUEST, BRAND_DETAILS_SUCCESS, BRAND_DETAILS_FAIL, BRAND_DETAILS_RESET, BRAND_CREATE_FAIL, BRAND_CREATE_REQUEST, BRAND_CREATE_SUCCESS, BRAND_DELETE_FAIL, BRAND_DELETE_REQUEST, BRAND_DELETE_SUCCESS, BRAND_LIST_FAIL, BRAND_LIST_REQUEST, BRAND_LIST_SUCCESS, BRAND_UPDATE_FAIL, BRAND_UPDATE_REQUEST, BRAND_UPDATE_RESET, BRAND_UPDATE_SUCCESS } from '../constants/brandConstants'\r\n\r\nexport const listBrands = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: BRAND_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/brands`)\r\n        dispatch({\r\n            type: BRAND_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BRAND_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listBrandDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: BRAND_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.get(`/api/brands/${id}`, config)\r\n        dispatch({\r\n            type: BRAND_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: BRAND_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteBrand = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: BRAND_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/brands/${id}`, config)\r\n\r\n        dispatch({\r\n            type: BRAND_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: BRAND_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createBrand = (name, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: BRAND_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/brands`, { name, description }, config)\r\n\r\n        dispatch({\r\n            type: BRAND_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: BRAND_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateBrand = (brandId, name, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: BRAND_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/brands/${brandId}`, { brandId, name, description }, config)\r\n\r\n        dispatch({\r\n            type: BRAND_UPDATE_SUCCESS,\r\n\r\n        })\r\n     \r\n        dispatch({ type: BRAND_UPDATE_RESET })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: BRAND_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","D:\\projects React\\Demo\\frontend\\src\\actions\\categoryActions.js",["774"],"import axios from 'axios'\r\nimport { CATEGORY_CREATE_FAIL, CATEGORY_CREATE_REQUEST, CATEGORY_CREATE_SUCCESS, CATEGORY_DELETE_FAIL, CATEGORY_DELETE_REQUEST, CATEGORY_DELETE_SUCCESS, CATEGORY_DETAILS_FAIL, CATEGORY_DETAILS_REQUEST, CATEGORY_DETAILS_SUCCESS, CATEGORY_LIST_FAIL, CATEGORY_LIST_REQUEST, CATEGORY_LIST_SUCCESS, CATEGORY_UPDATE_FAIL, CATEGORY_UPDATE_REQUEST, CATEGORY_UPDATE_RESET, CATEGORY_UPDATE_SUCCESS } from '../constants/categoryConstants'\r\n\r\nexport const listCategories = () => async (dispatch) => {\r\n    try {\r\n        dispatch({ type: CATEGORY_LIST_REQUEST })\r\n        const { data } = await axios.get(`/api/categories`)\r\n        dispatch({\r\n            type: CATEGORY_LIST_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_LIST_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const listCategoryDetails = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({ type: CATEGORY_DETAILS_REQUEST })\r\n\r\n        const { userLogin: { userInfo } } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                // 'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.get(`/api/categories/${id}`, config)\r\n        dispatch({\r\n            type: CATEGORY_DETAILS_SUCCESS,\r\n            payload: data\r\n        })\r\n    } catch (error) {\r\n        dispatch({\r\n            type: CATEGORY_DETAILS_FAIL,\r\n            payload: error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n        })\r\n    }\r\n}\r\n\r\nexport const deleteCategory = (id) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_DELETE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        await axios.delete(`/api/categories/${id}`, config)\r\n\r\n        dispatch({\r\n            type: CATEGORY_DELETE_SUCCESS,\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n       \r\n        dispatch({\r\n            type: CATEGORY_DELETE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const createCategory = (name, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_CREATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n\r\n        const { data } = await axios.post(`/api/categories`, { name, description }, config)\r\n\r\n        dispatch({\r\n            type: CATEGORY_CREATE_SUCCESS,\r\n            payload: data\r\n        })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n       \r\n        dispatch({\r\n            type: CATEGORY_CREATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}\r\n\r\nexport const updateCategory = (categoryId, name, description) => async (dispatch, getState) => {\r\n    try {\r\n        dispatch({\r\n            type: CATEGORY_UPDATE_REQUEST\r\n        })\r\n\r\n        const {\r\n            userLogin: { userInfo },\r\n        } = getState()\r\n\r\n        const config = {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                Authorization: `Bearer ${userInfo.token}`\r\n            },\r\n        }\r\n        const { data } = await axios.put(`/api/categories/${categoryId}`, { categoryId, name, description }, config)\r\n\r\n        dispatch({\r\n            type: CATEGORY_UPDATE_SUCCESS,\r\n        })\r\n        \r\n        dispatch({ type: CATEGORY_UPDATE_RESET })\r\n\r\n    } catch (error) {\r\n        const message =\r\n            error.response && error.response.data.message\r\n                ? error.response.data.message\r\n                : error.message\r\n\r\n        dispatch({\r\n            type: CATEGORY_UPDATE_FAIL,\r\n            payload: message,\r\n        })\r\n    }\r\n}","D:\\projects React\\Demo\\frontend\\src\\screens\\BrandCreateScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\BrandEditScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryListScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryEditScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\CategoryCreateScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\reducers\\receiptReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\constants\\receiptConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\ReceiptCartScreen.js",["775","776","777","778"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Card, Image, ListGroup, Button, Form } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message.js'\r\nimport { addToReceiptCart, removeFromReceiptCart } from '../actions/receiptActions'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\n\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nconst ReceiptCartScreen = ({ match, location, history }) => {\r\n    const productId = match.params.id\r\n    const [qty, setQty] = useState(1)\r\n    const [importPrice, setImportPrice] = useState(1)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const receiptCart = useSelector(state => state.receiptCart)\r\n    const { receiptItems } = receiptCart\r\n\r\n    useEffect(() => {\r\n        if (productId) {\r\n            dispatch(addToReceiptCart(productId, importPrice, qty))\r\n        }\r\n    }, [dispatch, productId])\r\n\r\n    const removeFromCartHandler = (id) => {\r\n        dispatch(removeFromReceiptCart(id))\r\n    }\r\n\r\n    var flag = false\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n    };\r\n\r\n    const checkPrice = () => {\r\n        receiptItems.forEach(item => {\r\n            if (item.price < item.importPrice) {\r\n                flag = true\r\n            }\r\n        });\r\n\r\n        if (flag === true) {\r\n            setOpen(true)\r\n        }\r\n        else {\r\n            history.push('/login?redirect=admin/supplier')\r\n        }\r\n    }\r\n\r\n    const checkoutHandler = () => {\r\n        setOpen(false);\r\n        history.push('/login?redirect=admin/supplier')\r\n    }\r\n\r\n    return (\r\n        <Row>\r\n            <Col md={9}>\r\n                <h1>Receipt Cart</h1>\r\n                {receiptItems.length === 0 ? (\r\n                    <Message>\r\n                        Your receipt cart is empty <Link to='/admin/productlist'>Go Back</Link>\r\n                    </Message>\r\n                ) : (\r\n                    <>\r\n                        <ListGroup variant='flush'>\r\n\r\n                            <ListGroup.Item >\r\n                                <Row>\r\n                                    <Col md={4} >\r\n                                        <div style={{ marginLeft: \"12%\" }} >Product</div>\r\n                                    </Col>\r\n\r\n                                    <Col md={2} > <div style={{ marginLeft: \"10%\" }}>Sales Price</div></Col>\r\n                                    <Col md={2} > <div style={{ marginLeft: \"10%\" }}>Import Price</div></Col>\r\n                                    <Col md={2} >\r\n                                        <div style={{ marginLeft: \"20%\" }}>Quantity</div>\r\n                                    </Col>\r\n\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                        <ListGroup variant='flush'>\r\n                            {receiptItems.map((item) => (\r\n                                <ListGroup.Item key={item.product}>\r\n                                    <Row>\r\n                                        <Col md={4} style={{ marginTop: \"3%\" }}>\r\n                                            <Link to={`/product/${item.product}`} style={{ textDecoration: 'none' }}>{item.name}</Link>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} style={{ marginTop: \"5%\", marginLeft: \"2%\" }}>${item.price}</Col>\r\n\r\n                                        <Col md={2} style={{ marginTop: \"4%\" }}>\r\n                                            <Form.Control\r\n                                                type='number'\r\n                                                min=\"1\"\r\n                                                placeholder='Enter Import Price'\r\n                                                value={item.importPrice}\r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToReceiptCart(item.product, Number(e.target.value), item.qty)\r\n                                                    )\r\n                                                }>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={2} style={{ marginTop: \"4%\", marginLeft: \"2%\" }}>\r\n                                            <Form.Control\r\n                                                type='number' placeholder='Enter Quantity'\r\n                                                min=\"1\"\r\n                                                value={item.qty}\r\n                                                onChange={(e) =>\r\n                                                    dispatch(\r\n                                                        addToReceiptCart(item.product, item.importPrice, Number(e.target.value))\r\n                                                    )\r\n                                                }>\r\n                                            </Form.Control>\r\n                                        </Col>\r\n\r\n                                        <Col md={1} style={{ marginTop: \"4%\" }}>\r\n                                            <Button\r\n                                                type='button'\r\n                                                variant='light'\r\n                                                onClick={() => removeFromCartHandler(item.product)}\r\n                                            >\r\n                                                <i className='fas fa-trash'></i>\r\n                                            </Button>\r\n                                        </Col>\r\n                                    </Row>\r\n\r\n                                </ListGroup.Item>\r\n                            ))}\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col md={5} />\r\n                                    <Col>\r\n                                        <Link to='/admin/productlist'>Keep Import Goods</Link>\r\n\r\n                                    </Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </>\r\n                )}\r\n            </Col>\r\n            <Col md={3}>\r\n                <Card>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>\r\n                                Subtotal ({receiptItems.reduce((acc, item) => acc + item.qty, 0)}) items\r\n                            </h2>\r\n                            $\r\n                            {receiptItems\r\n                                .reduce((acc, item) => acc + item.qty * item.importPrice, 0)\r\n                                .toFixed(2)}\r\n                        </ListGroup.Item>\r\n                        <ListGroup.Item>\r\n                            <Row>\r\n\r\n                                <Button\r\n                                    type='button'\r\n                                    className='btn-block'\r\n                                    disabled={receiptItems.length === 0}\r\n                                    onClick={checkPrice}\r\n                                >\r\n                                    Proceed To Checkout\r\n                                </Button>\r\n\r\n                                <Dialog\r\n                                    open={open}\r\n                                    onClose={handleClose}\r\n                                    PaperComponent={PaperComponent}\r\n                                    aria-labelledby=\"draggable-dialog-title\"\r\n                                >\r\n                                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                                        Warning\r\n                                    </DialogTitle>\r\n                                    <DialogContent>\r\n                                        <DialogContentText>\r\n                                            This Receipt Order has Sales Price lower than Import Price ! <br />\r\n                                            Are you sure to submit that ?\r\n                                        </DialogContentText>\r\n                                    </DialogContent>\r\n                                    <DialogActions>\r\n                                        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button onClick={checkoutHandler} color=\"primary\">\r\n                                            Submit\r\n                                        </Button>\r\n                                    </DialogActions>\r\n                                </Dialog>\r\n                            </Row>\r\n\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Card>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}\r\n\r\nexport default ReceiptCartScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\actions\\receiptActions.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\SupplierScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\components\\CheckoutStepsAdmin.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\PlaceReceiptScreen.js",["779"],"import React, { useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Row, Col, ListGroup, Image, Card } from 'react-bootstrap-v5'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport Message from '../components/Message'\r\nimport CheckoutStepsAdmin from '../components/CheckoutStepsAdmin'\r\nimport { createReceipt } from '../actions/receiptActions'\r\nimport { RECEIPT_CART_CLEAR_ITEMS } from '../constants/receiptConstants'\r\n\r\nconst PlaceReceiptScreen = ({ history }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const receiptCart = useSelector((state) => state.receiptCart)\r\n\r\n    if (!receiptCart.supplier.address) {\r\n        history.push('/admin/supplier')\r\n    }\r\n    //   Calculate prices\r\n    const addDecimals = (num) => {\r\n        return (Math.round(num * 100) / 100).toFixed(2)\r\n    }\r\n\r\n    receiptCart.itemsPrice = addDecimals(\r\n        receiptCart.receiptItems.reduce((acc, item) => acc + item.importPrice * item.qty, 0)\r\n    )\r\n    receiptCart.shippingPrice = addDecimals(receiptCart.itemsPrice > 100 ? 0 : 10)\r\n\r\n    receiptCart.totalPrice = (\r\n        Number(receiptCart.itemsPrice) +\r\n        Number(receiptCart.shippingPrice)\r\n    ).toFixed(2)\r\n\r\n    const receiptCreate = useSelector((state) => state.receiptCreate)\r\n    const { receipt, success, error } = receiptCreate\r\n\r\n    useEffect(() => {\r\n        if (success) {\r\n            history.push(`/admin/receipt/${receipt._id}`)\r\n\r\n            dispatch({ type: RECEIPT_CART_CLEAR_ITEMS })\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [history, success])\r\n\r\n    const placeOrderHandler = () => {\r\n        dispatch(\r\n            createReceipt({\r\n                receiptItems: receiptCart.receiptItems,\r\n                supplier: receiptCart.supplier,\r\n                shippingPrice: receiptCart.shippingPrice,\r\n                itemsPrice: receiptCart.itemsPrice,\r\n                totalPrice: receiptCart.totalPrice,\r\n            })\r\n        )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CheckoutStepsAdmin step1 step2 step3 />\r\n            <Row>\r\n                <Col md={8}>\r\n                    <ListGroup variant='flush'>\r\n                        <ListGroup.Item>\r\n                            <h2>Supplier Information</h2>\r\n                            <p>\r\n                                <strong> Name  : </strong>\r\n                                {\" \"}{receiptCart && receiptCart.supplier && receiptCart.supplier.name}\r\n                            </p>\r\n                            <p>\r\n                                <strong> Phone :</strong>\r\n                                {\" \"}{receiptCart && receiptCart.supplier && receiptCart.supplier.phone}\r\n                            </p>\r\n                            <p>\r\n                                <strong> Address:</strong>\r\n                                {\" \"}{receiptCart && receiptCart.supplier && receiptCart.supplier.address}, {receiptCart && receiptCart.supplier && receiptCart.supplier.country}\r\n                            </p>\r\n                        </ListGroup.Item>\r\n\r\n                        <ListGroup.Item>\r\n                            <h2>Receipt Items</h2>\r\n                            {receiptCart && receiptCart.receiptItems && receiptCart.receiptItems.length === 0 ? (\r\n                                <Message>Your receipt is empty</Message>\r\n                            ) : (\r\n                                <ListGroup variant='flush'>\r\n                                    {receiptCart && receiptCart.receiptItems && receiptCart.receiptItems.map((item, index) => (\r\n                                        <ListGroup.Item key={index}>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Link to={`/product/${item.product}`}>\r\n                                                        {item.name}\r\n                                                    </Link>\r\n                                                </Col>\r\n                                                <Col md={4}>\r\n                                                    {item.qty} x ${item.importPrice} = ${item.qty * item.importPrice}\r\n                                                </Col>\r\n                                            </Row>\r\n                                        </ListGroup.Item>\r\n                                    ))}\r\n                                </ListGroup>\r\n                            )}\r\n                        </ListGroup.Item>\r\n                    </ListGroup>\r\n                </Col>\r\n                <Col md={4}>\r\n                    <Card>\r\n                        <ListGroup variant='flush'>\r\n                            <ListGroup.Item>\r\n                                <h2>Receipt Summary</h2>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Items</Col>\r\n                                    <Col>${receiptCart && receiptCart.itemsPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Shipping</Col>\r\n                                    <Col>${receiptCart && receiptCart.shippingPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Col>Total</Col>\r\n                                    <Col>${receiptCart && receiptCart.totalPrice}</Col>\r\n                                </Row>\r\n                            </ListGroup.Item>\r\n                            {error && (\r\n                                <ListGroup.Item>\r\n                                    {<Message variant='danger'>{error}</Message>}\r\n                                </ListGroup.Item>\r\n                            )}\r\n\r\n                            <ListGroup.Item>\r\n                                <Row>\r\n                                    <Button\r\n                                        type='button'\r\n                                        className='btn-block'\r\n                                        disabled={receiptCart && receiptCart.receiptItems === 0}\r\n                                        onClick={placeOrderHandler}\r\n                                    >\r\n                                        Place Order\r\n                                    </Button>\r\n                                </Row>\r\n\r\n                            </ListGroup.Item>\r\n                        </ListGroup>\r\n                    </Card>\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default PlaceReceiptScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\screens\\ReceiptScreen.js",["780","781","782","783"],"import React, { useState, useEffect } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { getReceiptDetails, cancelReceipt, receiveReceipt } from '../actions/receiptActions'\r\nimport { getUserDetail } from '../actions/userActions'\r\nimport { RECEIPT_CANCEL_RESET } from '../constants/receiptConstants'\r\nimport Meta from '../components/Meta'\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Draggable from 'react-draggable';\r\n\r\nfunction PaperComponent(props) {\r\n    return (\r\n        <Draggable handle=\"#draggable-dialog-title\" cancel={'[class*=\"MuiDialogContent-root\"]'}>\r\n            <Paper {...props} />\r\n        </Draggable>\r\n    );\r\n}\r\n\r\nconst ReceiptScreen = ({ match, history }) => {\r\n    const receiptId = match.params.id\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const receiptDetails = useSelector(state => state.receiptDetails)\r\n    const { receipt, loading, error } = receiptDetails\r\n\r\n    const receiptCancel = useSelector(state => state.receiptCancel)\r\n    const { loading: loadingCancel, success: successCancel } = receiptCancel\r\n\r\n    const receiptReceive = useSelector(state => state.receiptReceive)\r\n    const { loading: loadingReceive, success: successReceive } = receiptReceive\r\n\r\n    const userLogin = useSelector(state => state.userLogin)\r\n    const { userInfo } = userLogin\r\n\r\n    const userDetail = useSelector(state => state.userDetail)\r\n    const { user } = userDetail\r\n\r\n    const [open, setOpen] = React.useState(false)\r\n    const [openReceived, setOpenReceived] = React.useState(false)\r\n\r\n    const [title, setTitle] = React.useState('')\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true)\r\n        setTitle(\"Are you sure you want to Cancel this Receipt ?\")\r\n    }\r\n\r\n    const receivedHandleClickOpen = () => {\r\n        setOpenReceived(true)\r\n        setTitle(\"Are you sure you want to Mark as Received this Receipt ?\")\r\n    }\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setOpenReceived(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        \r\n        if (!userInfo) {\r\n            history.push('/login')\r\n        }\r\n        if (receipt && receipt.user) {\r\n            dispatch(getUserDetail(receipt.user))\r\n        }\r\n        else if (!receipt || successCancel || successReceive || receipt._id !== receiptId) {\r\n            dispatch(getReceiptDetails(receiptId))\r\n        }\r\n\r\n    }, [dispatch, receiptId, successReceive, successCancel, receipt, userInfo, history])\r\n\r\n    if (!loading) {\r\n        // Calculate prices\r\n        const addDecimals = (num) => {\r\n            return (Math.round(num * 100) / 100).toFixed(2)\r\n        }\r\n        receipt.itemsPrice = addDecimals(receipt.receiptItems.reduce(\r\n            (acc, item) => Number((acc + item.importPrice * item.qty).toFixed(2)), 0))\r\n    }\r\n\r\n    const cancelHandler = () => {\r\n        setOpen(false);\r\n        dispatch(cancelReceipt(receipt))\r\n    }\r\n\r\n    const receivedHandler = () => {\r\n        setOpenReceived(false);\r\n        dispatch(receiveReceipt(receipt))\r\n    }\r\n\r\n    return (\r\n\r\n        loading ? <Loader />\r\n            : error ? <Message variant='danger'>{error}</Message>\r\n                : <>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <h1>Receipt {receipt._id}</h1>\r\n                            <Meta title={`${user.name}'s Receipt`} />\r\n                        </Col>\r\n                        {userInfo && userInfo.isAdmin &&\r\n                            <Col md={4}>\r\n                                <Row>\r\n                                    <Link to='/admin/receiptlist' className='btn btn-dark my-3'> Go Back Receipt List</Link>\r\n                                </Row>\r\n                            </Col>\r\n                        }\r\n\r\n                    </Row>\r\n                    <Row>\r\n                        <Col md={8}>\r\n                            <ListGroup variant='flush'>\r\n                                <ListGroup.Item>\r\n                                    <h2>Receipt Creator Information</h2>\r\n                                    <p><strong>ID : </strong>{user._id}</p>\r\n                                    <p><strong>Name : </strong> {user.name}</p>\r\n                                    <p>\r\n                                        <strong>Email : </strong>\r\n                                        <a href={`mailto:${user.email}`}>{user.email}</a></p>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Supplier Information</h2>\r\n                                    <p><strong>Name : </strong> {receipt.supplier.name}</p>\r\n                                    <p>\r\n                                        <strong> Phone :</strong>\r\n                                        {\" \"}{receipt && receipt.supplier && receipt.supplier.phone}\r\n                                    </p>\r\n                                    <p>\r\n                                        <strong>Address : </strong>\r\n                                        {' '}{receipt.supplier.address},\r\n                                        {' '}{receipt.supplier.country}\r\n\r\n                                    </p>\r\n                                </ListGroup.Item>\r\n                                <ListGroup.Item>\r\n                                    <p>\r\n                                        Receipt Create At {receipt.orderAt.substring(0, 10)}\r\n                                    </p>\r\n                                </ListGroup.Item>\r\n\r\n                                <ListGroup.Item>\r\n                                    <h2>Receipt Items</h2>\r\n                                    {receipt.receiptItems.length === 0\r\n                                        ? <Message>Your receipt is empty</Message>\r\n                                        : (\r\n                                            <ListGroup variant='flush'>\r\n                                                {receipt.receiptItems.map((item, index) => (\r\n                                                    <ListGroup.Item key={index}>\r\n                                                        <Row>\r\n\r\n                                                            <Col  >\r\n                                                                <Row >\r\n                                                                    <Link to={`/product/${item.product}`} style={{ textDecoration: 'none' }}>\r\n                                                                        {item.name}\r\n                                                                    </Link>\r\n                                                                </Row>\r\n                                                            </Col>\r\n                                                            <Col md={4} >\r\n                                                                {item.qty} x ${item.importPrice} = ${item.qty * item.importPrice}\r\n                                                            </Col>\r\n                                                        </Row>\r\n                                                    </ListGroup.Item>\r\n                                                ))}\r\n                                            </ListGroup>\r\n                                        )}\r\n                                </ListGroup.Item>\r\n\r\n                            </ListGroup>\r\n                        </Col>\r\n\r\n                        <Col md={4}>\r\n                            <Card>\r\n                                <ListGroup variant='flush'>\r\n                                    <ListGroup.Item>\r\n                                        <h2>Receipt Summary</h2>\r\n                                    </ListGroup.Item>\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Items</Col>\r\n                                            <Col>${receipt.itemsPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Shipping</Col>\r\n                                            <Col>${receipt.shippingPrice}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n\r\n                                    <ListGroup.Item>\r\n                                        <Row>\r\n                                            <Col>Total</Col>\r\n\r\n                                            <Col>${receipt.totalPrice.toFixed(2)}</Col>\r\n                                        </Row>\r\n                                    </ListGroup.Item>\r\n                                    {/*--------------------- cancel order ---------------------*/}\r\n                                    {loadingCancel && <Loader />}\r\n                                    {receipt.status === \"Ordered\" && (\r\n                                        <>\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Button type='button' className='btn btn-block' color=\"primary\" onClick={handleClickOpen}>\r\n                                                        Cancel Order\r\n                                                    </Button>\r\n                                                    <Dialog\r\n                                                        open={open}\r\n                                                        onClose={handleClose}\r\n                                                        PaperComponent={PaperComponent}\r\n                                                        aria-labelledby=\"draggable-dialog-title\"\r\n                                                    >\r\n                                                        <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                                                            Confirm\r\n                                                        </DialogTitle>\r\n                                                        <DialogContent>\r\n                                                            <DialogContentText>\r\n                                                                {'     '}{title}{'     '}\r\n                                                            </DialogContentText>\r\n                                                        </DialogContent>\r\n                                                        <DialogActions>\r\n                                                            <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                                                No\r\n                                                            </Button>\r\n                                                            <Button onClick={cancelHandler} color=\"primary\">\r\n                                                                Yes\r\n                                                            </Button>\r\n                                                        </DialogActions>\r\n                                                    </Dialog>\r\n                                                </Row>\r\n\r\n                                            </ListGroup.Item>\r\n                                            <br />\r\n                                            <ListGroup.Item>\r\n                                                <Row>\r\n                                                    <Button type='button' className='btn btn-block' onClick={receivedHandleClickOpen}>\r\n                                                        Mark As Received\r\n                                                    </Button>\r\n                                                </Row>\r\n                                                <Dialog\r\n                                                    open={openReceived}\r\n                                                    onClose={handleClose}\r\n                                                    PaperComponent={PaperComponent}\r\n                                                    aria-labelledby=\"draggable-dialog-title\"\r\n                                                >\r\n                                                    <DialogTitle style={{ cursor: 'move' }} id=\"draggable-dialog-title\">\r\n                                                        Confirm\r\n                                                    </DialogTitle>\r\n                                                    <DialogContent>\r\n                                                        <DialogContentText>\r\n                                                            {'     '}{title}{'     '}\r\n                                                        </DialogContentText>\r\n                                                    </DialogContent>\r\n                                                    <DialogActions>\r\n                                                        <Button autoFocus onClick={handleClose} color=\"primary\">\r\n                                                            No\r\n                                                        </Button>\r\n                                                        <Button onClick={receivedHandler} color=\"primary\">\r\n                                                            Yes\r\n                                                        </Button>\r\n                                                    </DialogActions>\r\n                                                </Dialog>\r\n                                            </ListGroup.Item>\r\n                                        </>\r\n                                    )\r\n\r\n                                    }\r\n\r\n                                    {receipt.status === \"Cancelled\" && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Message variant='danger'><h5>This Receipt was Cancelled</h5></Message>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n\r\n                                    {receipt.status === \"Received\" && (\r\n                                        <ListGroup.Item>\r\n                                            <Row>\r\n                                                <Col>\r\n                                                    <Message variant='success'><h5>This Receipt was Received</h5></Message>\r\n                                                </Col>\r\n                                            </Row>\r\n\r\n                                        </ListGroup.Item>\r\n                                    )}\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                    </Row>\r\n                </>\r\n    )\r\n}\r\n\r\nexport default ReceiptScreen\r\n","D:\\projects React\\Demo\\frontend\\src\\screens\\ReceiptListScreen.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\DashboardScreen.js",["784"],"import React, { useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Table, Col, Row } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport { listStatisticProductSold } from '../actions/statisticActions'\r\n\r\nconst DashboardScreen = ({ }) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const { loading, error, statisticProductSolds } = useSelector(state => state.statisticProductSoldList)\r\n\r\n    useEffect(() => {\r\n        dispatch(listStatisticProductSold())\r\n    }, [dispatch])\r\n\r\n    const names = statisticProductSolds && statisticProductSolds.map((item) => (item.name.slice(0, 20)));\r\n    const solds = statisticProductSolds && statisticProductSolds.map((item) => (item.sold));\r\n    return (\r\n        <>\r\n            {\r\n                loading ? <Loader />\r\n                    : error ? <Message variant='danger'> {error} </Message>\r\n                        : (\r\n                            <>\r\n                                <Row>\r\n                                    <Col md={4}>\r\n                                        <Table striped bordered hover responsive className='table-secondary'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>NAME</th>\r\n                                                    <th>SOLD</th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n                                                {statisticProductSolds.map(product => (\r\n                                                    <tr >\r\n                                                        <td>{product.name}</td>\r\n                                                        <td>{product.sold}</td>\r\n                                                    </tr>\r\n                                                ))}\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Col>\r\n                                    <Col md={8}>\r\n\r\n                                        <Table striped bordered hover responsive className='table-secondary'>\r\n                                            <thead>\r\n                                                <tr>\r\n                                                    <th>\r\n                                                        <h2>\r\n                                                            Statistical table of the most sold products ever\r\n                                                        </h2>\r\n                                                    </th>\r\n                                                </tr>\r\n                                            </thead>\r\n                                            <tbody>\r\n\r\n                                                <td>\r\n                                                    <Bar\r\n                                                        data={{\r\n                                                            labels: names,\r\n                                                            datasets: [\r\n                                                                {\r\n                                                                    label: \"Sold\",\r\n                                                                    backgroundColor: [\r\n                                                                        'rgba(255, 99, 132, 0.2)',\r\n                                                                        'rgba(54, 162, 235, 0.2)',\r\n                                                                        'rgba(255, 206, 86, 0.2)',\r\n                                                                        'rgba(75, 192, 192, 0.2)',\r\n                                                                        'rgba(153, 102, 255, 0.2)',\r\n                                                                        'rgba(255, 159, 64, 0.2)'\r\n                                                                    ],\r\n                                                                    borderColor: [\r\n                                                                        'rgba(255, 99, 132, 1)',\r\n                                                                        'rgba(54, 162, 235, 1)',\r\n                                                                        'rgba(255, 206, 86, 1)',\r\n                                                                        'rgba(75, 192, 192, 1)',\r\n                                                                        'rgba(153, 102, 255, 1)',\r\n                                                                        'rgba(255, 159, 64, 1)'\r\n                                                                    ],\r\n                                                                    borderWidth: 1,\r\n                                                                    data: solds\r\n                                                                }\r\n                                                            ]\r\n                                                        }}\r\n                                                        options={{\r\n                                                            legend: { display: false },\r\n                                                            title: {\r\n                                                                display: true,\r\n                                                                text: \"Alooo aloooo\"\r\n                                                            }\r\n                                                        }}\r\n                                                    />\r\n\r\n                                                </td>\r\n\r\n                                            </tbody>\r\n                                        </Table>\r\n                                    </Col>\r\n                                </Row>\r\n                            </>\r\n                        )\r\n\r\n            }\r\n        </>\r\n    )\r\n}\r\nexport default DashboardScreen;\r\n","D:\\projects React\\Demo\\frontend\\src\\reducers\\statisticReducers.js",[],"D:\\projects React\\Demo\\frontend\\src\\constants\\statisticConstants.js",[],"D:\\projects React\\Demo\\frontend\\src\\actions\\statisticActions.js",[],"D:\\projects React\\Demo\\frontend\\src\\screens\\RevenueScreen.js",["785","786"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { Row, Col, Button, Form, Table } from 'react-bootstrap-v5'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listStatisticProductBetween } from '../actions/statisticActions'\r\nimport Meta from '../components/Meta'\r\nimport { Bar } from 'react-chartjs-2';\r\nimport Navigation from '../components/Navigation'\r\n\r\nconst RevenueScreen = ({ }) => {\r\n    const [dateFrom, setDateFrom] = useState('')\r\n    const [dateTo, setDateTo] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const statisticProductBetween = useSelector(state => state.statisticProductBetween)\r\n    const { loading, error, statisticProductBetweens, sum } = statisticProductBetween\r\n\r\n    const names = statisticProductBetweens && statisticProductBetweens.map((item) => (item.name.slice(0, 22)));\r\n    const solds = statisticProductBetweens && statisticProductBetweens.map((item) => (item.sold));\r\n\r\n    useEffect(() => {\r\n        if (dateFrom && dateTo) {\r\n            dispatch(listStatisticProductBetween(dateFrom, dateTo))\r\n        }\r\n    }, [dispatch, dateTo, dateFrom])\r\n\r\n    const submitHandler = (e) => {\r\n        e.preventDefault()\r\n\r\n        dispatch(listStatisticProductBetween(dateFrom, dateTo))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Row>\r\n                <Meta title={`Revenue by Admin`} />\r\n                <Col md={3}>\r\n                    <h2>Input Date</h2>\r\n\r\n                    <Form onSubmit={submitHandler}>\r\n\r\n                        <Form.Group controlId='dateFrom'>\r\n                            <Form.Label>From Date</Form.Label>\r\n                            <Form.Control type='date'\r\n                                min=\"2021-01-01\" max=\"2021-09-11\"\r\n\r\n                                value={dateFrom}\r\n                                onChange={(e) => setDateFrom(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Form.Group controlId='dateTo'>\r\n                            <Form.Label>To Date</Form.Label>\r\n                            <Form.Control type='date'\r\n                                min=\"2021-01-01\" max=\"2021-12-31\"\r\n\r\n                                value={dateTo}\r\n                                onChange={(e) => setDateTo(e.target.value)}></Form.Control>\r\n                        </Form.Group>\r\n\r\n                        <Button type='submit' variant='primary'>\r\n                            Submit\r\n                        </Button>\r\n                    </Form>\r\n                </Col>\r\n                {dateFrom && dateTo ? (\r\n                    <Col md={9}>\r\n                        <h2>Statistic Revenue</h2>\r\n                        {loading ? <Loader />\r\n                            : error ? <Message variant='danger'>{error}</Message>\r\n                                : (\r\n                                    <Table striped bordered hover responsive className='table-secondary'>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th>\r\n                                                    <h2>\r\n                                                        Total revenue : $ {sum} between {dateFrom} & {dateTo}\r\n                                                    </h2>\r\n                                                </th>\r\n                                            </tr>\r\n                                        </thead>\r\n\r\n                                        <tbody>\r\n                                            <td>\r\n                                                <Bar\r\n                                                    data={\r\n                                                        {\r\n                                                        labels: names,\r\n                                                        datasets: [\r\n                                                            {\r\n                                                                label: \"Sold\",\r\n                                                                backgroundColor: [\r\n                                                                    'rgba(255, 99, 132, 0.2)',\r\n                                                                    'rgba(54, 162, 235, 0.2)',\r\n                                                                    'rgba(255, 206, 86, 0.2)',\r\n                                                                    'rgba(75, 192, 192, 0.2)',\r\n                                                                    'rgba(153, 102, 255, 0.2)',\r\n                                                                    'rgba(255, 159, 64, 0.2)'\r\n                                                                ],\r\n                                                                borderColor: [\r\n                                                                    'rgba(255, 99, 132, 1)',\r\n                                                                    'rgba(54, 162, 235, 1)',\r\n                                                                    'rgba(255, 206, 86, 1)',\r\n                                                                    'rgba(75, 192, 192, 1)',\r\n                                                                    'rgba(153, 102, 255, 1)',\r\n                                                                    'rgba(255, 159, 64, 1)'\r\n                                                                ],\r\n                                                                borderWidth: 1,\r\n                                                                data: solds\r\n                                                            }\r\n                                                        ]\r\n                                                    }\r\n                                                    \r\n                                                }\r\n                                                    options={{\r\n                                                        legend: { display: false },\r\n                                                        title: {\r\n                                                            display: true,\r\n                                                            text: \"Alooo aloooo\"\r\n                                                        }\r\n                                                    }}\r\n                                                />\r\n\r\n                                            </td>\r\n                                        </tbody>\r\n                                    </Table>\r\n                                )}\r\n                    </Col>\r\n                )\r\n                    : (\r\n                        <Col md={8}>\r\n                            <Message variant='warning'>Please entered From Date and To Date to Statistic</Message>\r\n                        </Col>\r\n                    )\r\n                }\r\n\r\n            </Row>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default RevenueScreen",{"ruleId":"787","replacedBy":"788"},{"ruleId":"789","replacedBy":"790"},{"ruleId":"791","severity":1,"message":"792","line":2,"column":17,"nodeType":"793","messageId":"794","endLine":2,"endColumn":21},{"ruleId":"795","severity":1,"message":"796","line":58,"column":29,"nodeType":"797","endLine":59,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":69,"column":29,"nodeType":"797","endLine":70,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":77,"column":29,"nodeType":"797","endLine":78,"endColumn":48},{"ruleId":"791","severity":1,"message":"792","line":2,"column":17,"nodeType":"793","messageId":"794","endLine":2,"endColumn":21},{"ruleId":"791","severity":1,"message":"798","line":2,"column":10,"nodeType":"793","messageId":"794","endLine":2,"endColumn":15},{"ruleId":"787","replacedBy":"799"},{"ruleId":"789","replacedBy":"800"},{"ruleId":"801","severity":1,"message":"802","line":5,"column":22,"nodeType":"803","messageId":"804","endLine":5,"endColumn":25},{"ruleId":"787","replacedBy":"805"},{"ruleId":"789","replacedBy":"806"},{"ruleId":"795","severity":1,"message":"796","line":58,"column":29,"nodeType":"797","endLine":59,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":69,"column":29,"nodeType":"797","endLine":70,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":77,"column":29,"nodeType":"797","endLine":78,"endColumn":48},{"ruleId":"801","severity":1,"message":"802","line":5,"column":22,"nodeType":"803","messageId":"804","endLine":5,"endColumn":25},{"ruleId":"791","severity":1,"message":"807","line":5,"column":41,"nodeType":"793","messageId":"794","endLine":5,"endColumn":46},{"ruleId":"791","severity":1,"message":"808","line":26,"column":11,"nodeType":"793","messageId":"794","endLine":26,"endColumn":22},{"ruleId":"787","replacedBy":"809"},{"ruleId":"789","replacedBy":"810"},{"ruleId":"791","severity":1,"message":"811","line":4,"column":47,"nodeType":"793","messageId":"794","endLine":4,"endColumn":53},{"ruleId":"791","severity":1,"message":"812","line":3,"column":28,"nodeType":"793","messageId":"794","endLine":3,"endColumn":36},{"ruleId":"795","severity":1,"message":"796","line":61,"column":29,"nodeType":"797","endLine":62,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":72,"column":29,"nodeType":"797","endLine":73,"endColumn":48},{"ruleId":"795","severity":1,"message":"796","line":80,"column":29,"nodeType":"797","endLine":81,"endColumn":48},{"ruleId":"791","severity":1,"message":"813","line":13,"column":39,"nodeType":"793","messageId":"794","endLine":13,"endColumn":68},{"ruleId":"791","severity":1,"message":"814","line":7,"column":21,"nodeType":"793","messageId":"794","endLine":7,"endColumn":31},{"ruleId":"791","severity":1,"message":"815","line":19,"column":8,"nodeType":"793","messageId":"794","endLine":19,"endColumn":18},{"ruleId":"801","severity":1,"message":"802","line":6,"column":22,"nodeType":"803","messageId":"804","endLine":6,"endColumn":25},{"ruleId":"791","severity":1,"message":"807","line":5,"column":41,"nodeType":"793","messageId":"794","endLine":5,"endColumn":46},{"ruleId":"791","severity":1,"message":"808","line":31,"column":11,"nodeType":"793","messageId":"794","endLine":31,"endColumn":22},{"ruleId":"791","severity":1,"message":"816","line":41,"column":5,"nodeType":"793","messageId":"794","endLine":41,"endColumn":32},{"ruleId":"791","severity":1,"message":"817","line":2,"column":76,"nodeType":"793","messageId":"794","endLine":2,"endColumn":95},{"ruleId":"791","severity":1,"message":"818","line":136,"column":17,"nodeType":"793","messageId":"794","endLine":136,"endColumn":21},{"ruleId":"791","severity":1,"message":"818","line":136,"column":17,"nodeType":"793","messageId":"794","endLine":136,"endColumn":21},{"ruleId":"791","severity":1,"message":"819","line":4,"column":26,"nodeType":"793","messageId":"794","endLine":4,"endColumn":31},{"ruleId":"791","severity":1,"message":"820","line":26,"column":17,"nodeType":"793","messageId":"794","endLine":26,"endColumn":23},{"ruleId":"791","severity":1,"message":"821","line":27,"column":25,"nodeType":"793","messageId":"794","endLine":27,"endColumn":39},{"ruleId":"822","severity":1,"message":"823","line":38,"column":8,"nodeType":"824","endLine":38,"endColumn":29,"suggestions":"825"},{"ruleId":"791","severity":1,"message":"819","line":3,"column":39,"nodeType":"793","messageId":"794","endLine":3,"endColumn":44},{"ruleId":"791","severity":1,"message":"826","line":1,"column":17,"nodeType":"793","messageId":"794","endLine":1,"endColumn":25},{"ruleId":"791","severity":1,"message":"819","line":4,"column":31,"nodeType":"793","messageId":"794","endLine":4,"endColumn":36},{"ruleId":"791","severity":1,"message":"827","line":9,"column":10,"nodeType":"793","messageId":"794","endLine":9,"endColumn":30},{"ruleId":"791","severity":1,"message":"828","line":39,"column":22,"nodeType":"793","messageId":"794","endLine":39,"endColumn":36},{"ruleId":"801","severity":1,"message":"802","line":9,"column":26,"nodeType":"803","messageId":"804","endLine":9,"endColumn":29},{"ruleId":"791","severity":1,"message":"815","line":9,"column":8,"nodeType":"793","messageId":"794","endLine":9,"endColumn":18},{"ruleId":"801","severity":1,"message":"802","line":11,"column":24,"nodeType":"803","messageId":"804","endLine":11,"endColumn":27},"no-native-reassign",["829"],"no-negated-in-lhs",["830"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Route' is defined but never used.",["829"],["830"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected",["829"],["830"],"'Toast' is defined but never used.","'toggleShowA' is assigned a value but never used.",["829"],["830"],"'Button' is defined but never used.","'Dropdown' is defined but never used.","'PRODUCT_CREATE_REVIEW_SUCCESS' is defined but never used.","'deleteUser' is defined but never used.","'Navigation' is defined but never used.","'PRODUCT_CREATE_REVIEW_RESET' is defined but never used.","'BRAND_DETAILS_RESET' is defined but never used.","'data' is assigned a value but never used.","'Image' is defined but never used.","'setQty' is assigned a value but never used.","'setImportPrice' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'importPrice' and 'qty'. Either include them or remove the dependency array.","ArrayExpression",["831"],"'useState' is defined but never used.","'RECEIPT_CANCEL_RESET' is defined but never used.","'loadingReceive' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"832","fix":"833"},"Update the dependencies array to be: [dispatch, importPrice, productId, qty]",{"range":"834","text":"835"},[1455,1476],"[dispatch, importPrice, productId, qty]"]