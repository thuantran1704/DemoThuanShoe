{"version":3,"file":"react-comparison-slider.cjs.development.js","sources":["../src/util.ts","../src/index.tsx"],"sourcesContent":["const aspectRatioRegex = new RegExp(/(\\d+)(:|x)(\\d+)/);\n\nexport function calculateAspectRatio(ratio: number | string) {\n  const asNumber = Number(ratio);\n  const asString = String(ratio);\n\n  const isNumber = !isNaN(asNumber);\n\n  if (isNumber) {\n    return (1 / asNumber) * 100;\n  } else {\n    const match = asString.match(aspectRatioRegex);\n    if (!match)\n      throw Error(\n        'Please use a valid aspect ratio delimeter, either \"x\" or \":\"'\n      );\n\n    const width = Number(match[1]);\n    const height = Number(match[3]);\n    return (height / width) * 100;\n  }\n}\n\nexport function isFunction(functionToCheck: Function) {\n  return (\n    functionToCheck && {}.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","import React, { FC } from 'react';\nimport { Direction, Range } from 'react-range';\nimport { IThumbProps } from 'react-range/lib/types';\nimport { styled } from '@stitches/react';\n\nimport { calculateAspectRatio, isFunction } from './util';\n\nexport interface ComparisonSliderHandleProps extends IThumbProps {\n  isFocused: boolean;\n}\n\nexport type ComparisonSliderProps = ComparisonSliderStatefulProps &\n  ComparisonSliderCommonProps;\n\ninterface ComparisonSliderCommonProps {\n  itemOne:\n    | React.ReactNode\n    | (({ value }: { value: number }) => React.ReactNode);\n  itemTwo:\n    | React.ReactNode\n    | (({ value }: { value: number }) => React.ReactNode);\n  aspectRatio: number | string;\n  handleBefore?: React.ReactNode;\n  handleAfter?: React.ReactNode;\n  handle?: (props: ComparisonSliderHandleProps) => React.ReactNode;\n  orientation?: 'vertical' | 'horizontal';\n  onlyHandleDraggable?: boolean;\n}\n\ntype ComparisonSliderStatefulProps =\n  | { defaultValue: number; value?: never; onValueChange?: never }\n  | {\n      value: number;\n      onValueChange: (value: number) => void;\n      defaultValue?: never;\n    };\n\nconst PinnedDiv = styled('div', {\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  position: 'absolute',\n});\n\nconst Track = styled(PinnedDiv, {\n  background: 'transparent',\n  zIndex: 10,\n});\n\nconst RangeWrap = PinnedDiv;\n\nconst Element = styled(PinnedDiv, {\n  '> *': {\n    height: '100%',\n  },\n\n  '> *:not(style) + *': {\n    height: 'unset',\n  },\n});\n\nconst Handle = styled('div', {\n  width: 16,\n  height: 16,\n  background: 'white',\n  borderRadius: '100%',\n  border: '1px solid transparent',\n  '&:focus': {\n    outline: 'none',\n    boxShadow: '0 0 0 2px rgba(0, 0, 0, 0.25)',\n    borderColor: 'rgba(0, 0, 0, 1)',\n  },\n});\n\nconst AspectWrap = styled('div', {\n  height: 0,\n  position: 'relative',\n});\n\nconst HandleDecoration = styled('div', {\n  flex: '1 1 0%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  pointerEvents: 'all',\n});\n\nconst HandleCanvasWrap = styled('div', {\n  display: 'flex',\n  '&:focus': {\n    outline: 'none',\n  },\n});\n\nconst HandleWrap = styled('div', {\n  flexShrink: 0,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  zIndex: 1,\n});\n\nconst DefaultHandle = (props: ComparisonSliderHandleProps) => {\n  const { isFocused, ...rest } = props;\n  return <Handle {...rest}></Handle>;\n};\n\nexport const ComparisonSlider: FC<ComparisonSliderProps> = ({\n  itemOne,\n  itemTwo,\n  aspectRatio,\n  defaultValue,\n  value,\n  handle = DefaultHandle,\n  handleBefore = null,\n  handleAfter = null,\n  orientation = 'horizontal',\n  onValueChange = () => {},\n  onlyHandleDraggable = false,\n}) => {\n  const [focused, setFocused] = React.useState(false);\n  const [localValue, setLocalValue] = React.useState(defaultValue);\n  const isControlled =\n    typeof defaultValue === 'undefined' && typeof value !== 'undefined';\n\n  const isHorizontal = orientation === 'horizontal';\n\n  const sliderValue = (isControlled ? value : localValue) as number;\n\n  const padding = calculateAspectRatio(aspectRatio);\n  const clipPath = isHorizontal\n    ? `polygon(${sliderValue}% 0, 100% 0%, 100% 100%, ${sliderValue}% 100%)`\n    : `polygon(0% 100%, 0% ${100 - sliderValue}%, 100% ${\n        100 - sliderValue\n      }%, 100% 100%)`;\n\n  const handleChange = (newValue: number) => {\n    if (isControlled) {\n      onValueChange(newValue);\n    } else {\n      setLocalValue(newValue);\n    }\n  };\n\n  const ItemOne =\n    itemOne && isFunction(itemOne as Function)\n      ? (itemOne as Function)({ value: sliderValue })\n      : itemOne;\n\n  const ItemTwo =\n    itemTwo && isFunction(itemTwo as Function)\n      ? (itemTwo as Function)({ value: sliderValue })\n      : itemTwo;\n\n  const baseSlides = [\n    <React.Fragment>{ItemOne}</React.Fragment>,\n    <React.Fragment>{ItemTwo}</React.Fragment>,\n  ];\n\n  const direction = isHorizontal ? Direction.Right : Direction.Up;\n\n  const slides = isHorizontal ? baseSlides : baseSlides.reverse();\n\n  return (\n    <AspectWrap style={{ paddingBottom: `${padding}%` }}>\n      <React.Fragment>\n        {slides.map((content, index) => {\n          return (\n            <Element\n              style={{ clipPath: index === 1 ? clipPath : '' }}\n              key={index}\n            >\n              {content}\n            </Element>\n          );\n        })}\n      </React.Fragment>\n\n      <RangeWrap>\n        <Range\n          step={1}\n          min={0}\n          max={100}\n          values={[sliderValue]}\n          onChange={(values) => handleChange(values[0])}\n          direction={direction}\n          renderTrack={({ props, children }) => (\n            <Track\n              className=\"\"\n              {...props}\n              style={{\n                ...props.style,\n                pointerEvents: onlyHandleDraggable ? 'none' : 'all',\n              }}\n            >\n              {children}\n            </Track>\n          )}\n          renderThumb={(params) => {\n            let props: ComparisonSliderHandleProps = {\n              ...params.props,\n              isFocused: focused,\n            };\n            return (\n              <HandleCanvasWrap\n                {...params.props}\n                style={{\n                  ...params.props.style,\n                  flexDirection: isHorizontal ? 'column' : 'row',\n                  height: isHorizontal ? '100%' : 'auto',\n                  width: isHorizontal ? 'auto' : '100%',\n                }}\n                onFocus={() => setFocused(true)}\n                onBlur={() => setFocused(false)}\n              >\n                <HandleDecoration>{handleBefore}</HandleDecoration>\n                <HandleWrap style={{ pointerEvents: 'all' }}>\n                  {/* @ts-ignore */}\n                  {handle(props)}\n                </HandleWrap>\n                <HandleDecoration>{handleAfter}</HandleDecoration>\n              </HandleCanvasWrap>\n            );\n          }}\n        />\n      </RangeWrap>\n    </AspectWrap>\n  );\n};\n"],"names":["aspectRatioRegex","RegExp","calculateAspectRatio","ratio","asNumber","Number","asString","String","isNumber","isNaN","match","Error","width","height","isFunction","functionToCheck","toString","call","PinnedDiv","styled","top","left","right","bottom","position","Track","background","zIndex","RangeWrap","Element","Handle","borderRadius","border","outline","boxShadow","borderColor","AspectWrap","HandleDecoration","flex","display","flexDirection","alignItems","justifyContent","pointerEvents","HandleCanvasWrap","HandleWrap","flexShrink","DefaultHandle","props","rest","React","ComparisonSlider","itemOne","itemTwo","aspectRatio","defaultValue","value","handle","handleBefore","handleAfter","orientation","onValueChange","onlyHandleDraggable","useState","focused","setFocused","localValue","setLocalValue","isControlled","isHorizontal","sliderValue","padding","clipPath","handleChange","newValue","ItemOne","ItemTwo","baseSlides","Fragment","direction","Direction","Right","Up","slides","reverse","style","paddingBottom","map","content","index","key","Range","step","min","max","values","onChange","renderTrack","children","className","renderThumb","params","isFocused","onFocus","onBlur"],"mappings":"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"}