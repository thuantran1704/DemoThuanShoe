{"version":3,"file":"react-comparison-slider.cjs.production.min.js","sources":["../src/util.ts","../src/index.tsx"],"sourcesContent":["const aspectRatioRegex = new RegExp(/(\\d+)(:|x)(\\d+)/);\n\nexport function calculateAspectRatio(ratio: number | string) {\n  const asNumber = Number(ratio);\n  const asString = String(ratio);\n\n  const isNumber = !isNaN(asNumber);\n\n  if (isNumber) {\n    return (1 / asNumber) * 100;\n  } else {\n    const match = asString.match(aspectRatioRegex);\n    if (!match)\n      throw Error(\n        'Please use a valid aspect ratio delimeter, either \"x\" or \":\"'\n      );\n\n    const width = Number(match[1]);\n    const height = Number(match[3]);\n    return (height / width) * 100;\n  }\n}\n\nexport function isFunction(functionToCheck: Function) {\n  return (\n    functionToCheck && {}.toString.call(functionToCheck) === '[object Function]'\n  );\n}\n","import React, { FC } from 'react';\nimport { Direction, Range } from 'react-range';\nimport { IThumbProps } from 'react-range/lib/types';\nimport { styled } from '@stitches/react';\n\nimport { calculateAspectRatio, isFunction } from './util';\n\nexport interface ComparisonSliderHandleProps extends IThumbProps {\n  isFocused: boolean;\n}\n\nexport type ComparisonSliderProps = ComparisonSliderStatefulProps &\n  ComparisonSliderCommonProps;\n\ninterface ComparisonSliderCommonProps {\n  itemOne:\n    | React.ReactNode\n    | (({ value }: { value: number }) => React.ReactNode);\n  itemTwo:\n    | React.ReactNode\n    | (({ value }: { value: number }) => React.ReactNode);\n  aspectRatio: number | string;\n  handleBefore?: React.ReactNode;\n  handleAfter?: React.ReactNode;\n  handle?: (props: ComparisonSliderHandleProps) => React.ReactNode;\n  orientation?: 'vertical' | 'horizontal';\n  onlyHandleDraggable?: boolean;\n}\n\ntype ComparisonSliderStatefulProps =\n  | { defaultValue: number; value?: never; onValueChange?: never }\n  | {\n      value: number;\n      onValueChange: (value: number) => void;\n      defaultValue?: never;\n    };\n\nconst PinnedDiv = styled('div', {\n  width: '100%',\n  height: '100%',\n  top: 0,\n  left: 0,\n  right: 0,\n  bottom: 0,\n  position: 'absolute',\n});\n\nconst Track = styled(PinnedDiv, {\n  background: 'transparent',\n  zIndex: 10,\n});\n\nconst RangeWrap = PinnedDiv;\n\nconst Element = styled(PinnedDiv, {\n  '> *': {\n    height: '100%',\n  },\n\n  '> *:not(style) + *': {\n    height: 'unset',\n  },\n});\n\nconst Handle = styled('div', {\n  width: 16,\n  height: 16,\n  background: 'white',\n  borderRadius: '100%',\n  border: '1px solid transparent',\n  '&:focus': {\n    outline: 'none',\n    boxShadow: '0 0 0 2px rgba(0, 0, 0, 0.25)',\n    borderColor: 'rgba(0, 0, 0, 1)',\n  },\n});\n\nconst AspectWrap = styled('div', {\n  height: 0,\n  position: 'relative',\n});\n\nconst HandleDecoration = styled('div', {\n  flex: '1 1 0%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  pointerEvents: 'all',\n});\n\nconst HandleCanvasWrap = styled('div', {\n  display: 'flex',\n  '&:focus': {\n    outline: 'none',\n  },\n});\n\nconst HandleWrap = styled('div', {\n  flexShrink: 0,\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  zIndex: 1,\n});\n\nconst DefaultHandle = (props: ComparisonSliderHandleProps) => {\n  const { isFocused, ...rest } = props;\n  return <Handle {...rest}></Handle>;\n};\n\nexport const ComparisonSlider: FC<ComparisonSliderProps> = ({\n  itemOne,\n  itemTwo,\n  aspectRatio,\n  defaultValue,\n  value,\n  handle = DefaultHandle,\n  handleBefore = null,\n  handleAfter = null,\n  orientation = 'horizontal',\n  onValueChange = () => {},\n  onlyHandleDraggable = false,\n}) => {\n  const [focused, setFocused] = React.useState(false);\n  const [localValue, setLocalValue] = React.useState(defaultValue);\n  const isControlled =\n    typeof defaultValue === 'undefined' && typeof value !== 'undefined';\n\n  const isHorizontal = orientation === 'horizontal';\n\n  const sliderValue = (isControlled ? value : localValue) as number;\n\n  const padding = calculateAspectRatio(aspectRatio);\n  const clipPath = isHorizontal\n    ? `polygon(${sliderValue}% 0, 100% 0%, 100% 100%, ${sliderValue}% 100%)`\n    : `polygon(0% 100%, 0% ${100 - sliderValue}%, 100% ${\n        100 - sliderValue\n      }%, 100% 100%)`;\n\n  const handleChange = (newValue: number) => {\n    if (isControlled) {\n      onValueChange(newValue);\n    } else {\n      setLocalValue(newValue);\n    }\n  };\n\n  const ItemOne =\n    itemOne && isFunction(itemOne as Function)\n      ? (itemOne as Function)({ value: sliderValue })\n      : itemOne;\n\n  const ItemTwo =\n    itemTwo && isFunction(itemTwo as Function)\n      ? (itemTwo as Function)({ value: sliderValue })\n      : itemTwo;\n\n  const baseSlides = [\n    <React.Fragment>{ItemOne}</React.Fragment>,\n    <React.Fragment>{ItemTwo}</React.Fragment>,\n  ];\n\n  const direction = isHorizontal ? Direction.Right : Direction.Up;\n\n  const slides = isHorizontal ? baseSlides : baseSlides.reverse();\n\n  return (\n    <AspectWrap style={{ paddingBottom: `${padding}%` }}>\n      <React.Fragment>\n        {slides.map((content, index) => {\n          return (\n            <Element\n              style={{ clipPath: index === 1 ? clipPath : '' }}\n              key={index}\n            >\n              {content}\n            </Element>\n          );\n        })}\n      </React.Fragment>\n\n      <RangeWrap>\n        <Range\n          step={1}\n          min={0}\n          max={100}\n          values={[sliderValue]}\n          onChange={(values) => handleChange(values[0])}\n          direction={direction}\n          renderTrack={({ props, children }) => (\n            <Track\n              className=\"\"\n              {...props}\n              style={{\n                ...props.style,\n                pointerEvents: onlyHandleDraggable ? 'none' : 'all',\n              }}\n            >\n              {children}\n            </Track>\n          )}\n          renderThumb={(params) => {\n            let props: ComparisonSliderHandleProps = {\n              ...params.props,\n              isFocused: focused,\n            };\n            return (\n              <HandleCanvasWrap\n                {...params.props}\n                style={{\n                  ...params.props.style,\n                  flexDirection: isHorizontal ? 'column' : 'row',\n                  height: isHorizontal ? '100%' : 'auto',\n                  width: isHorizontal ? 'auto' : '100%',\n                }}\n                onFocus={() => setFocused(true)}\n                onBlur={() => setFocused(false)}\n              >\n                <HandleDecoration>{handleBefore}</HandleDecoration>\n                <HandleWrap style={{ pointerEvents: 'all' }}>\n                  {/* @ts-ignore */}\n                  {handle(props)}\n                </HandleWrap>\n                <HandleDecoration>{handleAfter}</HandleDecoration>\n              </HandleCanvasWrap>\n            );\n          }}\n        />\n      </RangeWrap>\n    </AspectWrap>\n  );\n};\n"],"names":["aspectRatioRegex","RegExp","isFunction","functionToCheck","toString","call","PinnedDiv","styled","width","height","top","left","right","bottom","position","Track","background","zIndex","RangeWrap","Element","Handle","borderRadius","border","outline","boxShadow","borderColor","AspectWrap","HandleDecoration","flex","display","flexDirection","alignItems","justifyContent","pointerEvents","HandleCanvasWrap","HandleWrap","flexShrink","DefaultHandle","props","rest","React","itemOne","itemTwo","aspectRatio","defaultValue","value","handle","handleBefore","handleAfter","orientation","onValueChange","onlyHandleDraggable","useState","focused","setFocused","setLocalValue","isControlled","isHorizontal","sliderValue","padding","ratio","asNumber","Number","asString","String","isNaN","match","Error","calculateAspectRatio","clipPath","ItemOne","ItemTwo","baseSlides","Fragment","direction","Direction","Right","Up","slides","reverse","style","paddingBottom","map","content","index","key","Range","step","min","max","values","onChange","newValue","renderTrack","children","className","renderThumb","params","isFocused","onFocus","onBlur"],"mappings":"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"}